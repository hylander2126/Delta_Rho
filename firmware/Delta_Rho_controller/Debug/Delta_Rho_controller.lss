
Delta_Rho_controller.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000034  00800100  000012ca  0000135e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000012ca  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000055  00800134  00800134  00001392  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001392  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000013c4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000130  00000000  00000000  00001404  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001e62  00000000  00000000  00001534  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000b6a  00000000  00000000  00003396  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001068  00000000  00000000  00003f00  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000594  00000000  00000000  00004f68  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000082f  00000000  00000000  000054fc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001d94  00000000  00000000  00005d2b  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000138  00000000  00000000  00007abf  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	68 c0       	rjmp	.+208    	; 0xd2 <__ctors_end>
       2:	00 00       	nop
       4:	84 c0       	rjmp	.+264    	; 0x10e <__bad_interrupt>
       6:	00 00       	nop
       8:	82 c0       	rjmp	.+260    	; 0x10e <__bad_interrupt>
       a:	00 00       	nop
       c:	80 c0       	rjmp	.+256    	; 0x10e <__bad_interrupt>
       e:	00 00       	nop
      10:	7e c0       	rjmp	.+252    	; 0x10e <__bad_interrupt>
      12:	00 00       	nop
      14:	7c c0       	rjmp	.+248    	; 0x10e <__bad_interrupt>
      16:	00 00       	nop
      18:	7a c0       	rjmp	.+244    	; 0x10e <__bad_interrupt>
      1a:	00 00       	nop
      1c:	78 c0       	rjmp	.+240    	; 0x10e <__bad_interrupt>
      1e:	00 00       	nop
      20:	76 c0       	rjmp	.+236    	; 0x10e <__bad_interrupt>
      22:	00 00       	nop
      24:	74 c0       	rjmp	.+232    	; 0x10e <__bad_interrupt>
      26:	00 00       	nop
      28:	72 c0       	rjmp	.+228    	; 0x10e <__bad_interrupt>
      2a:	00 00       	nop
      2c:	70 c0       	rjmp	.+224    	; 0x10e <__bad_interrupt>
      2e:	00 00       	nop
      30:	6e c0       	rjmp	.+220    	; 0x10e <__bad_interrupt>
      32:	00 00       	nop
      34:	6c c0       	rjmp	.+216    	; 0x10e <__bad_interrupt>
      36:	00 00       	nop
      38:	6a c0       	rjmp	.+212    	; 0x10e <__bad_interrupt>
      3a:	00 00       	nop
      3c:	68 c0       	rjmp	.+208    	; 0x10e <__bad_interrupt>
      3e:	00 00       	nop
      40:	66 c0       	rjmp	.+204    	; 0x10e <__bad_interrupt>
      42:	00 00       	nop
      44:	64 c0       	rjmp	.+200    	; 0x10e <__bad_interrupt>
      46:	00 00       	nop
      48:	62 c0       	rjmp	.+196    	; 0x10e <__bad_interrupt>
      4a:	00 00       	nop
      4c:	60 c0       	rjmp	.+192    	; 0x10e <__bad_interrupt>
      4e:	00 00       	nop
      50:	5e c0       	rjmp	.+188    	; 0x10e <__bad_interrupt>
      52:	00 00       	nop
      54:	5c c0       	rjmp	.+184    	; 0x10e <__bad_interrupt>
      56:	00 00       	nop
      58:	5a c0       	rjmp	.+180    	; 0x10e <__bad_interrupt>
      5a:	00 00       	nop
      5c:	58 c0       	rjmp	.+176    	; 0x10e <__bad_interrupt>
      5e:	00 00       	nop
      60:	56 c0       	rjmp	.+172    	; 0x10e <__bad_interrupt>
      62:	00 00       	nop
      64:	54 c0       	rjmp	.+168    	; 0x10e <__bad_interrupt>
      66:	00 00       	nop
      68:	52 c0       	rjmp	.+164    	; 0x10e <__bad_interrupt>
      6a:	00 00       	nop
      6c:	50 c0       	rjmp	.+160    	; 0x10e <__bad_interrupt>
      6e:	00 00       	nop
      70:	6f c1       	rjmp	.+734    	; 0x350 <__vector_28>
      72:	00 00       	nop
      74:	4c c0       	rjmp	.+152    	; 0x10e <__bad_interrupt>
      76:	00 00       	nop
      78:	4a c0       	rjmp	.+148    	; 0x10e <__bad_interrupt>
      7a:	00 00       	nop
      7c:	48 c0       	rjmp	.+144    	; 0x10e <__bad_interrupt>
      7e:	00 00       	nop
      80:	85 c2       	rjmp	.+1290   	; 0x58c <__vector_32>
      82:	00 00       	nop
      84:	44 c0       	rjmp	.+136    	; 0x10e <__bad_interrupt>
      86:	00 00       	nop
      88:	42 c0       	rjmp	.+132    	; 0x10e <__bad_interrupt>
      8a:	00 00       	nop
      8c:	07 2c       	mov	r0, r7
      8e:	7a a5       	ldd	r23, Y+42	; 0x2a
      90:	ba 6c       	ori	r27, 0xCA	; 202
      92:	c5 90       	lpm	r12, Z+
      94:	da 3b       	cpi	r29, 0xBA	; 186
      96:	93 65       	ori	r25, 0x53	; 83
      98:	fc 8b       	std	Y+20, r31	; 0x14
      9a:	bc 53       	subi	r27, 0x3C	; 60
      9c:	f8 10       	cpse	r15, r8
      9e:	fd 3c       	cpi	r31, 0xCD	; 205
      a0:	56 92       	lac	Z, r5
      a2:	83 4d       	sbci	r24, 0xD3	; 211
      a4:	bd 87       	std	Y+13, r27	; 0x0d
      a6:	9d 3a       	cpi	r25, 0xAD	; 173
      a8:	b6 3d       	cpi	r27, 0xD6	; 214
      aa:	cb c9       	rjmp	.-3178   	; 0xfffff442 <__eeprom_end+0xff7ef442>
      ac:	bf 5b       	subi	r27, 0xBF	; 191
      ae:	be 73       	andi	r27, 0x3E	; 62
      b0:	da 0f       	add	r29, r26
      b2:	c9 3f       	cpi	r28, 0xF9	; 249
      b4:	05 a8       	ldd	r0, Z+53	; 0x35
      b6:	4c cd       	rjmp	.-1384   	; 0xfffffb50 <__eeprom_end+0xff7efb50>
      b8:	b2 d4       	rcall	.+2404   	; 0xa1e <controller_test+0x50>
      ba:	4e b9       	out	0x0e, r20	; 14
      bc:	38 36       	cpi	r19, 0x68	; 104
      be:	a9 02       	muls	r26, r25
      c0:	0c 50       	subi	r16, 0x0C	; 12
      c2:	b9 91       	ld	r27, Y+
      c4:	86 88       	ldd	r8, Z+22	; 0x16
      c6:	08 3c       	cpi	r16, 0xC8	; 200
      c8:	a6 aa       	std	Z+54, r10	; 0x36
      ca:	aa 2a       	or	r10, r26
      cc:	be 00       	.word	0x00be	; ????
      ce:	00 00       	nop
      d0:	80 3f       	cpi	r24, 0xF0	; 240

000000d2 <__ctors_end>:
      d2:	11 24       	eor	r1, r1
      d4:	1f be       	out	0x3f, r1	; 63
      d6:	cf ef       	ldi	r28, 0xFF	; 255
      d8:	d0 e4       	ldi	r29, 0x40	; 64
      da:	de bf       	out	0x3e, r29	; 62
      dc:	cd bf       	out	0x3d, r28	; 61

000000de <__do_copy_data>:
      de:	11 e0       	ldi	r17, 0x01	; 1
      e0:	a0 e0       	ldi	r26, 0x00	; 0
      e2:	b1 e0       	ldi	r27, 0x01	; 1
      e4:	ea ec       	ldi	r30, 0xCA	; 202
      e6:	f2 e1       	ldi	r31, 0x12	; 18
      e8:	00 e0       	ldi	r16, 0x00	; 0
      ea:	0b bf       	out	0x3b, r16	; 59
      ec:	02 c0       	rjmp	.+4      	; 0xf2 <__do_copy_data+0x14>
      ee:	07 90       	elpm	r0, Z+
      f0:	0d 92       	st	X+, r0
      f2:	a4 33       	cpi	r26, 0x34	; 52
      f4:	b1 07       	cpc	r27, r17
      f6:	d9 f7       	brne	.-10     	; 0xee <__do_copy_data+0x10>

000000f8 <__do_clear_bss>:
      f8:	21 e0       	ldi	r18, 0x01	; 1
      fa:	a4 e3       	ldi	r26, 0x34	; 52
      fc:	b1 e0       	ldi	r27, 0x01	; 1
      fe:	01 c0       	rjmp	.+2      	; 0x102 <.do_clear_bss_start>

00000100 <.do_clear_bss_loop>:
     100:	1d 92       	st	X+, r1

00000102 <.do_clear_bss_start>:
     102:	a9 38       	cpi	r26, 0x89	; 137
     104:	b2 07       	cpc	r27, r18
     106:	e1 f7       	brne	.-8      	; 0x100 <.do_clear_bss_loop>
     108:	4c d5       	rcall	.+2712   	; 0xba2 <main>
     10a:	0c 94 63 09 	jmp	0x12c6	; 0x12c6 <_exit>

0000010e <__bad_interrupt>:
     10e:	78 cf       	rjmp	.-272    	; 0x0 <__vectors>

00000110 <ADC_Initialize>:
			u[i][1] = abs(temp);
		}
		
		else{
			u[i][0] = abs(temp);
			u[i][1] = 0;
     110:	6f 92       	push	r6
     112:	7f 92       	push	r7
     114:	8f 92       	push	r8
     116:	9f 92       	push	r9
     118:	af 92       	push	r10
     11a:	cf 92       	push	r12
     11c:	ef 92       	push	r14
     11e:	ff 92       	push	r15
     120:	0f 93       	push	r16
     122:	1f 93       	push	r17
     124:	cf 93       	push	r28
     126:	df 93       	push	r29
     128:	ac e7       	ldi	r26, 0x7C	; 124
     12a:	b0 e0       	ldi	r27, 0x00	; 0
     12c:	1c 92       	st	X, r1
     12e:	ea e7       	ldi	r30, 0x7A	; 122
     130:	f0 e0       	ldi	r31, 0x00	; 0
     132:	10 82       	st	Z, r1
     134:	9b e7       	ldi	r25, 0x7B	; 123
     136:	69 2e       	mov	r6, r25
     138:	71 2c       	mov	r7, r1
     13a:	e3 01       	movw	r28, r6
     13c:	18 82       	st	Y, r1
     13e:	3e e7       	ldi	r19, 0x7E	; 126
     140:	83 2e       	mov	r8, r19
     142:	91 2c       	mov	r9, r1
     144:	e4 01       	movw	r28, r8
     146:	18 82       	st	Y, r1
     148:	30 81       	ld	r19, Z
     14a:	d0 e8       	ldi	r29, 0x80	; 128
     14c:	8d 9f       	mul	r24, r29
     14e:	c0 01       	movw	r24, r0
     150:	11 24       	eor	r1, r1
     152:	83 2b       	or	r24, r19
     154:	80 83       	st	Z, r24
     156:	e4 01       	movw	r28, r8
     158:	68 83       	st	Y, r22
     15a:	8c 91       	ld	r24, X
     15c:	d0 e4       	ldi	r29, 0x40	; 64
     15e:	4d 9f       	mul	r20, r29
     160:	a0 01       	movw	r20, r0
     162:	11 24       	eor	r1, r1
     164:	48 2b       	or	r20, r24
     166:	4c 93       	st	X, r20
     168:	8c 91       	ld	r24, X
     16a:	50 e2       	ldi	r21, 0x20	; 32
     16c:	05 9f       	mul	r16, r21
     16e:	80 01       	movw	r16, r0
     170:	11 24       	eor	r1, r1
     172:	08 2b       	or	r16, r24
     174:	0c 93       	st	X, r16
     176:	80 81       	ld	r24, Z
     178:	28 2b       	or	r18, r24
     17a:	20 83       	st	Z, r18
     17c:	80 81       	ld	r24, Z
     17e:	90 e2       	ldi	r25, 0x20	; 32
     180:	e9 9e       	mul	r14, r25
     182:	70 01       	movw	r14, r0
     184:	11 24       	eor	r1, r1
     186:	e8 2a       	or	r14, r24
     188:	e0 82       	st	Z, r14
     18a:	d3 01       	movw	r26, r6
     18c:	8c 91       	ld	r24, X
     18e:	c8 2a       	or	r12, r24
     190:	cc 92       	st	X, r12
     192:	80 81       	ld	r24, Z
     194:	aa 0c       	add	r10, r10
     196:	aa 0c       	add	r10, r10
     198:	aa 0c       	add	r10, r10
     19a:	a8 2a       	or	r10, r24
     19c:	a0 82       	st	Z, r10
     19e:	df 91       	pop	r29
     1a0:	cf 91       	pop	r28
     1a2:	1f 91       	pop	r17
     1a4:	0f 91       	pop	r16
     1a6:	ff 90       	pop	r15
     1a8:	ef 90       	pop	r14
     1aa:	cf 90       	pop	r12
     1ac:	af 90       	pop	r10
     1ae:	9f 90       	pop	r9
     1b0:	8f 90       	pop	r8
     1b2:	7f 90       	pop	r7
     1b4:	6f 90       	pop	r6
     1b6:	08 95       	ret

000001b8 <ADC_read>:
     1b8:	90 91 7c 00 	lds	r25, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
     1bc:	90 7e       	andi	r25, 0xE0	; 224
     1be:	90 93 7c 00 	sts	0x007C, r25	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
     1c2:	90 91 7c 00 	lds	r25, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
     1c6:	89 2b       	or	r24, r25
     1c8:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
     1cc:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
     1d0:	80 64       	ori	r24, 0x40	; 64
     1d2:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
     1d6:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
     1da:	84 ff       	sbrs	r24, 4
     1dc:	fc cf       	rjmp	.-8      	; 0x1d6 <ADC_read+0x1e>
     1de:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
     1e2:	80 61       	ori	r24, 0x10	; 16
     1e4:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
     1e8:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
     1ec:	20 91 79 00 	lds	r18, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
     1f0:	90 e0       	ldi	r25, 0x00	; 0
     1f2:	92 2b       	or	r25, r18
     1f4:	08 95       	ret

000001f6 <mC_init>:
     1f6:	af 92       	push	r10
     1f8:	cf 92       	push	r12
     1fa:	ef 92       	push	r14
     1fc:	0f 93       	push	r16
     1fe:	e1 e6       	ldi	r30, 0x61	; 97
     200:	f0 e0       	ldi	r31, 0x00	; 0
     202:	80 e8       	ldi	r24, 0x80	; 128
     204:	80 83       	st	Z, r24
     206:	10 82       	st	Z, r1
     208:	11 b8       	out	0x01, r1	; 1
     20a:	12 b8       	out	0x02, r1	; 2
     20c:	8f ef       	ldi	r24, 0xFF	; 255
     20e:	84 b9       	out	0x04, r24	; 4
     210:	15 b8       	out	0x05, r1	; 5
     212:	80 ef       	ldi	r24, 0xF0	; 240
     214:	87 b9       	out	0x07, r24	; 7
     216:	18 b8       	out	0x08, r1	; 8
     218:	8b ef       	ldi	r24, 0xFB	; 251
     21a:	8a b9       	out	0x0a, r24	; 10
     21c:	1b b8       	out	0x0b, r1	; 11
     21e:	91 ea       	ldi	r25, 0xA1	; 161
     220:	94 bd       	out	0x24, r25	; 36
     222:	82 e0       	ldi	r24, 0x02	; 2
     224:	85 bd       	out	0x25, r24	; 37
     226:	16 bc       	out	0x26, r1	; 38
     228:	17 bc       	out	0x27, r1	; 39
     22a:	18 bc       	out	0x28, r1	; 40
     22c:	90 93 80 00 	sts	0x0080, r25	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
     230:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
     234:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     238:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     23c:	10 92 87 00 	sts	0x0087, r1	; 0x800087 <__TEXT_REGION_LENGTH__+0x7e0087>
     240:	10 92 86 00 	sts	0x0086, r1	; 0x800086 <__TEXT_REGION_LENGTH__+0x7e0086>
     244:	10 92 89 00 	sts	0x0089, r1	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
     248:	10 92 88 00 	sts	0x0088, r1	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
     24c:	10 92 8b 00 	sts	0x008B, r1	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
     250:	10 92 8a 00 	sts	0x008A, r1	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
     254:	10 92 b6 00 	sts	0x00B6, r1	; 0x8000b6 <__TEXT_REGION_LENGTH__+0x7e00b6>
     258:	90 93 b0 00 	sts	0x00B0, r25	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
     25c:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7e00b1>
     260:	10 92 b2 00 	sts	0x00B2, r1	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7e00b2>
     264:	10 92 b3 00 	sts	0x00B3, r1	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7e00b3>
     268:	10 92 b4 00 	sts	0x00B4, r1	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7e00b4>
     26c:	10 92 90 00 	sts	0x0090, r1	; 0x800090 <__TEXT_REGION_LENGTH__+0x7e0090>
     270:	9d e0       	ldi	r25, 0x0D	; 13
     272:	90 93 91 00 	sts	0x0091, r25	; 0x800091 <__TEXT_REGION_LENGTH__+0x7e0091>
     276:	10 92 95 00 	sts	0x0095, r1	; 0x800095 <__TEXT_REGION_LENGTH__+0x7e0095>
     27a:	10 92 94 00 	sts	0x0094, r1	; 0x800094 <__TEXT_REGION_LENGTH__+0x7e0094>
     27e:	10 92 97 00 	sts	0x0097, r1	; 0x800097 <__TEXT_REGION_LENGTH__+0x7e0097>
     282:	10 92 96 00 	sts	0x0096, r1	; 0x800096 <__TEXT_REGION_LENGTH__+0x7e0096>
     286:	10 92 99 00 	sts	0x0099, r1	; 0x800099 <__TEXT_REGION_LENGTH__+0x7e0099>
     28a:	93 e6       	ldi	r25, 0x63	; 99
     28c:	90 93 98 00 	sts	0x0098, r25	; 0x800098 <__TEXT_REGION_LENGTH__+0x7e0098>
     290:	10 92 9b 00 	sts	0x009B, r1	; 0x80009b <__TEXT_REGION_LENGTH__+0x7e009b>
     294:	10 92 9a 00 	sts	0x009A, r1	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
     298:	10 92 6e 00 	sts	0x006E, r1	; 0x80006e <__TEXT_REGION_LENGTH__+0x7e006e>
     29c:	10 92 6f 00 	sts	0x006F, r1	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
     2a0:	10 92 70 00 	sts	0x0070, r1	; 0x800070 <__TEXT_REGION_LENGTH__+0x7e0070>
     2a4:	80 93 71 00 	sts	0x0071, r24	; 0x800071 <__TEXT_REGION_LENGTH__+0x7e0071>
     2a8:	a1 2c       	mov	r10, r1
     2aa:	c1 2c       	mov	r12, r1
     2ac:	e1 2c       	mov	r14, r1
     2ae:	00 e0       	ldi	r16, 0x00	; 0
     2b0:	27 e0       	ldi	r18, 0x07	; 7
     2b2:	41 e0       	ldi	r20, 0x01	; 1
     2b4:	69 e0       	ldi	r22, 0x09	; 9
     2b6:	81 e0       	ldi	r24, 0x01	; 1
     2b8:	2b df       	rcall	.-426    	; 0x110 <ADC_Initialize>
     2ba:	60 e0       	ldi	r22, 0x00	; 0
     2bc:	70 e0       	ldi	r23, 0x00	; 0
     2be:	88 ea       	ldi	r24, 0xA8	; 168
     2c0:	91 e4       	ldi	r25, 0x41	; 65
     2c2:	bb d6       	rcall	.+3446   	; 0x103a <lrint>
     2c4:	61 50       	subi	r22, 0x01	; 1
     2c6:	71 09       	sbc	r23, r1
     2c8:	70 93 cd 00 	sts	0x00CD, r23	; 0x8000cd <__TEXT_REGION_LENGTH__+0x7e00cd>
     2cc:	60 93 cc 00 	sts	0x00CC, r22	; 0x8000cc <__TEXT_REGION_LENGTH__+0x7e00cc>
     2d0:	e9 ec       	ldi	r30, 0xC9	; 201
     2d2:	f0 e0       	ldi	r31, 0x00	; 0
     2d4:	88 e1       	ldi	r24, 0x18	; 24
     2d6:	80 83       	st	Z, r24
     2d8:	aa ec       	ldi	r26, 0xCA	; 202
     2da:	b0 e0       	ldi	r27, 0x00	; 0
     2dc:	8c 91       	ld	r24, X
     2de:	86 60       	ori	r24, 0x06	; 6
     2e0:	8c 93       	st	X, r24
     2e2:	80 81       	ld	r24, Z
     2e4:	80 68       	ori	r24, 0x80	; 128
     2e6:	80 83       	st	Z, r24
     2e8:	0f 91       	pop	r16
     2ea:	ef 90       	pop	r14
     2ec:	cf 90       	pop	r12
     2ee:	af 90       	pop	r10
     2f0:	08 95       	ret

000002f2 <updateState>:
     2f2:	e0 91 94 00 	lds	r30, 0x0094	; 0x800094 <__TEXT_REGION_LENGTH__+0x7e0094>
     2f6:	f0 91 95 00 	lds	r31, 0x0095	; 0x800095 <__TEXT_REGION_LENGTH__+0x7e0095>
     2fa:	a0 91 98 00 	lds	r26, 0x0098	; 0x800098 <__TEXT_REGION_LENGTH__+0x7e0098>
     2fe:	b0 91 99 00 	lds	r27, 0x0099	; 0x800099 <__TEXT_REGION_LENGTH__+0x7e0099>
     302:	da 01       	movw	r26, r20
     304:	1c 92       	st	X, r1
     306:	d9 01       	movw	r26, r18
     308:	ed 93       	st	X+, r30
     30a:	fc 93       	st	X, r31
     30c:	fc 01       	movw	r30, r24
     30e:	db 01       	movw	r26, r22
     310:	bc 01       	movw	r22, r24
     312:	6a 5f       	subi	r22, 0xFA	; 250
     314:	7f 4f       	sbci	r23, 0xFF	; 255
     316:	40 81       	ld	r20, Z
     318:	51 81       	ldd	r21, Z+1	; 0x01
     31a:	90 91 c8 00 	lds	r25, 0x00C8	; 0x8000c8 <__TEXT_REGION_LENGTH__+0x7e00c8>
     31e:	97 ff       	sbrs	r25, 7
     320:	fc cf       	rjmp	.-8      	; 0x31a <updateState+0x28>
     322:	20 91 ce 00 	lds	r18, 0x00CE	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7e00ce>
     326:	90 91 c8 00 	lds	r25, 0x00C8	; 0x8000c8 <__TEXT_REGION_LENGTH__+0x7e00c8>
     32a:	97 ff       	sbrs	r25, 7
     32c:	fc cf       	rjmp	.-8      	; 0x326 <updateState+0x34>
     32e:	80 91 ce 00 	lds	r24, 0x00CE	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7e00ce>
     332:	30 e0       	ldi	r19, 0x00	; 0
     334:	38 2b       	or	r19, r24
     336:	21 93       	st	Z+, r18
     338:	31 93       	st	Z+, r19
     33a:	ca 01       	movw	r24, r20
     33c:	88 0f       	add	r24, r24
     33e:	99 1f       	adc	r25, r25
     340:	28 1b       	sub	r18, r24
     342:	39 0b       	sbc	r19, r25
     344:	2d 93       	st	X+, r18
     346:	3d 93       	st	X+, r19
     348:	e6 17       	cp	r30, r22
     34a:	f7 07       	cpc	r31, r23
     34c:	21 f7       	brne	.-56     	; 0x316 <updateState+0x24>
     34e:	08 95       	ret

00000350 <__vector_28>:
     350:	1f 92       	push	r1
     352:	0f 92       	push	r0
     354:	0f b6       	in	r0, 0x3f	; 63
     356:	0f 92       	push	r0
     358:	11 24       	eor	r1, r1
     35a:	0b b6       	in	r0, 0x3b	; 59
     35c:	0f 92       	push	r0
     35e:	2f 93       	push	r18
     360:	3f 93       	push	r19
     362:	4f 93       	push	r20
     364:	5f 93       	push	r21
     366:	6f 93       	push	r22
     368:	7f 93       	push	r23
     36a:	8f 93       	push	r24
     36c:	9f 93       	push	r25
     36e:	af 93       	push	r26
     370:	bf 93       	push	r27
     372:	ef 93       	push	r30
     374:	ff 93       	push	r31
     376:	80 91 c8 00 	lds	r24, 0x00C8	; 0x8000c8 <__TEXT_REGION_LENGTH__+0x7e00c8>
     37a:	87 ff       	sbrs	r24, 7
     37c:	fc cf       	rjmp	.-8      	; 0x376 <__vector_28+0x26>
     37e:	80 91 ce 00 	lds	r24, 0x00CE	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7e00ce>
     382:	85 35       	cpi	r24, 0x55	; 85
     384:	a1 f0       	breq	.+40     	; 0x3ae <__vector_28+0x5e>
     386:	47 9a       	sbi	0x08, 7	; 8
     388:	ff 91       	pop	r31
     38a:	ef 91       	pop	r30
     38c:	bf 91       	pop	r27
     38e:	af 91       	pop	r26
     390:	9f 91       	pop	r25
     392:	8f 91       	pop	r24
     394:	7f 91       	pop	r23
     396:	6f 91       	pop	r22
     398:	5f 91       	pop	r21
     39a:	4f 91       	pop	r20
     39c:	3f 91       	pop	r19
     39e:	2f 91       	pop	r18
     3a0:	0f 90       	pop	r0
     3a2:	0b be       	out	0x3b, r0	; 59
     3a4:	0f 90       	pop	r0
     3a6:	0f be       	out	0x3f, r0	; 63
     3a8:	0f 90       	pop	r0
     3aa:	1f 90       	pop	r1
     3ac:	18 95       	reti
     3ae:	80 91 c8 00 	lds	r24, 0x00C8	; 0x8000c8 <__TEXT_REGION_LENGTH__+0x7e00c8>
     3b2:	87 ff       	sbrs	r24, 7
     3b4:	fc cf       	rjmp	.-8      	; 0x3ae <__vector_28+0x5e>
     3b6:	80 91 ce 00 	lds	r24, 0x00CE	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7e00ce>
     3ba:	98 2f       	mov	r25, r24
     3bc:	9b 70       	andi	r25, 0x0B	; 11
     3be:	19 f7       	brne	.-58     	; 0x386 <__vector_28+0x36>
     3c0:	47 98       	cbi	0x08, 7	; 8
     3c2:	80 7f       	andi	r24, 0xF0	; 240
     3c4:	80 37       	cpi	r24, 0x70	; 112
     3c6:	09 f4       	brne	.+2      	; 0x3ca <__vector_28+0x7a>
     3c8:	dd c0       	rjmp	.+442    	; 0x584 <__LOCK_REGION_LENGTH__+0x184>
     3ca:	b8 f4       	brcc	.+46     	; 0x3fa <__vector_28+0xaa>
     3cc:	80 32       	cpi	r24, 0x20	; 32
     3ce:	09 f4       	brne	.+2      	; 0x3d2 <__vector_28+0x82>
     3d0:	cb c0       	rjmp	.+406    	; 0x568 <__LOCK_REGION_LENGTH__+0x168>
     3d2:	38 f5       	brcc	.+78     	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
     3d4:	88 23       	and	r24, r24
     3d6:	09 f4       	brne	.+2      	; 0x3da <__vector_28+0x8a>
     3d8:	7c c0       	rjmp	.+248    	; 0x4d2 <__LOCK_REGION_LENGTH__+0xd2>
     3da:	80 31       	cpi	r24, 0x10	; 16
     3dc:	a1 f6       	brne	.-88     	; 0x386 <__vector_28+0x36>
     3de:	ed e7       	ldi	r30, 0x7D	; 125
     3e0:	f1 e0       	ldi	r31, 0x01	; 1
     3e2:	91 91       	ld	r25, Z+
     3e4:	80 91 c8 00 	lds	r24, 0x00C8	; 0x8000c8 <__TEXT_REGION_LENGTH__+0x7e00c8>
     3e8:	85 ff       	sbrs	r24, 5
     3ea:	fc cf       	rjmp	.-8      	; 0x3e4 <__vector_28+0x94>
     3ec:	90 93 ce 00 	sts	0x00CE, r25	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7e00ce>
     3f0:	81 e0       	ldi	r24, 0x01	; 1
     3f2:	e3 38       	cpi	r30, 0x83	; 131
     3f4:	f8 07       	cpc	r31, r24
     3f6:	a9 f7       	brne	.-22     	; 0x3e2 <__vector_28+0x92>
     3f8:	c6 cf       	rjmp	.-116    	; 0x386 <__vector_28+0x36>
     3fa:	80 3a       	cpi	r24, 0xA0	; 160
     3fc:	09 f4       	brne	.+2      	; 0x400 <__LOCK_REGION_LENGTH__>
     3fe:	aa c0       	rjmp	.+340    	; 0x554 <__LOCK_REGION_LENGTH__+0x154>
     400:	28 f5       	brcc	.+74     	; 0x44c <__LOCK_REGION_LENGTH__+0x4c>
     402:	80 38       	cpi	r24, 0x80	; 128
     404:	09 f4       	brne	.+2      	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
     406:	8d c0       	rjmp	.+282    	; 0x522 <__LOCK_REGION_LENGTH__+0x122>
     408:	80 39       	cpi	r24, 0x90	; 144
     40a:	09 f0       	breq	.+2      	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
     40c:	bc cf       	rjmp	.-136    	; 0x386 <__vector_28+0x36>
     40e:	28 e3       	ldi	r18, 0x38	; 56
     410:	31 e0       	ldi	r19, 0x01	; 1
     412:	45 e3       	ldi	r20, 0x35	; 53
     414:	51 e0       	ldi	r21, 0x01	; 1
     416:	61 e7       	ldi	r22, 0x71	; 113
     418:	71 e0       	ldi	r23, 0x01	; 1
     41a:	8d e7       	ldi	r24, 0x7D	; 125
     41c:	91 e0       	ldi	r25, 0x01	; 1
     41e:	69 df       	rcall	.-302    	; 0x2f2 <updateState>
     420:	b2 cf       	rjmp	.-156    	; 0x386 <__vector_28+0x36>
     422:	80 33       	cpi	r24, 0x30	; 48
     424:	09 f4       	brne	.+2      	; 0x428 <__LOCK_REGION_LENGTH__+0x28>
     426:	47 c0       	rjmp	.+142    	; 0x4b6 <__LOCK_REGION_LENGTH__+0xb6>
     428:	80 35       	cpi	r24, 0x50	; 80
     42a:	09 f0       	breq	.+2      	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
     42c:	ac cf       	rjmp	.-168    	; 0x386 <__vector_28+0x36>
     42e:	e2 e4       	ldi	r30, 0x42	; 66
     430:	f1 e0       	ldi	r31, 0x01	; 1
     432:	28 e4       	ldi	r18, 0x48	; 72
     434:	31 e0       	ldi	r19, 0x01	; 1
     436:	91 91       	ld	r25, Z+
     438:	80 91 c8 00 	lds	r24, 0x00C8	; 0x8000c8 <__TEXT_REGION_LENGTH__+0x7e00c8>
     43c:	85 ff       	sbrs	r24, 5
     43e:	fc cf       	rjmp	.-8      	; 0x438 <__LOCK_REGION_LENGTH__+0x38>
     440:	90 93 ce 00 	sts	0x00CE, r25	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7e00ce>
     444:	2e 17       	cp	r18, r30
     446:	3f 07       	cpc	r19, r31
     448:	b1 f7       	brne	.-20     	; 0x436 <__LOCK_REGION_LENGTH__+0x36>
     44a:	9d cf       	rjmp	.-198    	; 0x386 <__vector_28+0x36>
     44c:	80 3b       	cpi	r24, 0xB0	; 176
     44e:	09 f4       	brne	.+2      	; 0x452 <__LOCK_REGION_LENGTH__+0x52>
     450:	4f c0       	rjmp	.+158    	; 0x4f0 <__LOCK_REGION_LENGTH__+0xf0>
     452:	80 3c       	cpi	r24, 0xC0	; 192
     454:	09 f0       	breq	.+2      	; 0x458 <__LOCK_REGION_LENGTH__+0x58>
     456:	97 cf       	rjmp	.-210    	; 0x386 <__vector_28+0x36>
     458:	80 91 c8 00 	lds	r24, 0x00C8	; 0x8000c8 <__TEXT_REGION_LENGTH__+0x7e00c8>
     45c:	87 ff       	sbrs	r24, 7
     45e:	fc cf       	rjmp	.-8      	; 0x458 <__LOCK_REGION_LENGTH__+0x58>
     460:	80 91 ce 00 	lds	r24, 0x00CE	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7e00ce>
     464:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
     468:	80 91 c8 00 	lds	r24, 0x00C8	; 0x8000c8 <__TEXT_REGION_LENGTH__+0x7e00c8>
     46c:	87 ff       	sbrs	r24, 7
     46e:	fc cf       	rjmp	.-8      	; 0x468 <__LOCK_REGION_LENGTH__+0x68>
     470:	80 91 ce 00 	lds	r24, 0x00CE	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7e00ce>
     474:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
     478:	80 91 c8 00 	lds	r24, 0x00C8	; 0x8000c8 <__TEXT_REGION_LENGTH__+0x7e00c8>
     47c:	87 ff       	sbrs	r24, 7
     47e:	fc cf       	rjmp	.-8      	; 0x478 <__LOCK_REGION_LENGTH__+0x78>
     480:	80 91 ce 00 	lds	r24, 0x00CE	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7e00ce>
     484:	87 bd       	out	0x27, r24	; 39
     486:	80 91 c8 00 	lds	r24, 0x00C8	; 0x8000c8 <__TEXT_REGION_LENGTH__+0x7e00c8>
     48a:	87 ff       	sbrs	r24, 7
     48c:	fc cf       	rjmp	.-8      	; 0x486 <__LOCK_REGION_LENGTH__+0x86>
     48e:	80 91 ce 00 	lds	r24, 0x00CE	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7e00ce>
     492:	88 bd       	out	0x28, r24	; 40
     494:	80 91 c8 00 	lds	r24, 0x00C8	; 0x8000c8 <__TEXT_REGION_LENGTH__+0x7e00c8>
     498:	87 ff       	sbrs	r24, 7
     49a:	fc cf       	rjmp	.-8      	; 0x494 <__LOCK_REGION_LENGTH__+0x94>
     49c:	80 91 ce 00 	lds	r24, 0x00CE	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7e00ce>
     4a0:	80 93 b3 00 	sts	0x00B3, r24	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7e00b3>
     4a4:	80 91 c8 00 	lds	r24, 0x00C8	; 0x8000c8 <__TEXT_REGION_LENGTH__+0x7e00c8>
     4a8:	87 ff       	sbrs	r24, 7
     4aa:	fc cf       	rjmp	.-8      	; 0x4a4 <__LOCK_REGION_LENGTH__+0xa4>
     4ac:	80 91 ce 00 	lds	r24, 0x00CE	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7e00ce>
     4b0:	80 93 b4 00 	sts	0x00B4, r24	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7e00b4>
     4b4:	68 cf       	rjmp	.-304    	; 0x386 <__vector_28+0x36>
     4b6:	e5 e6       	ldi	r30, 0x65	; 101
     4b8:	f1 e0       	ldi	r31, 0x01	; 1
     4ba:	91 91       	ld	r25, Z+
     4bc:	80 91 c8 00 	lds	r24, 0x00C8	; 0x8000c8 <__TEXT_REGION_LENGTH__+0x7e00c8>
     4c0:	85 ff       	sbrs	r24, 5
     4c2:	fc cf       	rjmp	.-8      	; 0x4bc <__LOCK_REGION_LENGTH__+0xbc>
     4c4:	90 93 ce 00 	sts	0x00CE, r25	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7e00ce>
     4c8:	81 e0       	ldi	r24, 0x01	; 1
     4ca:	eb 36       	cpi	r30, 0x6B	; 107
     4cc:	f8 07       	cpc	r31, r24
     4ce:	a9 f7       	brne	.-22     	; 0x4ba <__LOCK_REGION_LENGTH__+0xba>
     4d0:	5a cf       	rjmp	.-332    	; 0x386 <__vector_28+0x36>
     4d2:	e3 e8       	ldi	r30, 0x83	; 131
     4d4:	f1 e0       	ldi	r31, 0x01	; 1
     4d6:	29 e8       	ldi	r18, 0x89	; 137
     4d8:	31 e0       	ldi	r19, 0x01	; 1
     4da:	91 91       	ld	r25, Z+
     4dc:	80 91 c8 00 	lds	r24, 0x00C8	; 0x8000c8 <__TEXT_REGION_LENGTH__+0x7e00c8>
     4e0:	85 ff       	sbrs	r24, 5
     4e2:	fc cf       	rjmp	.-8      	; 0x4dc <__LOCK_REGION_LENGTH__+0xdc>
     4e4:	90 93 ce 00 	sts	0x00CE, r25	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7e00ce>
     4e8:	2e 17       	cp	r18, r30
     4ea:	3f 07       	cpc	r19, r31
     4ec:	b1 f7       	brne	.-20     	; 0x4da <__LOCK_REGION_LENGTH__+0xda>
     4ee:	4b cf       	rjmp	.-362    	; 0x386 <__vector_28+0x36>
     4f0:	ef e5       	ldi	r30, 0x5F	; 95
     4f2:	f1 e0       	ldi	r31, 0x01	; 1
     4f4:	45 e6       	ldi	r20, 0x65	; 101
     4f6:	51 e0       	ldi	r21, 0x01	; 1
     4f8:	80 91 c8 00 	lds	r24, 0x00C8	; 0x8000c8 <__TEXT_REGION_LENGTH__+0x7e00c8>
     4fc:	87 ff       	sbrs	r24, 7
     4fe:	fc cf       	rjmp	.-8      	; 0x4f8 <__LOCK_REGION_LENGTH__+0xf8>
     500:	90 91 ce 00 	lds	r25, 0x00CE	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7e00ce>
     504:	80 91 c8 00 	lds	r24, 0x00C8	; 0x8000c8 <__TEXT_REGION_LENGTH__+0x7e00c8>
     508:	87 ff       	sbrs	r24, 7
     50a:	fc cf       	rjmp	.-8      	; 0x504 <__LOCK_REGION_LENGTH__+0x104>
     50c:	20 91 ce 00 	lds	r18, 0x00CE	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7e00ce>
     510:	89 2f       	mov	r24, r25
     512:	90 e0       	ldi	r25, 0x00	; 0
     514:	92 2b       	or	r25, r18
     516:	81 93       	st	Z+, r24
     518:	91 93       	st	Z+, r25
     51a:	4e 17       	cp	r20, r30
     51c:	5f 07       	cpc	r21, r31
     51e:	61 f7       	brne	.-40     	; 0x4f8 <__LOCK_REGION_LENGTH__+0xf8>
     520:	32 cf       	rjmp	.-412    	; 0x386 <__vector_28+0x36>
     522:	e3 e8       	ldi	r30, 0x83	; 131
     524:	f1 e0       	ldi	r31, 0x01	; 1
     526:	49 e8       	ldi	r20, 0x89	; 137
     528:	51 e0       	ldi	r21, 0x01	; 1
     52a:	80 91 c8 00 	lds	r24, 0x00C8	; 0x8000c8 <__TEXT_REGION_LENGTH__+0x7e00c8>
     52e:	87 ff       	sbrs	r24, 7
     530:	fc cf       	rjmp	.-8      	; 0x52a <__LOCK_REGION_LENGTH__+0x12a>
     532:	90 91 ce 00 	lds	r25, 0x00CE	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7e00ce>
     536:	80 91 c8 00 	lds	r24, 0x00C8	; 0x8000c8 <__TEXT_REGION_LENGTH__+0x7e00c8>
     53a:	87 ff       	sbrs	r24, 7
     53c:	fc cf       	rjmp	.-8      	; 0x536 <__LOCK_REGION_LENGTH__+0x136>
     53e:	20 91 ce 00 	lds	r18, 0x00CE	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7e00ce>
     542:	89 2f       	mov	r24, r25
     544:	90 e0       	ldi	r25, 0x00	; 0
     546:	92 2b       	or	r25, r18
     548:	81 93       	st	Z+, r24
     54a:	91 93       	st	Z+, r25
     54c:	4e 17       	cp	r20, r30
     54e:	5f 07       	cpc	r21, r31
     550:	61 f7       	brne	.-40     	; 0x52a <__LOCK_REGION_LENGTH__+0x12a>
     552:	19 cf       	rjmp	.-462    	; 0x386 <__vector_28+0x36>
     554:	26 e3       	ldi	r18, 0x36	; 54
     556:	31 e0       	ldi	r19, 0x01	; 1
     558:	44 e3       	ldi	r20, 0x34	; 52
     55a:	51 e0       	ldi	r21, 0x01	; 1
     55c:	6b e6       	ldi	r22, 0x6B	; 107
     55e:	71 e0       	ldi	r23, 0x01	; 1
     560:	87 e7       	ldi	r24, 0x77	; 119
     562:	91 e0       	ldi	r25, 0x01	; 1
     564:	c6 de       	rcall	.-628    	; 0x2f2 <updateState>
     566:	0f cf       	rjmp	.-482    	; 0x386 <__vector_28+0x36>
     568:	e7 e7       	ldi	r30, 0x77	; 119
     56a:	f1 e0       	ldi	r31, 0x01	; 1
     56c:	91 91       	ld	r25, Z+
     56e:	80 91 c8 00 	lds	r24, 0x00C8	; 0x8000c8 <__TEXT_REGION_LENGTH__+0x7e00c8>
     572:	85 ff       	sbrs	r24, 5
     574:	fc cf       	rjmp	.-8      	; 0x56e <__LOCK_REGION_LENGTH__+0x16e>
     576:	90 93 ce 00 	sts	0x00CE, r25	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7e00ce>
     57a:	81 e0       	ldi	r24, 0x01	; 1
     57c:	ed 37       	cpi	r30, 0x7D	; 125
     57e:	f8 07       	cpc	r31, r24
     580:	a9 f7       	brne	.-22     	; 0x56c <__LOCK_REGION_LENGTH__+0x16c>
     582:	01 cf       	rjmp	.-510    	; 0x386 <__vector_28+0x36>
     584:	81 e0       	ldi	r24, 0x01	; 1
     586:	80 93 5e 01 	sts	0x015E, r24	; 0x80015e <start>
     58a:	fd ce       	rjmp	.-518    	; 0x386 <__vector_28+0x36>

0000058c <__vector_32>:
	OCR2A = u[2][0];
}


ISR(TIMER3_COMPA_vect)
{
     58c:	1f 92       	push	r1
     58e:	0f 92       	push	r0
     590:	0f b6       	in	r0, 0x3f	; 63
     592:	0f 92       	push	r0
     594:	11 24       	eor	r1, r1
     596:	8f 93       	push	r24
	n_x++;
     598:	80 91 35 01 	lds	r24, 0x0135	; 0x800135 <n_x>
     59c:	8f 5f       	subi	r24, 0xFF	; 255
     59e:	80 93 35 01 	sts	0x0135, r24	; 0x800135 <n_x>
	n_o++;
     5a2:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <__data_end>
     5a6:	8f 5f       	subi	r24, 0xFF	; 255
     5a8:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <__data_end>
	
	//f_desired_position();
	//controller();
}
     5ac:	8f 91       	pop	r24
     5ae:	0f 90       	pop	r0
     5b0:	0f be       	out	0x3f, r0	; 63
     5b2:	0f 90       	pop	r0
     5b4:	1f 90       	pop	r1
     5b6:	18 95       	reti

000005b8 <updateSensor>:


//////////////////////////////////////////////////////////////////////////
///     Read sensor and process to radians (or degrees)
//////////////////////////////////////////////////////////////////////////
void updateSensor(void) {
     5b8:	ef 92       	push	r14
     5ba:	ff 92       	push	r15
     5bc:	0f 93       	push	r16
     5be:	1f 93       	push	r17
     5c0:	cf 93       	push	r28
     5c2:	df 93       	push	r29
	float base_angles[2];
	// Read from registers 0 and 3 for potentiometers 1 and 2 respectively
	signed int a = ADC_read(0);
     5c4:	80 e0       	ldi	r24, 0x00	; 0
     5c6:	f8 dd       	rcall	.-1040   	; 0x1b8 <ADC_read>
     5c8:	7c 01       	movw	r14, r24
	signed int b = ADC_read(3);
     5ca:	83 e0       	ldi	r24, 0x03	; 3
     5cc:	f5 dd       	rcall	.-1046   	; 0x1b8 <ADC_read>
     5ce:	ec 01       	movw	r28, r24
	
	// Map voltage to angle (deg). Then apply the offset to make '0 degrees' correspond to +X axis (REMOVED OFFSET FOR NOW TODO: ADD BACK IN + CALIB)
	base_angles[0] = ((a / 1024.0) * 5.76) - 1.475; // 330.0 degs , 84.51 degs
	base_angles[1] = ((b / 1024.0) * 5.76) - 1.475; // 330.0 degs , 84.51 degs
	
	sensor_data[0] = base_angles[0]; // (int)(base_angles[0]*180/3.14159);
     5d0:	06 e5       	ldi	r16, 0x56	; 86
     5d2:	11 e0       	ldi	r17, 0x01	; 1
     5d4:	b7 01       	movw	r22, r14
     5d6:	ff 0c       	add	r15, r15
     5d8:	88 0b       	sbc	r24, r24
     5da:	99 0b       	sbc	r25, r25
     5dc:	29 d4       	rcall	.+2130   	; 0xe30 <__floatsisf>
     5de:	20 e0       	ldi	r18, 0x00	; 0
     5e0:	30 e0       	ldi	r19, 0x00	; 0
     5e2:	40 e8       	ldi	r20, 0x80	; 128
     5e4:	5a e3       	ldi	r21, 0x3A	; 58
     5e6:	63 d5       	rcall	.+2758   	; 0x10ae <__mulsf3>
     5e8:	2c ee       	ldi	r18, 0xEC	; 236
     5ea:	31 e5       	ldi	r19, 0x51	; 81
     5ec:	48 eb       	ldi	r20, 0xB8	; 184
     5ee:	50 e4       	ldi	r21, 0x40	; 64
     5f0:	5e d5       	rcall	.+2748   	; 0x10ae <__mulsf3>
     5f2:	2d ec       	ldi	r18, 0xCD	; 205
     5f4:	3c ec       	ldi	r19, 0xCC	; 204
     5f6:	4c eb       	ldi	r20, 0xBC	; 188
     5f8:	5f e3       	ldi	r21, 0x3F	; 63
     5fa:	17 d3       	rcall	.+1582   	; 0xc2a <__subsf3>
     5fc:	f8 01       	movw	r30, r16
     5fe:	60 83       	st	Z, r22
     600:	71 83       	std	Z+1, r23	; 0x01
     602:	82 83       	std	Z+2, r24	; 0x02
     604:	93 83       	std	Z+3, r25	; 0x03
	sensor_data[1] = base_angles[1]; // (int)(base_angles[1]*180/3.14159);
     606:	be 01       	movw	r22, r28
     608:	dd 0f       	add	r29, r29
     60a:	88 0b       	sbc	r24, r24
     60c:	99 0b       	sbc	r25, r25
     60e:	10 d4       	rcall	.+2080   	; 0xe30 <__floatsisf>
     610:	20 e0       	ldi	r18, 0x00	; 0
     612:	30 e0       	ldi	r19, 0x00	; 0
     614:	40 e8       	ldi	r20, 0x80	; 128
     616:	5a e3       	ldi	r21, 0x3A	; 58
     618:	4a d5       	rcall	.+2708   	; 0x10ae <__mulsf3>
     61a:	2c ee       	ldi	r18, 0xEC	; 236
     61c:	31 e5       	ldi	r19, 0x51	; 81
     61e:	48 eb       	ldi	r20, 0xB8	; 184
     620:	50 e4       	ldi	r21, 0x40	; 64
     622:	45 d5       	rcall	.+2698   	; 0x10ae <__mulsf3>
     624:	2d ec       	ldi	r18, 0xCD	; 205
     626:	3c ec       	ldi	r19, 0xCC	; 204
     628:	4c eb       	ldi	r20, 0xBC	; 188
     62a:	5f e3       	ldi	r21, 0x3F	; 63
     62c:	fe d2       	rcall	.+1532   	; 0xc2a <__subsf3>
     62e:	f8 01       	movw	r30, r16
     630:	64 83       	std	Z+4, r22	; 0x04
     632:	75 83       	std	Z+5, r23	; 0x05
     634:	86 83       	std	Z+6, r24	; 0x06
     636:	97 83       	std	Z+7, r25	; 0x07
     638:	df 91       	pop	r29
}
     63a:	cf 91       	pop	r28
     63c:	1f 91       	pop	r17
     63e:	0f 91       	pop	r16
     640:	ff 90       	pop	r15
     642:	ef 90       	pop	r14
     644:	08 95       	ret

00000646 <rotateVector2D>:
     646:	4f 92       	push	r4


//////////////////////////////////////////////////////////////////////////
///     Rotate 2D vector by angle (RADIANS)
//////////////////////////////////////////////////////////////////////////
void rotateVector2D(float *in_vector, float angle) {
     648:	5f 92       	push	r5
     64a:	6f 92       	push	r6
     64c:	7f 92       	push	r7
     64e:	8f 92       	push	r8
     650:	9f 92       	push	r9
     652:	af 92       	push	r10
     654:	bf 92       	push	r11
     656:	cf 92       	push	r12
     658:	df 92       	push	r13
     65a:	ef 92       	push	r14
     65c:	ff 92       	push	r15
     65e:	cf 93       	push	r28
     660:	df 93       	push	r29
     662:	00 d0       	rcall	.+0      	; 0x664 <rotateVector2D+0x1e>
     664:	00 d0       	rcall	.+0      	; 0x666 <rotateVector2D+0x20>
     666:	00 d0       	rcall	.+0      	; 0x668 <rotateVector2D+0x22>
     668:	cd b7       	in	r28, 0x3d	; 61
     66a:	de b7       	in	r29, 0x3e	; 62
     66c:	9e 83       	std	Y+6, r25	; 0x06
     66e:	8d 83       	std	Y+5, r24	; 0x05
     670:	4a 01       	movw	r8, r20
     672:	5b 01       	movw	r10, r22
	in_vector[0] = in_vector[0] * cos(angle) - in_vector[1] * sin(angle);
     674:	cb 01       	movw	r24, r22
     676:	ba 01       	movw	r22, r20
     678:	3d d3       	rcall	.+1658   	; 0xcf4 <cos>
     67a:	6b 01       	movw	r12, r22
     67c:	7c 01       	movw	r14, r24
     67e:	ed 81       	ldd	r30, Y+5	; 0x05
     680:	fe 81       	ldd	r31, Y+6	; 0x06
     682:	44 80       	ldd	r4, Z+4	; 0x04
     684:	55 80       	ldd	r5, Z+5	; 0x05
     686:	66 80       	ldd	r6, Z+6	; 0x06
     688:	77 80       	ldd	r7, Z+7	; 0x07
     68a:	c5 01       	movw	r24, r10
     68c:	b4 01       	movw	r22, r8
     68e:	92 d5       	rcall	.+2852   	; 0x11b4 <sin>
     690:	4b 01       	movw	r8, r22
     692:	5c 01       	movw	r10, r24
     694:	ed 81       	ldd	r30, Y+5	; 0x05
     696:	fe 81       	ldd	r31, Y+6	; 0x06
     698:	20 81       	ld	r18, Z
     69a:	31 81       	ldd	r19, Z+1	; 0x01
     69c:	42 81       	ldd	r20, Z+2	; 0x02
     69e:	53 81       	ldd	r21, Z+3	; 0x03
     6a0:	c7 01       	movw	r24, r14
     6a2:	b6 01       	movw	r22, r12
     6a4:	04 d5       	rcall	.+2568   	; 0x10ae <__mulsf3>
     6a6:	69 83       	std	Y+1, r22	; 0x01
     6a8:	7a 83       	std	Y+2, r23	; 0x02
     6aa:	8b 83       	std	Y+3, r24	; 0x03
     6ac:	9c 83       	std	Y+4, r25	; 0x04
     6ae:	a5 01       	movw	r20, r10
     6b0:	94 01       	movw	r18, r8
     6b2:	c3 01       	movw	r24, r6
     6b4:	b2 01       	movw	r22, r4
     6b6:	fb d4       	rcall	.+2550   	; 0x10ae <__mulsf3>
     6b8:	9b 01       	movw	r18, r22
     6ba:	ac 01       	movw	r20, r24
     6bc:	69 81       	ldd	r22, Y+1	; 0x01
     6be:	7a 81       	ldd	r23, Y+2	; 0x02
     6c0:	8b 81       	ldd	r24, Y+3	; 0x03
     6c2:	9c 81       	ldd	r25, Y+4	; 0x04
     6c4:	b2 d2       	rcall	.+1380   	; 0xc2a <__subsf3>
     6c6:	9b 01       	movw	r18, r22
     6c8:	ac 01       	movw	r20, r24
     6ca:	ed 81       	ldd	r30, Y+5	; 0x05
     6cc:	fe 81       	ldd	r31, Y+6	; 0x06
     6ce:	60 83       	st	Z, r22
     6d0:	71 83       	std	Z+1, r23	; 0x01
     6d2:	82 83       	std	Z+2, r24	; 0x02
     6d4:	93 83       	std	Z+3, r25	; 0x03
	in_vector[1] = in_vector[0] * sin(angle) + in_vector[1] * cos(angle);
     6d6:	c5 01       	movw	r24, r10
     6d8:	b4 01       	movw	r22, r8
     6da:	e9 d4       	rcall	.+2514   	; 0x10ae <__mulsf3>
     6dc:	4b 01       	movw	r8, r22
     6de:	5c 01       	movw	r10, r24
     6e0:	a3 01       	movw	r20, r6
     6e2:	92 01       	movw	r18, r4
     6e4:	c7 01       	movw	r24, r14
     6e6:	b6 01       	movw	r22, r12
     6e8:	e2 d4       	rcall	.+2500   	; 0x10ae <__mulsf3>
     6ea:	9b 01       	movw	r18, r22
     6ec:	ac 01       	movw	r20, r24
     6ee:	c5 01       	movw	r24, r10
     6f0:	b4 01       	movw	r22, r8
     6f2:	9c d2       	rcall	.+1336   	; 0xc2c <__addsf3>
     6f4:	ed 81       	ldd	r30, Y+5	; 0x05
     6f6:	fe 81       	ldd	r31, Y+6	; 0x06
     6f8:	64 83       	std	Z+4, r22	; 0x04
     6fa:	75 83       	std	Z+5, r23	; 0x05
     6fc:	86 83       	std	Z+6, r24	; 0x06
     6fe:	97 83       	std	Z+7, r25	; 0x07
     700:	26 96       	adiw	r28, 0x06	; 6
}
     702:	0f b6       	in	r0, 0x3f	; 63
     704:	f8 94       	cli
     706:	de bf       	out	0x3e, r29	; 62
     708:	0f be       	out	0x3f, r0	; 63
     70a:	cd bf       	out	0x3d, r28	; 61
     70c:	df 91       	pop	r29
     70e:	cf 91       	pop	r28
     710:	ff 90       	pop	r15
     712:	ef 90       	pop	r14
     714:	df 90       	pop	r13
     716:	cf 90       	pop	r12
     718:	bf 90       	pop	r11
     71a:	af 90       	pop	r10
     71c:	9f 90       	pop	r9
     71e:	8f 90       	pop	r8
     720:	7f 90       	pop	r7
     722:	6f 90       	pop	r6
     724:	5f 90       	pop	r5
     726:	4f 90       	pop	r4
     728:	08 95       	ret

0000072a <sensorKinematics>:
     72a:	4f 92       	push	r4


//////////////////////////////////////////////////////////////////////////
///     Rotate 2D vector by angle (DEGREES)
//////////////////////////////////////////////////////////////////////////
void sensorKinematics(float alpha[2]) {
     72c:	5f 92       	push	r5
     72e:	6f 92       	push	r6
     730:	7f 92       	push	r7
     732:	8f 92       	push	r8
     734:	9f 92       	push	r9
     736:	af 92       	push	r10
     738:	bf 92       	push	r11
     73a:	cf 92       	push	r12
     73c:	df 92       	push	r13
     73e:	ef 92       	push	r14
     740:	ff 92       	push	r15
     742:	0f 93       	push	r16
     744:	1f 93       	push	r17
     746:	cf 93       	push	r28
     748:	df 93       	push	r29
     74a:	cd b7       	in	r28, 0x3d	; 61
     74c:	de b7       	in	r29, 0x3e	; 62
     74e:	64 97       	sbiw	r28, 0x14	; 20
     750:	0f b6       	in	r0, 0x3f	; 63
     752:	f8 94       	cli
     754:	de bf       	out	0x3e, r29	; 62
     756:	0f be       	out	0x3f, r0	; 63
     758:	cd bf       	out	0x3d, r28	; 61
     75a:	7c 01       	movw	r14, r24
	float lambda_mag;
	float xi;
	float vec_along_l3[2];
	
	// Joint 3 coords
	p3[0] = p1[0] + Links[0]*cos(alpha[0]);
     75c:	fc 01       	movw	r30, r24
     75e:	80 80       	ld	r8, Z
     760:	91 80       	ldd	r9, Z+1	; 0x01
     762:	a2 80       	ldd	r10, Z+2	; 0x02
     764:	b3 80       	ldd	r11, Z+3	; 0x03
     766:	c5 01       	movw	r24, r10
     768:	b4 01       	movw	r22, r8
     76a:	c4 d2       	rcall	.+1416   	; 0xcf4 <cos>
     76c:	0e e4       	ldi	r16, 0x4E	; 78
     76e:	11 e0       	ldi	r17, 0x01	; 1
     770:	20 e0       	ldi	r18, 0x00	; 0
     772:	30 e0       	ldi	r19, 0x00	; 0
     774:	48 ec       	ldi	r20, 0xC8	; 200
     776:	51 e4       	ldi	r21, 0x41	; 65
     778:	9a d4       	rcall	.+2356   	; 0x10ae <__mulsf3>
     77a:	f8 01       	movw	r30, r16
     77c:	20 81       	ld	r18, Z
     77e:	31 81       	ldd	r19, Z+1	; 0x01
     780:	42 81       	ldd	r20, Z+2	; 0x02
     782:	53 81       	ldd	r21, Z+3	; 0x03
     784:	53 d2       	rcall	.+1190   	; 0xc2c <__addsf3>
     786:	6d 87       	std	Y+13, r22	; 0x0d
     788:	7e 87       	std	Y+14, r23	; 0x0e
     78a:	8f 87       	std	Y+15, r24	; 0x0f
     78c:	98 8b       	std	Y+16, r25	; 0x10
	p3[1] = p1[1] + Links[0]*sin(alpha[0]);
     78e:	c5 01       	movw	r24, r10
     790:	b4 01       	movw	r22, r8
     792:	10 d5       	rcall	.+2592   	; 0x11b4 <sin>
     794:	20 e0       	ldi	r18, 0x00	; 0
     796:	30 e0       	ldi	r19, 0x00	; 0
     798:	48 ec       	ldi	r20, 0xC8	; 200
     79a:	51 e4       	ldi	r21, 0x41	; 65
     79c:	88 d4       	rcall	.+2320   	; 0x10ae <__mulsf3>
     79e:	f8 01       	movw	r30, r16
     7a0:	24 81       	ldd	r18, Z+4	; 0x04
     7a2:	35 81       	ldd	r19, Z+5	; 0x05
     7a4:	46 81       	ldd	r20, Z+6	; 0x06
     7a6:	57 81       	ldd	r21, Z+7	; 0x07
     7a8:	41 d2       	rcall	.+1154   	; 0xc2c <__addsf3>
     7aa:	69 8b       	std	Y+17, r22	; 0x11
     7ac:	7a 8b       	std	Y+18, r23	; 0x12
     7ae:	8b 8b       	std	Y+19, r24	; 0x13
     7b0:	9c 8b       	std	Y+20, r25	; 0x14
     7b2:	f7 01       	movw	r30, r14
	// Joint 4 coords
	p4[0] = p2[0] + Links[1]*cos(alpha[1]);
     7b4:	c4 80       	ldd	r12, Z+4	; 0x04
     7b6:	d5 80       	ldd	r13, Z+5	; 0x05
     7b8:	e6 80       	ldd	r14, Z+6	; 0x06
     7ba:	f7 80       	ldd	r15, Z+7	; 0x07
     7bc:	c7 01       	movw	r24, r14
     7be:	b6 01       	movw	r22, r12
     7c0:	99 d2       	rcall	.+1330   	; 0xcf4 <cos>
     7c2:	4b 01       	movw	r8, r22
     7c4:	5c 01       	movw	r10, r24
	p4[1] = p2[1] + Links[1]*sin(alpha[1]);
     7c6:	c7 01       	movw	r24, r14
     7c8:	b6 01       	movw	r22, r12
     7ca:	f4 d4       	rcall	.+2536   	; 0x11b4 <sin>
     7cc:	6b 01       	movw	r12, r22
     7ce:	7c 01       	movw	r14, r24
     7d0:	04 e2       	ldi	r16, 0x24	; 36
	
	// Joint 3 coords
	p3[0] = p1[0] + Links[0]*cos(alpha[0]);
	p3[1] = p1[1] + Links[0]*sin(alpha[0]);
	// Joint 4 coords
	p4[0] = p2[0] + Links[1]*cos(alpha[1]);
     7d2:	11 e0       	ldi	r17, 0x01	; 1
	p4[1] = p2[1] + Links[1]*sin(alpha[1]);
	// Distance between 3 and 4
	lambda[0] = p4[0] - p3[0];
     7d4:	20 e0       	ldi	r18, 0x00	; 0
     7d6:	30 e0       	ldi	r19, 0x00	; 0
     7d8:	48 ec       	ldi	r20, 0xC8	; 200
     7da:	51 e4       	ldi	r21, 0x41	; 65
     7dc:	c5 01       	movw	r24, r10
     7de:	b4 01       	movw	r22, r8
     7e0:	66 d4       	rcall	.+2252   	; 0x10ae <__mulsf3>
     7e2:	f8 01       	movw	r30, r16
     7e4:	20 81       	ld	r18, Z
     7e6:	31 81       	ldd	r19, Z+1	; 0x01
     7e8:	42 81       	ldd	r20, Z+2	; 0x02
     7ea:	53 81       	ldd	r21, Z+3	; 0x03
     7ec:	1f d2       	rcall	.+1086   	; 0xc2c <__addsf3>
     7ee:	2d 85       	ldd	r18, Y+13	; 0x0d
     7f0:	3e 85       	ldd	r19, Y+14	; 0x0e
     7f2:	4f 85       	ldd	r20, Y+15	; 0x0f
     7f4:	58 89       	ldd	r21, Y+16	; 0x10
     7f6:	19 d2       	rcall	.+1074   	; 0xc2a <__subsf3>
     7f8:	4b 01       	movw	r8, r22
     7fa:	5c 01       	movw	r10, r24
	lambda[1] = p4[1] - p3[1];	
     7fc:	20 e0       	ldi	r18, 0x00	; 0
     7fe:	30 e0       	ldi	r19, 0x00	; 0
     800:	48 ec       	ldi	r20, 0xC8	; 200
     802:	51 e4       	ldi	r21, 0x41	; 65
     804:	c7 01       	movw	r24, r14
     806:	b6 01       	movw	r22, r12
     808:	52 d4       	rcall	.+2212   	; 0x10ae <__mulsf3>
     80a:	f8 01       	movw	r30, r16
     80c:	24 81       	ldd	r18, Z+4	; 0x04
     80e:	35 81       	ldd	r19, Z+5	; 0x05
     810:	46 81       	ldd	r20, Z+6	; 0x06
     812:	57 81       	ldd	r21, Z+7	; 0x07
     814:	0b d2       	rcall	.+1046   	; 0xc2c <__addsf3>
     816:	29 89       	ldd	r18, Y+17	; 0x11
     818:	3a 89       	ldd	r19, Y+18	; 0x12
     81a:	4b 89       	ldd	r20, Y+19	; 0x13
     81c:	5c 89       	ldd	r21, Y+20	; 0x14
     81e:	05 d2       	rcall	.+1034   	; 0xc2a <__subsf3>
     820:	69 87       	std	Y+9, r22	; 0x09
     822:	7a 87       	std	Y+10, r23	; 0x0a
     824:	8b 87       	std	Y+11, r24	; 0x0b
     826:	9c 87       	std	Y+12, r25	; 0x0c
	//lambda_mag = norm2D(lambda);
	lambda_mag = sqrt(pow(lambda[0],2) + pow(lambda[1],2));
     828:	a5 01       	movw	r20, r10
     82a:	94 01       	movw	r18, r8
     82c:	c5 01       	movw	r24, r10
     82e:	b4 01       	movw	r22, r8
     830:	3e d4       	rcall	.+2172   	; 0x10ae <__mulsf3>
     832:	2b 01       	movw	r4, r22
     834:	3c 01       	movw	r6, r24
     836:	29 85       	ldd	r18, Y+9	; 0x09
     838:	3a 85       	ldd	r19, Y+10	; 0x0a
     83a:	4b 85       	ldd	r20, Y+11	; 0x0b
     83c:	5c 85       	ldd	r21, Y+12	; 0x0c
     83e:	ca 01       	movw	r24, r20
     840:	b9 01       	movw	r22, r18
     842:	35 d4       	rcall	.+2154   	; 0x10ae <__mulsf3>
     844:	9b 01       	movw	r18, r22
     846:	ac 01       	movw	r20, r24
     848:	c3 01       	movw	r24, r6
     84a:	b2 01       	movw	r22, r4
     84c:	ef d1       	rcall	.+990    	; 0xc2c <__addsf3>
     84e:	bc d4       	rcall	.+2424   	; 0x11c8 <sqrt>
     850:	6b 01       	movw	r12, r22
	// Calculate angle between lambda and l3 using law of cosines	
	xi = acos((pow(Links[2],2) + pow(lambda_mag,2) - pow(Links[3],2)) / (2 * Links[2] * lambda_mag));
     852:	7c 01       	movw	r14, r24
     854:	9b 01       	movw	r18, r22
     856:	ac 01       	movw	r20, r24
     858:	2a d4       	rcall	.+2132   	; 0x10ae <__mulsf3>
     85a:	20 e0       	ldi	r18, 0x00	; 0
     85c:	30 e0       	ldi	r19, 0x00	; 0
     85e:	48 ec       	ldi	r20, 0xC8	; 200
     860:	54 e4       	ldi	r21, 0x44	; 68
     862:	e4 d1       	rcall	.+968    	; 0xc2c <__addsf3>
     864:	20 e0       	ldi	r18, 0x00	; 0
     866:	30 e0       	ldi	r19, 0x00	; 0
     868:	48 ec       	ldi	r20, 0xC8	; 200
     86a:	54 e4       	ldi	r21, 0x44	; 68
     86c:	de d1       	rcall	.+956    	; 0xc2a <__subsf3>
     86e:	2b 01       	movw	r4, r22
     870:	3c 01       	movw	r6, r24
     872:	20 e0       	ldi	r18, 0x00	; 0
     874:	30 e0       	ldi	r19, 0x00	; 0
     876:	40 ea       	ldi	r20, 0xA0	; 160
     878:	52 e4       	ldi	r21, 0x42	; 66
     87a:	c7 01       	movw	r24, r14
     87c:	b6 01       	movw	r22, r12
     87e:	17 d4       	rcall	.+2094   	; 0x10ae <__mulsf3>
     880:	9b 01       	movw	r18, r22
     882:	ac 01       	movw	r20, r24
     884:	c3 01       	movw	r24, r6
     886:	b2 01       	movw	r22, r4
     888:	38 d2       	rcall	.+1136   	; 0xcfa <__divsf3>
     88a:	c1 d1       	rcall	.+898    	; 0xc0e <acos>
     88c:	2b 01       	movw	r4, r22
     88e:	3c 01       	movw	r6, r24
	// Find EE (joint 5): multiply unit vector along lambda by l3, rotate by xi, then shift origin by p3
	vec_along_l3[0] = Links[2] * lambda[0]/lambda_mag;
     890:	20 e0       	ldi	r18, 0x00	; 0
     892:	30 e0       	ldi	r19, 0x00	; 0
     894:	40 e2       	ldi	r20, 0x20	; 32
     896:	52 e4       	ldi	r21, 0x42	; 66
     898:	c5 01       	movw	r24, r10
     89a:	b4 01       	movw	r22, r8
     89c:	08 d4       	rcall	.+2064   	; 0x10ae <__mulsf3>
     89e:	a7 01       	movw	r20, r14
     8a0:	96 01       	movw	r18, r12
     8a2:	2b d2       	rcall	.+1110   	; 0xcfa <__divsf3>
     8a4:	69 83       	std	Y+1, r22	; 0x01
     8a6:	7a 83       	std	Y+2, r23	; 0x02
     8a8:	8b 83       	std	Y+3, r24	; 0x03
     8aa:	9c 83       	std	Y+4, r25	; 0x04
	vec_along_l3[1] = Links[2] * lambda[1]/lambda_mag;
     8ac:	20 e0       	ldi	r18, 0x00	; 0
     8ae:	30 e0       	ldi	r19, 0x00	; 0
     8b0:	40 e2       	ldi	r20, 0x20	; 32
     8b2:	52 e4       	ldi	r21, 0x42	; 66
     8b4:	69 85       	ldd	r22, Y+9	; 0x09
     8b6:	7a 85       	ldd	r23, Y+10	; 0x0a
     8b8:	8b 85       	ldd	r24, Y+11	; 0x0b
     8ba:	9c 85       	ldd	r25, Y+12	; 0x0c
     8bc:	f8 d3       	rcall	.+2032   	; 0x10ae <__mulsf3>
     8be:	a7 01       	movw	r20, r14
     8c0:	96 01       	movw	r18, r12
     8c2:	1b d2       	rcall	.+1078   	; 0xcfa <__divsf3>
     8c4:	6d 83       	std	Y+5, r22	; 0x05
     8c6:	7e 83       	std	Y+6, r23	; 0x06
     8c8:	8f 83       	std	Y+7, r24	; 0x07
     8ca:	98 87       	std	Y+8, r25	; 0x08
	
	rotateVector2D(vec_along_l3, xi);
     8cc:	b3 01       	movw	r22, r6
     8ce:	a2 01       	movw	r20, r4
     8d0:	ce 01       	movw	r24, r28
     8d2:	01 96       	adiw	r24, 0x01	; 1
     8d4:	b8 de       	rcall	.-656    	; 0x646 <rotateVector2D>
     8d6:	2d 81       	ldd	r18, Y+5	; 0x05
	
	p5[0] = (p3[0] + vec_along_l3[0] - home[0]); //*100;
	p5[1] = (p3[1] + vec_along_l3[1] - home[1]); //*100;
     8d8:	3e 81       	ldd	r19, Y+6	; 0x06
     8da:	4f 81       	ldd	r20, Y+7	; 0x07
     8dc:	58 85       	ldd	r21, Y+8	; 0x08
     8de:	69 89       	ldd	r22, Y+17	; 0x11
     8e0:	7a 89       	ldd	r23, Y+18	; 0x12
     8e2:	8b 89       	ldd	r24, Y+19	; 0x13
     8e4:	9c 89       	ldd	r25, Y+20	; 0x14
     8e6:	a2 d1       	rcall	.+836    	; 0xc2c <__addsf3>
     8e8:	2a e3       	ldi	r18, 0x3A	; 58
     8ea:	e2 2e       	mov	r14, r18
     8ec:	21 e0       	ldi	r18, 0x01	; 1
     8ee:	f2 2e       	mov	r15, r18
     8f0:	f7 01       	movw	r30, r14
     8f2:	24 81       	ldd	r18, Z+4	; 0x04
     8f4:	35 81       	ldd	r19, Z+5	; 0x05
     8f6:	46 81       	ldd	r20, Z+6	; 0x06
     8f8:	57 81       	ldd	r21, Z+7	; 0x07
     8fa:	97 d1       	rcall	.+814    	; 0xc2a <__subsf3>
     8fc:	4b 01       	movw	r8, r22
     8fe:	5c 01       	movw	r10, r24
     900:	02 e4       	ldi	r16, 0x42	; 66
	
	EE[0] = p5[0]; // (int) before p5 to cast to integer
     902:	11 e0       	ldi	r17, 0x01	; 1
     904:	29 81       	ldd	r18, Y+1	; 0x01
     906:	3a 81       	ldd	r19, Y+2	; 0x02
     908:	4b 81       	ldd	r20, Y+3	; 0x03
     90a:	5c 81       	ldd	r21, Y+4	; 0x04
     90c:	6d 85       	ldd	r22, Y+13	; 0x0d
     90e:	7e 85       	ldd	r23, Y+14	; 0x0e
     910:	8f 85       	ldd	r24, Y+15	; 0x0f
     912:	98 89       	ldd	r25, Y+16	; 0x10
     914:	8b d1       	rcall	.+790    	; 0xc2c <__addsf3>
     916:	f7 01       	movw	r30, r14
     918:	20 81       	ld	r18, Z
     91a:	31 81       	ldd	r19, Z+1	; 0x01
     91c:	42 81       	ldd	r20, Z+2	; 0x02
     91e:	53 81       	ldd	r21, Z+3	; 0x03
     920:	84 d1       	rcall	.+776    	; 0xc2a <__subsf3>
     922:	f8 01       	movw	r30, r16
     924:	60 83       	st	Z, r22
     926:	71 83       	std	Z+1, r23	; 0x01
     928:	82 83       	std	Z+2, r24	; 0x02
     92a:	93 83       	std	Z+3, r25	; 0x03
     92c:	84 82       	std	Z+4, r8	; 0x04
     92e:	95 82       	std	Z+5, r9	; 0x05
     930:	a6 82       	std	Z+6, r10	; 0x06
	EE[1] = p5[1];
     932:	b7 82       	std	Z+7, r11	; 0x07
     934:	64 96       	adiw	r28, 0x14	; 20
     936:	0f b6       	in	r0, 0x3f	; 63
     938:	f8 94       	cli
}
     93a:	de bf       	out	0x3e, r29	; 62
     93c:	0f be       	out	0x3f, r0	; 63
     93e:	cd bf       	out	0x3d, r28	; 61
     940:	df 91       	pop	r29
     942:	cf 91       	pop	r28
     944:	1f 91       	pop	r17
     946:	0f 91       	pop	r16
     948:	ff 90       	pop	r15
     94a:	ef 90       	pop	r14
     94c:	df 90       	pop	r13
     94e:	cf 90       	pop	r12
     950:	bf 90       	pop	r11
     952:	af 90       	pop	r10
     954:	9f 90       	pop	r9
     956:	8f 90       	pop	r8
     958:	7f 90       	pop	r7
     95a:	6f 90       	pop	r6
     95c:	5f 90       	pop	r5
     95e:	4f 90       	pop	r4
     960:	08 95       	ret

00000962 <getHome>:
     962:	cf 93       	push	r28
     964:	df 93       	push	r29
     966:	cd b7       	in	r28, 0x3d	; 61


//////////////////////////////////////////////////////////////////////////
///     Get HOME CONFIGURATION of 5bar sensor
//////////////////////////////////////////////////////////////////////////
void getHome(void){
     968:	de b7       	in	r29, 0x3e	; 62
     96a:	28 97       	sbiw	r28, 0x08	; 8
     96c:	0f b6       	in	r0, 0x3f	; 63
     96e:	f8 94       	cli
     970:	de bf       	out	0x3e, r29	; 62
     972:	0f be       	out	0x3f, r0	; 63
     974:	cd bf       	out	0x3d, r28	; 61
	float resting_angles[2] = {1.047, 2.094}; // Resting base angles in RADIANS
     976:	88 e0       	ldi	r24, 0x08	; 8
     978:	ec e2       	ldi	r30, 0x2C	; 44
     97a:	f1 e0       	ldi	r31, 0x01	; 1
     97c:	de 01       	movw	r26, r28
     97e:	11 96       	adiw	r26, 0x01	; 1
     980:	01 90       	ld	r0, Z+
     982:	0d 92       	st	X+, r0
     984:	8a 95       	dec	r24
     986:	e1 f7       	brne	.-8      	; 0x980 <getHome+0x1e>
		
	sensorKinematics(resting_angles);
     988:	ce 01       	movw	r24, r28
     98a:	01 96       	adiw	r24, 0x01	; 1
     98c:	ce de       	rcall	.-612    	; 0x72a <sensorKinematics>
	home[0] = EE[0];
     98e:	ea e3       	ldi	r30, 0x3A	; 58
     990:	f1 e0       	ldi	r31, 0x01	; 1
     992:	a2 e4       	ldi	r26, 0x42	; 66
     994:	b1 e0       	ldi	r27, 0x01	; 1
     996:	4d 91       	ld	r20, X+
     998:	5d 91       	ld	r21, X+
     99a:	6d 91       	ld	r22, X+
     99c:	7c 91       	ld	r23, X
     99e:	13 97       	sbiw	r26, 0x03	; 3
     9a0:	40 83       	st	Z, r20
     9a2:	51 83       	std	Z+1, r21	; 0x01
     9a4:	62 83       	std	Z+2, r22	; 0x02
     9a6:	73 83       	std	Z+3, r23	; 0x03
	home[1] = EE[1];
     9a8:	14 96       	adiw	r26, 0x04	; 4
     9aa:	8d 91       	ld	r24, X+
     9ac:	9d 91       	ld	r25, X+
     9ae:	0d 90       	ld	r0, X+
     9b0:	bc 91       	ld	r27, X
     9b2:	a0 2d       	mov	r26, r0
     9b4:	84 83       	std	Z+4, r24	; 0x04
     9b6:	95 83       	std	Z+5, r25	; 0x05
     9b8:	a6 83       	std	Z+6, r26	; 0x06
     9ba:	b7 83       	std	Z+7, r27	; 0x07
}
     9bc:	28 96       	adiw	r28, 0x08	; 8
     9be:	0f b6       	in	r0, 0x3f	; 63
     9c0:	f8 94       	cli
     9c2:	de bf       	out	0x3e, r29	; 62
     9c4:	0f be       	out	0x3f, r0	; 63
     9c6:	cd bf       	out	0x3d, r28	; 61
     9c8:	df 91       	pop	r29
     9ca:	cf 91       	pop	r28
     9cc:	08 95       	ret

000009ce <controller_test>:


//////////////////////////////////////////////////////////////////////////
///     Respond to sensor info - cancel out force
//////////////////////////////////////////////////////////////////////////
void controller_test (float EE_pos[2]){
     9ce:	2f 92       	push	r2
     9d0:	3f 92       	push	r3
     9d2:	4f 92       	push	r4
     9d4:	5f 92       	push	r5
     9d6:	6f 92       	push	r6
     9d8:	7f 92       	push	r7
     9da:	8f 92       	push	r8
     9dc:	9f 92       	push	r9
     9de:	af 92       	push	r10
     9e0:	bf 92       	push	r11
     9e2:	cf 92       	push	r12
     9e4:	df 92       	push	r13
     9e6:	ef 92       	push	r14
     9e8:	ff 92       	push	r15
     9ea:	0f 93       	push	r16
     9ec:	1f 93       	push	r17
     9ee:	cf 93       	push	r28
     9f0:	df 93       	push	r29
     9f2:	cd b7       	in	r28, 0x3d	; 61
     9f4:	de b7       	in	r29, 0x3e	; 62
     9f6:	a4 97       	sbiw	r28, 0x24	; 36
     9f8:	0f b6       	in	r0, 0x3f	; 63
     9fa:	f8 94       	cli
     9fc:	de bf       	out	0x3e, r29	; 62
     9fe:	0f be       	out	0x3f, r0	; 63
     a00:	cd bf       	out	0x3d, r28	; 61
	// u_r[1] is Y motion (Right+/Left-)
	// u_r[2] is Z motion (CCW+/CW-)
	
	float u_r[3];
	unsigned char u[3][2];
	float f[3] = {0,0,0};
     a02:	19 82       	std	Y+1, r1	; 0x01
     a04:	1a 82       	std	Y+2, r1	; 0x02
     a06:	1b 82       	std	Y+3, r1	; 0x03
     a08:	1c 82       	std	Y+4, r1	; 0x04
     a0a:	1d 82       	std	Y+5, r1	; 0x05
     a0c:	1e 82       	std	Y+6, r1	; 0x06
     a0e:	1f 82       	std	Y+7, r1	; 0x07
     a10:	18 86       	std	Y+8, r1	; 0x08
     a12:	19 86       	std	Y+9, r1	; 0x09
     a14:	1a 86       	std	Y+10, r1	; 0x0a
     a16:	1b 86       	std	Y+11, r1	; 0x0b
     a18:	1c 86       	std	Y+12, r1	; 0x0c
	signed int temp;

	u_r[0] = EE[0]*10.0;
     a1a:	20 e0       	ldi	r18, 0x00	; 0
     a1c:	30 e0       	ldi	r19, 0x00	; 0
     a1e:	40 e2       	ldi	r20, 0x20	; 32
     a20:	51 e4       	ldi	r21, 0x41	; 65
     a22:	60 91 42 01 	lds	r22, 0x0142	; 0x800142 <EE>
     a26:	70 91 43 01 	lds	r23, 0x0143	; 0x800143 <EE+0x1>
     a2a:	80 91 44 01 	lds	r24, 0x0144	; 0x800144 <EE+0x2>
     a2e:	90 91 45 01 	lds	r25, 0x0145	; 0x800145 <EE+0x3>
     a32:	3d d3       	rcall	.+1658   	; 0x10ae <__mulsf3>
     a34:	69 a3       	std	Y+33, r22	; 0x21
     a36:	7a a3       	std	Y+34, r23	; 0x22
     a38:	8b a3       	std	Y+35, r24	; 0x23
     a3a:	9c a3       	std	Y+36, r25	; 0x24
     a3c:	cb 01       	movw	r24, r22
     a3e:	ab a1       	ldd	r26, Y+35	; 0x23
     a40:	bc a1       	ldd	r27, Y+36	; 0x24
     a42:	8d 87       	std	Y+13, r24	; 0x0d
     a44:	9e 87       	std	Y+14, r25	; 0x0e
     a46:	af 87       	std	Y+15, r26	; 0x0f
     a48:	b8 8b       	std	Y+16, r27	; 0x10
	u_r[1] = EE[1]*10.0;
     a4a:	20 e0       	ldi	r18, 0x00	; 0
     a4c:	30 e0       	ldi	r19, 0x00	; 0
     a4e:	40 e2       	ldi	r20, 0x20	; 32
     a50:	51 e4       	ldi	r21, 0x41	; 65
     a52:	60 91 46 01 	lds	r22, 0x0146	; 0x800146 <EE+0x4>
     a56:	70 91 47 01 	lds	r23, 0x0147	; 0x800147 <EE+0x5>
     a5a:	80 91 48 01 	lds	r24, 0x0148	; 0x800148 <EE+0x6>
     a5e:	90 91 49 01 	lds	r25, 0x0149	; 0x800149 <EE+0x7>
     a62:	25 d3       	rcall	.+1610   	; 0x10ae <__mulsf3>
     a64:	69 8b       	std	Y+17, r22	; 0x11
     a66:	7a 8b       	std	Y+18, r23	; 0x12
     a68:	8b 8b       	std	Y+19, r24	; 0x13
     a6a:	9c 8b       	std	Y+20, r25	; 0x14
	u_r[2] = 0.0;
     a6c:	1d 8a       	std	Y+21, r1	; 0x15
     a6e:	1e 8a       	std	Y+22, r1	; 0x16
     a70:	1f 8a       	std	Y+23, r1	; 0x17
     a72:	18 8e       	std	Y+24, r1	; 0x18
     a74:	ce 01       	movw	r24, r28
     a76:	01 96       	adiw	r24, 0x01	; 1
     a78:	1c 01       	movw	r2, r24
     a7a:	20 e0       	ldi	r18, 0x00	; 0
     a7c:	82 2e       	mov	r8, r18
     a7e:	21 e0       	ldi	r18, 0x01	; 1
     a80:	92 2e       	mov	r9, r18
     a82:	fe 01       	movw	r30, r28
     a84:	3d 96       	adiw	r30, 0x0d	; 13
     a86:	f8 a3       	std	Y+32, r31	; 0x20
     a88:	ef 8f       	std	Y+31, r30	; 0x1f
     a8a:	6c 01       	movw	r12, r24
     a8c:	41 2c       	mov	r4, r1
     a8e:	51 2c       	mov	r5, r1
     a90:	32 01       	movw	r6, r4
     a92:	48 96       	adiw	r24, 0x18	; 24
     a94:	5c 01       	movw	r10, r24
     a96:	8e 01       	movw	r16, r28
     a98:	0f 5e       	subi	r16, 0xEF	; 239
     a9a:	1f 4f       	sbci	r17, 0xFF	; 255


//////////////////////////////////////////////////////////////////////////
///     Respond to sensor info - cancel out force
//////////////////////////////////////////////////////////////////////////
void controller_test (float EE_pos[2]){
     a9c:	74 01       	movw	r14, r8
     a9e:	89 a1       	ldd	r24, Y+33	; 0x21
     aa0:	9a a1       	ldd	r25, Y+34	; 0x22
     aa2:	ab a1       	ldd	r26, Y+35	; 0x23
     aa4:	bc a1       	ldd	r27, Y+36	; 0x24
     aa6:	9c 01       	movw	r18, r24
     aa8:	ad 01       	movw	r20, r26
	u_r[2] = 0.0;
	
	// Perform the matrix multiplication J_r * u_r
	for (int i = 0; i < 3; i++) {
		for (int j = 0; j < 3; j++) {
			f[i] += J_r[i][j] * u_r[j];
     aaa:	f7 01       	movw	r30, r14
     aac:	61 91       	ld	r22, Z+
     aae:	71 91       	ld	r23, Z+
     ab0:	81 91       	ld	r24, Z+
     ab2:	91 91       	ld	r25, Z+
     ab4:	7f 01       	movw	r14, r30
     ab6:	fb d2       	rcall	.+1526   	; 0x10ae <__mulsf3>
     ab8:	9b 01       	movw	r18, r22
     aba:	ac 01       	movw	r20, r24
     abc:	c3 01       	movw	r24, r6
     abe:	b2 01       	movw	r22, r4
     ac0:	b5 d0       	rcall	.+362    	; 0xc2c <__addsf3>
     ac2:	2b 01       	movw	r4, r22
     ac4:	3c 01       	movw	r6, r24
	u_r[1] = EE[1]*10.0;
	u_r[2] = 0.0;
	
	// Perform the matrix multiplication J_r * u_r
	for (int i = 0; i < 3; i++) {
		for (int j = 0; j < 3; j++) {
     ac6:	0a 15       	cp	r16, r10
     ac8:	1b 05       	cpc	r17, r11
     aca:	39 f0       	breq	.+14     	; 0xada <controller_test+0x10c>
     acc:	f8 01       	movw	r30, r16
     ace:	21 91       	ld	r18, Z+
     ad0:	31 91       	ld	r19, Z+
     ad2:	41 91       	ld	r20, Z+
     ad4:	51 91       	ld	r21, Z+
     ad6:	8f 01       	movw	r16, r30
     ad8:	e8 cf       	rjmp	.-48     	; 0xaaa <controller_test+0xdc>
     ada:	f6 01       	movw	r30, r12
     adc:	61 93       	st	Z+, r22
     ade:	71 93       	st	Z+, r23
     ae0:	81 93       	st	Z+, r24
     ae2:	91 93       	st	Z+, r25
     ae4:	6f 01       	movw	r12, r30
     ae6:	fc e0       	ldi	r31, 0x0C	; 12
     ae8:	8f 0e       	add	r8, r31
     aea:	91 1c       	adc	r9, r1
	u_r[0] = EE[0]*10.0;
	u_r[1] = EE[1]*10.0;
	u_r[2] = 0.0;
	
	// Perform the matrix multiplication J_r * u_r
	for (int i = 0; i < 3; i++) {
     aec:	8f 8d       	ldd	r24, Y+31	; 0x1f
     aee:	98 a1       	ldd	r25, Y+32	; 0x20
     af0:	c8 16       	cp	r12, r24
     af2:	d9 06       	cpc	r13, r25
     af4:	31 f0       	breq	.+12     	; 0xb02 <controller_test+0x134>
     af6:	f6 01       	movw	r30, r12
     af8:	40 80       	ld	r4, Z
     afa:	51 80       	ldd	r5, Z+1	; 0x01
     afc:	62 80       	ldd	r6, Z+2	; 0x02
     afe:	73 80       	ldd	r7, Z+3	; 0x03
     b00:	ca cf       	rjmp	.-108    	; 0xa96 <controller_test+0xc8>
     b02:	7e 01       	movw	r14, r28
     b04:	ff e1       	ldi	r31, 0x1F	; 31
     b06:	ef 0e       	add	r14, r31
     b08:	f1 1c       	adc	r15, r1
		}
	}	
	
	// Assign to wheel array
	for (int i = 0; i < 3; i++){
		temp = (int)roundf(f[i]);
     b0a:	f1 01       	movw	r30, r2
     b0c:	61 91       	ld	r22, Z+
     b0e:	71 91       	ld	r23, Z+
     b10:	81 91       	ld	r24, Z+
     b12:	91 91       	ld	r25, Z+
     b14:	1f 01       	movw	r2, r30
     b16:	2e d3       	rcall	.+1628   	; 0x1174 <round>
     b18:	58 d1       	rcall	.+688    	; 0xdca <__fixsfsi>
		
		if(temp > 255){
     b1a:	6f 3f       	cpi	r22, 0xFF	; 255
     b1c:	71 05       	cpc	r23, r1
     b1e:	09 f0       	breq	.+2      	; 0xb22 <controller_test+0x154>
     b20:	bc f5       	brge	.+110    	; 0xb90 <controller_test+0x1c2>
			temp = 255;
		}
		else if(temp < -255){
     b22:	61 30       	cpi	r22, 0x01	; 1
     b24:	ff ef       	ldi	r31, 0xFF	; 255
     b26:	7f 07       	cpc	r23, r31
     b28:	ac f1       	brlt	.+106    	; 0xb94 <controller_test+0x1c6>
			temp = -255;
		}
		if(temp >= 0){
     b2a:	77 fd       	sbrc	r23, 7
     b2c:	38 c0       	rjmp	.+112    	; 0xb9e <controller_test+0x1d0>
			u[i][0] = 0;
     b2e:	f8 01       	movw	r30, r16
     b30:	10 82       	st	Z, r1
			u[i][1] = abs(temp);
     b32:	61 83       	std	Z+1, r22	; 0x01
     b34:	0e 5f       	subi	r16, 0xFE	; 254
     b36:	1f 4f       	sbci	r17, 0xFF	; 255
			f[i] += J_r[i][j] * u_r[j];
		}
	}	
	
	// Assign to wheel array
	for (int i = 0; i < 3; i++){
     b38:	e0 16       	cp	r14, r16
     b3a:	f1 06       	cpc	r15, r17
     b3c:	31 f7       	brne	.-52     	; 0xb0a <controller_test+0x13c>
			u[i][1] = 0;
		}
	}

	// Front Left
	FLCW = u[0][1];
     b3e:	8a 8d       	ldd	r24, Y+26	; 0x1a
     b40:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
	FLCCW = u[0][0];
     b44:	89 8d       	ldd	r24, Y+25	; 0x19
     b46:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
	// Rear
	RCCW = u[1][0];
     b4a:	8b 8d       	ldd	r24, Y+27	; 0x1b
     b4c:	87 bd       	out	0x27, r24	; 39
	RCW = u[1][1];
     b4e:	8c 8d       	ldd	r24, Y+28	; 0x1c
     b50:	88 bd       	out	0x28, r24	; 40
	//Front Right
	FRCCW = u[2][0];
     b52:	8d 8d       	ldd	r24, Y+29	; 0x1d
     b54:	80 93 b3 00 	sts	0x00B3, r24	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7e00b3>
	FRCW = u[2][1];	
     b58:	8e 8d       	ldd	r24, Y+30	; 0x1e
     b5a:	80 93 b4 00 	sts	0x00B4, r24	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7e00b4>
}
     b5e:	a4 96       	adiw	r28, 0x24	; 36
     b60:	0f b6       	in	r0, 0x3f	; 63
     b62:	f8 94       	cli
     b64:	de bf       	out	0x3e, r29	; 62
     b66:	0f be       	out	0x3f, r0	; 63
     b68:	cd bf       	out	0x3d, r28	; 61
     b6a:	df 91       	pop	r29
     b6c:	cf 91       	pop	r28
     b6e:	1f 91       	pop	r17
     b70:	0f 91       	pop	r16
     b72:	ff 90       	pop	r15
     b74:	ef 90       	pop	r14
     b76:	df 90       	pop	r13
     b78:	cf 90       	pop	r12
     b7a:	bf 90       	pop	r11
     b7c:	af 90       	pop	r10
     b7e:	9f 90       	pop	r9
     b80:	8f 90       	pop	r8
     b82:	7f 90       	pop	r7
     b84:	6f 90       	pop	r6
     b86:	5f 90       	pop	r5
     b88:	4f 90       	pop	r4
     b8a:	3f 90       	pop	r3
     b8c:	2f 90       	pop	r2
     b8e:	08 95       	ret
     b90:	6f ef       	ldi	r22, 0xFF	; 255
     b92:	cd cf       	rjmp	.-102    	; 0xb2e <controller_test+0x160>
     b94:	6f ef       	ldi	r22, 0xFF	; 255
		if(temp >= 0){
			u[i][0] = 0;
			u[i][1] = abs(temp);
		}
		else{
			u[i][0] = abs(temp);
     b96:	f8 01       	movw	r30, r16
     b98:	60 83       	st	Z, r22
			u[i][1] = 0;
     b9a:	11 82       	std	Z+1, r1	; 0x01
     b9c:	cb cf       	rjmp	.-106    	; 0xb34 <controller_test+0x166>
     b9e:	61 95       	neg	r22
     ba0:	fa cf       	rjmp	.-12     	; 0xb96 <controller_test+0x1c8>

00000ba2 <main>:
	float time;
	int county = 0;
	//float direc[3] = {100.0, 0, 0};
	//float STOP[3] = {0.0, 0.0, 0.0};
		
	mC_init();
     ba2:	29 db       	rcall	.-2478   	; 0x1f6 <mC_init>
	getHome();
     ba4:	de de       	rcall	.-580    	; 0x962 <getHome>
     ba6:	47 98       	cbi	0x08, 7	; 8
	
	PORTC &= ~BIT(redLED); // Turn OFF redLED
     ba8:	46 9a       	sbi	0x08, 6	; 8
	PORTC |= BIT(blueLED); // Turn ON blueLED
     baa:	47 9a       	sbi	0x08, 7	; 8
	PORTC |= BIT(redLED);  // Turn ON redLED
     bac:	10 92 91 00 	sts	0x0091, r1	; 0x800091 <__TEXT_REGION_LENGTH__+0x7e0091>
	
	TCCR3B = (0<<CS32) | (0<<CS31) | (0<<CS30);
     bb0:	78 94       	sei
	sei();
     bb2:	80 91 5e 01 	lds	r24, 0x015E	; 0x80015e <start>
	
	//n_x = 15;
	//t_x = 22;
	
	// Primary Loop
	while(start == 0){
     bb6:	81 11       	cpse	r24, r1
     bb8:	18 c0       	rjmp	.+48     	; 0xbea <main+0x48>
			//EE[2] = 0;
		//}
		controller_test(EE);
		county += 1;
		
		PORTC  ^= BIT(blueLED);	// Toggle blueLED
     bba:	c0 e4       	ldi	r28, 0x40	; 64
	//t_x = 22;
	
	// Primary Loop
	while(start == 0){
		// ADC read and assign to 'sensor_data'
		updateSensor();
     bbc:	fd dc       	rcall	.-1542   	; 0x5b8 <updateSensor>
		// Calculate force and direction of sensor, assign to 'EE'
		sensorKinematics(sensor_data);
     bbe:	86 e5       	ldi	r24, 0x56	; 86
     bc0:	91 e0       	ldi	r25, 0x01	; 1
     bc2:	b3 dd       	rcall	.-1178   	; 0x72a <sensorKinematics>
		//if (county > 100){
			//EE[0] = 0;
			//EE[1] = 0;
			//EE[2] = 0;
		//}
		controller_test(EE);
     bc4:	82 e4       	ldi	r24, 0x42	; 66
     bc6:	91 e0       	ldi	r25, 0x01	; 1
     bc8:	02 df       	rcall	.-508    	; 0x9ce <controller_test>
     bca:	88 b1       	in	r24, 0x08	; 8
		county += 1;
		
		PORTC  ^= BIT(blueLED);	// Toggle blueLED
     bcc:	8c 27       	eor	r24, r28
     bce:	88 b9       	out	0x08, r24	; 8
     bd0:	2f e7       	ldi	r18, 0x7F	; 127
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     bd2:	3a e1       	ldi	r19, 0x1A	; 26
     bd4:	86 e0       	ldi	r24, 0x06	; 6
     bd6:	21 50       	subi	r18, 0x01	; 1
     bd8:	30 40       	sbci	r19, 0x00	; 0
     bda:	80 40       	sbci	r24, 0x00	; 0
     bdc:	e1 f7       	brne	.-8      	; 0xbd6 <main+0x34>
     bde:	00 c0       	rjmp	.+0      	; 0xbe0 <main+0x3e>
     be0:	00 00       	nop
     be2:	80 91 5e 01 	lds	r24, 0x015E	; 0x80015e <start>
	
	//n_x = 15;
	//t_x = 22;
	
	// Primary Loop
	while(start == 0){
     be6:	88 23       	and	r24, r24
     be8:	49 f3       	breq	.-46     	; 0xbbc <main+0x1a>
     bea:	46 9a       	sbi	0x08, 6	; 8
		
		PORTC  ^= BIT(blueLED);	// Toggle blueLED
		_delay_ms(100); // Changed from 100 to test which loop is running 11/28/23
	}
	
	PORTC |= BIT(blueLED);		// Turn ON blueLED
     bec:	85 e0       	ldi	r24, 0x05	; 5
	TCCR3B = (1<<CS32) | (0<<CS31) | (1<<CS30);
     bee:	80 93 91 00 	sts	0x0091, r24	; 0x800091 <__TEXT_REGION_LENGTH__+0x7e0091>
     bf2:	90 e4       	ldi	r25, 0x40	; 64
		//f_desired_position();
		//controller();				// NOT SURE WHAT THIS DOES ... DOESN'T SEEM TO BE NEEDED WITH CENTRALIZED (MATLAB) CONTROL
		
		//updateSensor(alpha);

		PORTC ^= BIT(blueLED);		// Toggle blueLED
     bf4:	88 b1       	in	r24, 0x08	; 8
     bf6:	89 27       	eor	r24, r25
     bf8:	88 b9       	out	0x08, r24	; 8
     bfa:	2f e7       	ldi	r18, 0x7F	; 127
     bfc:	3a e1       	ldi	r19, 0x1A	; 26
     bfe:	86 e0       	ldi	r24, 0x06	; 6
     c00:	21 50       	subi	r18, 0x01	; 1
     c02:	30 40       	sbci	r19, 0x00	; 0
     c04:	80 40       	sbci	r24, 0x00	; 0
     c06:	e1 f7       	brne	.-8      	; 0xc00 <main+0x5e>
     c08:	00 c0       	rjmp	.+0      	; 0xc0a <main+0x68>
     c0a:	00 00       	nop
     c0c:	f3 cf       	rjmp	.-26     	; 0xbf4 <main+0x52>

00000c0e <acos>:
     c0e:	9f 93       	push	r25
     c10:	9f 77       	andi	r25, 0x7F	; 127
     c12:	49 d1       	rcall	.+658    	; 0xea6 <__fp_arccos>
     c14:	0f 90       	pop	r0
     c16:	00 20       	and	r0, r0
     c18:	3a f4       	brpl	.+14     	; 0xc28 <acos+0x1a>
     c1a:	90 58       	subi	r25, 0x80	; 128
     c1c:	a2 ea       	ldi	r26, 0xA2	; 162
     c1e:	2a ed       	ldi	r18, 0xDA	; 218
     c20:	3f e0       	ldi	r19, 0x0F	; 15
     c22:	49 e4       	ldi	r20, 0x49	; 73
     c24:	50 e4       	ldi	r21, 0x40	; 64
     c26:	13 d0       	rcall	.+38     	; 0xc4e <__addsf3x>
     c28:	bd c1       	rjmp	.+890    	; 0xfa4 <__fp_round>

00000c2a <__subsf3>:
     c2a:	50 58       	subi	r21, 0x80	; 128

00000c2c <__addsf3>:
     c2c:	bb 27       	eor	r27, r27
     c2e:	aa 27       	eor	r26, r26
     c30:	0e d0       	rcall	.+28     	; 0xc4e <__addsf3x>
     c32:	b8 c1       	rjmp	.+880    	; 0xfa4 <__fp_round>
     c34:	81 d1       	rcall	.+770    	; 0xf38 <__fp_pscA>
     c36:	30 f0       	brcs	.+12     	; 0xc44 <__addsf3+0x18>
     c38:	86 d1       	rcall	.+780    	; 0xf46 <__fp_pscB>
     c3a:	20 f0       	brcs	.+8      	; 0xc44 <__addsf3+0x18>
     c3c:	31 f4       	brne	.+12     	; 0xc4a <__addsf3+0x1e>
     c3e:	9f 3f       	cpi	r25, 0xFF	; 255
     c40:	11 f4       	brne	.+4      	; 0xc46 <__addsf3+0x1a>
     c42:	1e f4       	brtc	.+6      	; 0xc4a <__addsf3+0x1e>
     c44:	51 c1       	rjmp	.+674    	; 0xee8 <__fp_nan>
     c46:	0e f4       	brtc	.+2      	; 0xc4a <__addsf3+0x1e>
     c48:	e0 95       	com	r30
     c4a:	e7 fb       	bst	r30, 7
     c4c:	47 c1       	rjmp	.+654    	; 0xedc <__fp_inf>

00000c4e <__addsf3x>:
     c4e:	e9 2f       	mov	r30, r25
     c50:	cb d1       	rcall	.+918    	; 0xfe8 <__fp_split3>
     c52:	80 f3       	brcs	.-32     	; 0xc34 <__addsf3+0x8>
     c54:	ba 17       	cp	r27, r26
     c56:	62 07       	cpc	r22, r18
     c58:	73 07       	cpc	r23, r19
     c5a:	84 07       	cpc	r24, r20
     c5c:	95 07       	cpc	r25, r21
     c5e:	18 f0       	brcs	.+6      	; 0xc66 <__addsf3x+0x18>
     c60:	71 f4       	brne	.+28     	; 0xc7e <__addsf3x+0x30>
     c62:	9e f5       	brtc	.+102    	; 0xcca <__addsf3x+0x7c>
     c64:	e3 c1       	rjmp	.+966    	; 0x102c <__fp_zero>
     c66:	0e f4       	brtc	.+2      	; 0xc6a <__addsf3x+0x1c>
     c68:	e0 95       	com	r30
     c6a:	0b 2e       	mov	r0, r27
     c6c:	ba 2f       	mov	r27, r26
     c6e:	a0 2d       	mov	r26, r0
     c70:	0b 01       	movw	r0, r22
     c72:	b9 01       	movw	r22, r18
     c74:	90 01       	movw	r18, r0
     c76:	0c 01       	movw	r0, r24
     c78:	ca 01       	movw	r24, r20
     c7a:	a0 01       	movw	r20, r0
     c7c:	11 24       	eor	r1, r1
     c7e:	ff 27       	eor	r31, r31
     c80:	59 1b       	sub	r21, r25
     c82:	99 f0       	breq	.+38     	; 0xcaa <__addsf3x+0x5c>
     c84:	59 3f       	cpi	r21, 0xF9	; 249
     c86:	50 f4       	brcc	.+20     	; 0xc9c <__addsf3x+0x4e>
     c88:	50 3e       	cpi	r21, 0xE0	; 224
     c8a:	68 f1       	brcs	.+90     	; 0xce6 <__addsf3x+0x98>
     c8c:	1a 16       	cp	r1, r26
     c8e:	f0 40       	sbci	r31, 0x00	; 0
     c90:	a2 2f       	mov	r26, r18
     c92:	23 2f       	mov	r18, r19
     c94:	34 2f       	mov	r19, r20
     c96:	44 27       	eor	r20, r20
     c98:	58 5f       	subi	r21, 0xF8	; 248
     c9a:	f3 cf       	rjmp	.-26     	; 0xc82 <__addsf3x+0x34>
     c9c:	46 95       	lsr	r20
     c9e:	37 95       	ror	r19
     ca0:	27 95       	ror	r18
     ca2:	a7 95       	ror	r26
     ca4:	f0 40       	sbci	r31, 0x00	; 0
     ca6:	53 95       	inc	r21
     ca8:	c9 f7       	brne	.-14     	; 0xc9c <__addsf3x+0x4e>
     caa:	7e f4       	brtc	.+30     	; 0xcca <__addsf3x+0x7c>
     cac:	1f 16       	cp	r1, r31
     cae:	ba 0b       	sbc	r27, r26
     cb0:	62 0b       	sbc	r22, r18
     cb2:	73 0b       	sbc	r23, r19
     cb4:	84 0b       	sbc	r24, r20
     cb6:	ba f0       	brmi	.+46     	; 0xce6 <__addsf3x+0x98>
     cb8:	91 50       	subi	r25, 0x01	; 1
     cba:	a1 f0       	breq	.+40     	; 0xce4 <__addsf3x+0x96>
     cbc:	ff 0f       	add	r31, r31
     cbe:	bb 1f       	adc	r27, r27
     cc0:	66 1f       	adc	r22, r22
     cc2:	77 1f       	adc	r23, r23
     cc4:	88 1f       	adc	r24, r24
     cc6:	c2 f7       	brpl	.-16     	; 0xcb8 <__addsf3x+0x6a>
     cc8:	0e c0       	rjmp	.+28     	; 0xce6 <__addsf3x+0x98>
     cca:	ba 0f       	add	r27, r26
     ccc:	62 1f       	adc	r22, r18
     cce:	73 1f       	adc	r23, r19
     cd0:	84 1f       	adc	r24, r20
     cd2:	48 f4       	brcc	.+18     	; 0xce6 <__addsf3x+0x98>
     cd4:	87 95       	ror	r24
     cd6:	77 95       	ror	r23
     cd8:	67 95       	ror	r22
     cda:	b7 95       	ror	r27
     cdc:	f7 95       	ror	r31
     cde:	9e 3f       	cpi	r25, 0xFE	; 254
     ce0:	08 f0       	brcs	.+2      	; 0xce4 <__addsf3x+0x96>
     ce2:	b3 cf       	rjmp	.-154    	; 0xc4a <__addsf3+0x1e>
     ce4:	93 95       	inc	r25
     ce6:	88 0f       	add	r24, r24
     ce8:	08 f0       	brcs	.+2      	; 0xcec <__addsf3x+0x9e>
     cea:	99 27       	eor	r25, r25
     cec:	ee 0f       	add	r30, r30
     cee:	97 95       	ror	r25
     cf0:	87 95       	ror	r24
     cf2:	08 95       	ret

00000cf4 <cos>:
     cf4:	30 d1       	rcall	.+608    	; 0xf56 <__fp_rempio2>
     cf6:	e3 95       	inc	r30
     cf8:	66 c1       	rjmp	.+716    	; 0xfc6 <__fp_sinus>

00000cfa <__divsf3>:
     cfa:	0c d0       	rcall	.+24     	; 0xd14 <__divsf3x>
     cfc:	53 c1       	rjmp	.+678    	; 0xfa4 <__fp_round>
     cfe:	23 d1       	rcall	.+582    	; 0xf46 <__fp_pscB>
     d00:	40 f0       	brcs	.+16     	; 0xd12 <__divsf3+0x18>
     d02:	1a d1       	rcall	.+564    	; 0xf38 <__fp_pscA>
     d04:	30 f0       	brcs	.+12     	; 0xd12 <__divsf3+0x18>
     d06:	21 f4       	brne	.+8      	; 0xd10 <__divsf3+0x16>
     d08:	5f 3f       	cpi	r21, 0xFF	; 255
     d0a:	19 f0       	breq	.+6      	; 0xd12 <__divsf3+0x18>
     d0c:	e7 c0       	rjmp	.+462    	; 0xedc <__fp_inf>
     d0e:	51 11       	cpse	r21, r1
     d10:	8e c1       	rjmp	.+796    	; 0x102e <__fp_szero>
     d12:	ea c0       	rjmp	.+468    	; 0xee8 <__fp_nan>

00000d14 <__divsf3x>:
     d14:	69 d1       	rcall	.+722    	; 0xfe8 <__fp_split3>
     d16:	98 f3       	brcs	.-26     	; 0xcfe <__divsf3+0x4>

00000d18 <__divsf3_pse>:
     d18:	99 23       	and	r25, r25
     d1a:	c9 f3       	breq	.-14     	; 0xd0e <__divsf3+0x14>
     d1c:	55 23       	and	r21, r21
     d1e:	b1 f3       	breq	.-20     	; 0xd0c <__divsf3+0x12>
     d20:	95 1b       	sub	r25, r21
     d22:	55 0b       	sbc	r21, r21
     d24:	bb 27       	eor	r27, r27
     d26:	aa 27       	eor	r26, r26
     d28:	62 17       	cp	r22, r18
     d2a:	73 07       	cpc	r23, r19
     d2c:	84 07       	cpc	r24, r20
     d2e:	38 f0       	brcs	.+14     	; 0xd3e <__divsf3_pse+0x26>
     d30:	9f 5f       	subi	r25, 0xFF	; 255
     d32:	5f 4f       	sbci	r21, 0xFF	; 255
     d34:	22 0f       	add	r18, r18
     d36:	33 1f       	adc	r19, r19
     d38:	44 1f       	adc	r20, r20
     d3a:	aa 1f       	adc	r26, r26
     d3c:	a9 f3       	breq	.-22     	; 0xd28 <__divsf3_pse+0x10>
     d3e:	33 d0       	rcall	.+102    	; 0xda6 <__divsf3_pse+0x8e>
     d40:	0e 2e       	mov	r0, r30
     d42:	3a f0       	brmi	.+14     	; 0xd52 <__divsf3_pse+0x3a>
     d44:	e0 e8       	ldi	r30, 0x80	; 128
     d46:	30 d0       	rcall	.+96     	; 0xda8 <__divsf3_pse+0x90>
     d48:	91 50       	subi	r25, 0x01	; 1
     d4a:	50 40       	sbci	r21, 0x00	; 0
     d4c:	e6 95       	lsr	r30
     d4e:	00 1c       	adc	r0, r0
     d50:	ca f7       	brpl	.-14     	; 0xd44 <__divsf3_pse+0x2c>
     d52:	29 d0       	rcall	.+82     	; 0xda6 <__divsf3_pse+0x8e>
     d54:	fe 2f       	mov	r31, r30
     d56:	27 d0       	rcall	.+78     	; 0xda6 <__divsf3_pse+0x8e>
     d58:	66 0f       	add	r22, r22
     d5a:	77 1f       	adc	r23, r23
     d5c:	88 1f       	adc	r24, r24
     d5e:	bb 1f       	adc	r27, r27
     d60:	26 17       	cp	r18, r22
     d62:	37 07       	cpc	r19, r23
     d64:	48 07       	cpc	r20, r24
     d66:	ab 07       	cpc	r26, r27
     d68:	b0 e8       	ldi	r27, 0x80	; 128
     d6a:	09 f0       	breq	.+2      	; 0xd6e <__divsf3_pse+0x56>
     d6c:	bb 0b       	sbc	r27, r27
     d6e:	80 2d       	mov	r24, r0
     d70:	bf 01       	movw	r22, r30
     d72:	ff 27       	eor	r31, r31
     d74:	93 58       	subi	r25, 0x83	; 131
     d76:	5f 4f       	sbci	r21, 0xFF	; 255
     d78:	2a f0       	brmi	.+10     	; 0xd84 <__divsf3_pse+0x6c>
     d7a:	9e 3f       	cpi	r25, 0xFE	; 254
     d7c:	51 05       	cpc	r21, r1
     d7e:	68 f0       	brcs	.+26     	; 0xd9a <__divsf3_pse+0x82>
     d80:	ad c0       	rjmp	.+346    	; 0xedc <__fp_inf>
     d82:	55 c1       	rjmp	.+682    	; 0x102e <__fp_szero>
     d84:	5f 3f       	cpi	r21, 0xFF	; 255
     d86:	ec f3       	brlt	.-6      	; 0xd82 <__divsf3_pse+0x6a>
     d88:	98 3e       	cpi	r25, 0xE8	; 232
     d8a:	dc f3       	brlt	.-10     	; 0xd82 <__divsf3_pse+0x6a>
     d8c:	86 95       	lsr	r24
     d8e:	77 95       	ror	r23
     d90:	67 95       	ror	r22
     d92:	b7 95       	ror	r27
     d94:	f7 95       	ror	r31
     d96:	9f 5f       	subi	r25, 0xFF	; 255
     d98:	c9 f7       	brne	.-14     	; 0xd8c <__divsf3_pse+0x74>
     d9a:	88 0f       	add	r24, r24
     d9c:	91 1d       	adc	r25, r1
     d9e:	96 95       	lsr	r25
     da0:	87 95       	ror	r24
     da2:	97 f9       	bld	r25, 7
     da4:	08 95       	ret
     da6:	e1 e0       	ldi	r30, 0x01	; 1
     da8:	66 0f       	add	r22, r22
     daa:	77 1f       	adc	r23, r23
     dac:	88 1f       	adc	r24, r24
     dae:	bb 1f       	adc	r27, r27
     db0:	62 17       	cp	r22, r18
     db2:	73 07       	cpc	r23, r19
     db4:	84 07       	cpc	r24, r20
     db6:	ba 07       	cpc	r27, r26
     db8:	20 f0       	brcs	.+8      	; 0xdc2 <__divsf3_pse+0xaa>
     dba:	62 1b       	sub	r22, r18
     dbc:	73 0b       	sbc	r23, r19
     dbe:	84 0b       	sbc	r24, r20
     dc0:	ba 0b       	sbc	r27, r26
     dc2:	ee 1f       	adc	r30, r30
     dc4:	88 f7       	brcc	.-30     	; 0xda8 <__divsf3_pse+0x90>
     dc6:	e0 95       	com	r30
     dc8:	08 95       	ret

00000dca <__fixsfsi>:
     dca:	04 d0       	rcall	.+8      	; 0xdd4 <__fixunssfsi>
     dcc:	68 94       	set
     dce:	b1 11       	cpse	r27, r1
     dd0:	2e c1       	rjmp	.+604    	; 0x102e <__fp_szero>
     dd2:	08 95       	ret

00000dd4 <__fixunssfsi>:
     dd4:	11 d1       	rcall	.+546    	; 0xff8 <__fp_splitA>
     dd6:	88 f0       	brcs	.+34     	; 0xdfa <__fixunssfsi+0x26>
     dd8:	9f 57       	subi	r25, 0x7F	; 127
     dda:	90 f0       	brcs	.+36     	; 0xe00 <__fixunssfsi+0x2c>
     ddc:	b9 2f       	mov	r27, r25
     dde:	99 27       	eor	r25, r25
     de0:	b7 51       	subi	r27, 0x17	; 23
     de2:	a0 f0       	brcs	.+40     	; 0xe0c <__fixunssfsi+0x38>
     de4:	d1 f0       	breq	.+52     	; 0xe1a <__fixunssfsi+0x46>
     de6:	66 0f       	add	r22, r22
     de8:	77 1f       	adc	r23, r23
     dea:	88 1f       	adc	r24, r24
     dec:	99 1f       	adc	r25, r25
     dee:	1a f0       	brmi	.+6      	; 0xdf6 <__fixunssfsi+0x22>
     df0:	ba 95       	dec	r27
     df2:	c9 f7       	brne	.-14     	; 0xde6 <__fixunssfsi+0x12>
     df4:	12 c0       	rjmp	.+36     	; 0xe1a <__fixunssfsi+0x46>
     df6:	b1 30       	cpi	r27, 0x01	; 1
     df8:	81 f0       	breq	.+32     	; 0xe1a <__fixunssfsi+0x46>
     dfa:	18 d1       	rcall	.+560    	; 0x102c <__fp_zero>
     dfc:	b1 e0       	ldi	r27, 0x01	; 1
     dfe:	08 95       	ret
     e00:	15 c1       	rjmp	.+554    	; 0x102c <__fp_zero>
     e02:	67 2f       	mov	r22, r23
     e04:	78 2f       	mov	r23, r24
     e06:	88 27       	eor	r24, r24
     e08:	b8 5f       	subi	r27, 0xF8	; 248
     e0a:	39 f0       	breq	.+14     	; 0xe1a <__fixunssfsi+0x46>
     e0c:	b9 3f       	cpi	r27, 0xF9	; 249
     e0e:	cc f3       	brlt	.-14     	; 0xe02 <__fixunssfsi+0x2e>
     e10:	86 95       	lsr	r24
     e12:	77 95       	ror	r23
     e14:	67 95       	ror	r22
     e16:	b3 95       	inc	r27
     e18:	d9 f7       	brne	.-10     	; 0xe10 <__fixunssfsi+0x3c>
     e1a:	3e f4       	brtc	.+14     	; 0xe2a <__fixunssfsi+0x56>
     e1c:	90 95       	com	r25
     e1e:	80 95       	com	r24
     e20:	70 95       	com	r23
     e22:	61 95       	neg	r22
     e24:	7f 4f       	sbci	r23, 0xFF	; 255
     e26:	8f 4f       	sbci	r24, 0xFF	; 255
     e28:	9f 4f       	sbci	r25, 0xFF	; 255
     e2a:	08 95       	ret

00000e2c <__floatunsisf>:
     e2c:	e8 94       	clt
     e2e:	09 c0       	rjmp	.+18     	; 0xe42 <__floatsisf+0x12>

00000e30 <__floatsisf>:
     e30:	97 fb       	bst	r25, 7
     e32:	3e f4       	brtc	.+14     	; 0xe42 <__floatsisf+0x12>
     e34:	90 95       	com	r25
     e36:	80 95       	com	r24
     e38:	70 95       	com	r23
     e3a:	61 95       	neg	r22
     e3c:	7f 4f       	sbci	r23, 0xFF	; 255
     e3e:	8f 4f       	sbci	r24, 0xFF	; 255
     e40:	9f 4f       	sbci	r25, 0xFF	; 255
     e42:	99 23       	and	r25, r25
     e44:	a9 f0       	breq	.+42     	; 0xe70 <__floatsisf+0x40>
     e46:	f9 2f       	mov	r31, r25
     e48:	96 e9       	ldi	r25, 0x96	; 150
     e4a:	bb 27       	eor	r27, r27
     e4c:	93 95       	inc	r25
     e4e:	f6 95       	lsr	r31
     e50:	87 95       	ror	r24
     e52:	77 95       	ror	r23
     e54:	67 95       	ror	r22
     e56:	b7 95       	ror	r27
     e58:	f1 11       	cpse	r31, r1
     e5a:	f8 cf       	rjmp	.-16     	; 0xe4c <__floatsisf+0x1c>
     e5c:	fa f4       	brpl	.+62     	; 0xe9c <__floatsisf+0x6c>
     e5e:	bb 0f       	add	r27, r27
     e60:	11 f4       	brne	.+4      	; 0xe66 <__floatsisf+0x36>
     e62:	60 ff       	sbrs	r22, 0
     e64:	1b c0       	rjmp	.+54     	; 0xe9c <__floatsisf+0x6c>
     e66:	6f 5f       	subi	r22, 0xFF	; 255
     e68:	7f 4f       	sbci	r23, 0xFF	; 255
     e6a:	8f 4f       	sbci	r24, 0xFF	; 255
     e6c:	9f 4f       	sbci	r25, 0xFF	; 255
     e6e:	16 c0       	rjmp	.+44     	; 0xe9c <__floatsisf+0x6c>
     e70:	88 23       	and	r24, r24
     e72:	11 f0       	breq	.+4      	; 0xe78 <__floatsisf+0x48>
     e74:	96 e9       	ldi	r25, 0x96	; 150
     e76:	11 c0       	rjmp	.+34     	; 0xe9a <__floatsisf+0x6a>
     e78:	77 23       	and	r23, r23
     e7a:	21 f0       	breq	.+8      	; 0xe84 <__floatsisf+0x54>
     e7c:	9e e8       	ldi	r25, 0x8E	; 142
     e7e:	87 2f       	mov	r24, r23
     e80:	76 2f       	mov	r23, r22
     e82:	05 c0       	rjmp	.+10     	; 0xe8e <__floatsisf+0x5e>
     e84:	66 23       	and	r22, r22
     e86:	71 f0       	breq	.+28     	; 0xea4 <__floatsisf+0x74>
     e88:	96 e8       	ldi	r25, 0x86	; 134
     e8a:	86 2f       	mov	r24, r22
     e8c:	70 e0       	ldi	r23, 0x00	; 0
     e8e:	60 e0       	ldi	r22, 0x00	; 0
     e90:	2a f0       	brmi	.+10     	; 0xe9c <__floatsisf+0x6c>
     e92:	9a 95       	dec	r25
     e94:	66 0f       	add	r22, r22
     e96:	77 1f       	adc	r23, r23
     e98:	88 1f       	adc	r24, r24
     e9a:	da f7       	brpl	.-10     	; 0xe92 <__floatsisf+0x62>
     e9c:	88 0f       	add	r24, r24
     e9e:	96 95       	lsr	r25
     ea0:	87 95       	ror	r24
     ea2:	97 f9       	bld	r25, 7
     ea4:	08 95       	ret

00000ea6 <__fp_arccos>:
     ea6:	df 93       	push	r29
     ea8:	cf 93       	push	r28
     eaa:	1f 93       	push	r17
     eac:	0f 93       	push	r16
     eae:	8b 01       	movw	r16, r22
     eb0:	ec 01       	movw	r28, r24
     eb2:	ec e8       	ldi	r30, 0x8C	; 140
     eb4:	f0 e0       	ldi	r31, 0x00	; 0
     eb6:	1b d0       	rcall	.+54     	; 0xeee <__fp_powser>
     eb8:	75 d0       	rcall	.+234    	; 0xfa4 <__fp_round>
     eba:	98 01       	movw	r18, r16
     ebc:	ae 01       	movw	r20, r28
     ebe:	8b 01       	movw	r16, r22
     ec0:	ec 01       	movw	r28, r24
     ec2:	60 e0       	ldi	r22, 0x00	; 0
     ec4:	70 e0       	ldi	r23, 0x00	; 0
     ec6:	80 e8       	ldi	r24, 0x80	; 128
     ec8:	9f e3       	ldi	r25, 0x3F	; 63
     eca:	af de       	rcall	.-674    	; 0xc2a <__subsf3>
     ecc:	7d d1       	rcall	.+762    	; 0x11c8 <sqrt>
     ece:	98 01       	movw	r18, r16
     ed0:	ae 01       	movw	r20, r28
     ed2:	0f 91       	pop	r16
     ed4:	1f 91       	pop	r17
     ed6:	cf 91       	pop	r28
     ed8:	df 91       	pop	r29
     eda:	f5 c0       	rjmp	.+490    	; 0x10c6 <__mulsf3x>

00000edc <__fp_inf>:
     edc:	97 f9       	bld	r25, 7
     ede:	9f 67       	ori	r25, 0x7F	; 127
     ee0:	80 e8       	ldi	r24, 0x80	; 128
     ee2:	70 e0       	ldi	r23, 0x00	; 0
     ee4:	60 e0       	ldi	r22, 0x00	; 0
     ee6:	08 95       	ret

00000ee8 <__fp_nan>:
     ee8:	9f ef       	ldi	r25, 0xFF	; 255
     eea:	80 ec       	ldi	r24, 0xC0	; 192
     eec:	08 95       	ret

00000eee <__fp_powser>:
     eee:	df 93       	push	r29
     ef0:	cf 93       	push	r28
     ef2:	1f 93       	push	r17
     ef4:	0f 93       	push	r16
     ef6:	ff 92       	push	r15
     ef8:	ef 92       	push	r14
     efa:	df 92       	push	r13
     efc:	7b 01       	movw	r14, r22
     efe:	8c 01       	movw	r16, r24
     f00:	68 94       	set
     f02:	05 c0       	rjmp	.+10     	; 0xf0e <__fp_powser+0x20>
     f04:	da 2e       	mov	r13, r26
     f06:	ef 01       	movw	r28, r30
     f08:	de d0       	rcall	.+444    	; 0x10c6 <__mulsf3x>
     f0a:	fe 01       	movw	r30, r28
     f0c:	e8 94       	clt
     f0e:	a5 91       	lpm	r26, Z+
     f10:	25 91       	lpm	r18, Z+
     f12:	35 91       	lpm	r19, Z+
     f14:	45 91       	lpm	r20, Z+
     f16:	55 91       	lpm	r21, Z+
     f18:	ae f3       	brts	.-22     	; 0xf04 <__fp_powser+0x16>
     f1a:	ef 01       	movw	r28, r30
     f1c:	98 de       	rcall	.-720    	; 0xc4e <__addsf3x>
     f1e:	fe 01       	movw	r30, r28
     f20:	97 01       	movw	r18, r14
     f22:	a8 01       	movw	r20, r16
     f24:	da 94       	dec	r13
     f26:	79 f7       	brne	.-34     	; 0xf06 <__fp_powser+0x18>
     f28:	df 90       	pop	r13
     f2a:	ef 90       	pop	r14
     f2c:	ff 90       	pop	r15
     f2e:	0f 91       	pop	r16
     f30:	1f 91       	pop	r17
     f32:	cf 91       	pop	r28
     f34:	df 91       	pop	r29
     f36:	08 95       	ret

00000f38 <__fp_pscA>:
     f38:	00 24       	eor	r0, r0
     f3a:	0a 94       	dec	r0
     f3c:	16 16       	cp	r1, r22
     f3e:	17 06       	cpc	r1, r23
     f40:	18 06       	cpc	r1, r24
     f42:	09 06       	cpc	r0, r25
     f44:	08 95       	ret

00000f46 <__fp_pscB>:
     f46:	00 24       	eor	r0, r0
     f48:	0a 94       	dec	r0
     f4a:	12 16       	cp	r1, r18
     f4c:	13 06       	cpc	r1, r19
     f4e:	14 06       	cpc	r1, r20
     f50:	05 06       	cpc	r0, r21
     f52:	08 95       	ret
     f54:	c9 cf       	rjmp	.-110    	; 0xee8 <__fp_nan>

00000f56 <__fp_rempio2>:
     f56:	50 d0       	rcall	.+160    	; 0xff8 <__fp_splitA>
     f58:	e8 f3       	brcs	.-6      	; 0xf54 <__fp_pscB+0xe>
     f5a:	e8 94       	clt
     f5c:	e0 e0       	ldi	r30, 0x00	; 0
     f5e:	bb 27       	eor	r27, r27
     f60:	9f 57       	subi	r25, 0x7F	; 127
     f62:	f0 f0       	brcs	.+60     	; 0xfa0 <__fp_rempio2+0x4a>
     f64:	2a ed       	ldi	r18, 0xDA	; 218
     f66:	3f e0       	ldi	r19, 0x0F	; 15
     f68:	49 ec       	ldi	r20, 0xC9	; 201
     f6a:	06 c0       	rjmp	.+12     	; 0xf78 <__fp_rempio2+0x22>
     f6c:	ee 0f       	add	r30, r30
     f6e:	bb 0f       	add	r27, r27
     f70:	66 1f       	adc	r22, r22
     f72:	77 1f       	adc	r23, r23
     f74:	88 1f       	adc	r24, r24
     f76:	28 f0       	brcs	.+10     	; 0xf82 <__fp_rempio2+0x2c>
     f78:	b2 3a       	cpi	r27, 0xA2	; 162
     f7a:	62 07       	cpc	r22, r18
     f7c:	73 07       	cpc	r23, r19
     f7e:	84 07       	cpc	r24, r20
     f80:	28 f0       	brcs	.+10     	; 0xf8c <__fp_rempio2+0x36>
     f82:	b2 5a       	subi	r27, 0xA2	; 162
     f84:	62 0b       	sbc	r22, r18
     f86:	73 0b       	sbc	r23, r19
     f88:	84 0b       	sbc	r24, r20
     f8a:	e3 95       	inc	r30
     f8c:	9a 95       	dec	r25
     f8e:	72 f7       	brpl	.-36     	; 0xf6c <__fp_rempio2+0x16>
     f90:	80 38       	cpi	r24, 0x80	; 128
     f92:	30 f4       	brcc	.+12     	; 0xfa0 <__fp_rempio2+0x4a>
     f94:	9a 95       	dec	r25
     f96:	bb 0f       	add	r27, r27
     f98:	66 1f       	adc	r22, r22
     f9a:	77 1f       	adc	r23, r23
     f9c:	88 1f       	adc	r24, r24
     f9e:	d2 f7       	brpl	.-12     	; 0xf94 <__fp_rempio2+0x3e>
     fa0:	90 48       	sbci	r25, 0x80	; 128
     fa2:	6d c1       	rjmp	.+730    	; 0x127e <__fp_mpack_finite>

00000fa4 <__fp_round>:
     fa4:	09 2e       	mov	r0, r25
     fa6:	03 94       	inc	r0
     fa8:	00 0c       	add	r0, r0
     faa:	11 f4       	brne	.+4      	; 0xfb0 <__fp_round+0xc>
     fac:	88 23       	and	r24, r24
     fae:	52 f0       	brmi	.+20     	; 0xfc4 <__fp_round+0x20>
     fb0:	bb 0f       	add	r27, r27
     fb2:	40 f4       	brcc	.+16     	; 0xfc4 <__fp_round+0x20>
     fb4:	bf 2b       	or	r27, r31
     fb6:	11 f4       	brne	.+4      	; 0xfbc <__fp_round+0x18>
     fb8:	60 ff       	sbrs	r22, 0
     fba:	04 c0       	rjmp	.+8      	; 0xfc4 <__fp_round+0x20>
     fbc:	6f 5f       	subi	r22, 0xFF	; 255
     fbe:	7f 4f       	sbci	r23, 0xFF	; 255
     fc0:	8f 4f       	sbci	r24, 0xFF	; 255
     fc2:	9f 4f       	sbci	r25, 0xFF	; 255
     fc4:	08 95       	ret

00000fc6 <__fp_sinus>:
     fc6:	ef 93       	push	r30
     fc8:	e0 ff       	sbrs	r30, 0
     fca:	06 c0       	rjmp	.+12     	; 0xfd8 <__fp_sinus+0x12>
     fcc:	a2 ea       	ldi	r26, 0xA2	; 162
     fce:	2a ed       	ldi	r18, 0xDA	; 218
     fd0:	3f e0       	ldi	r19, 0x0F	; 15
     fd2:	49 ec       	ldi	r20, 0xC9	; 201
     fd4:	5f eb       	ldi	r21, 0xBF	; 191
     fd6:	3b de       	rcall	.-906    	; 0xc4e <__addsf3x>
     fd8:	e5 df       	rcall	.-54     	; 0xfa4 <__fp_round>
     fda:	0f 90       	pop	r0
     fdc:	03 94       	inc	r0
     fde:	01 fc       	sbrc	r0, 1
     fe0:	90 58       	subi	r25, 0x80	; 128
     fe2:	e4 eb       	ldi	r30, 0xB4	; 180
     fe4:	f0 e0       	ldi	r31, 0x00	; 0
     fe6:	5e c1       	rjmp	.+700    	; 0x12a4 <__fp_powsodd>

00000fe8 <__fp_split3>:
     fe8:	57 fd       	sbrc	r21, 7
     fea:	90 58       	subi	r25, 0x80	; 128
     fec:	44 0f       	add	r20, r20
     fee:	55 1f       	adc	r21, r21
     ff0:	59 f0       	breq	.+22     	; 0x1008 <__EEPROM_REGION_LENGTH__+0x8>
     ff2:	5f 3f       	cpi	r21, 0xFF	; 255
     ff4:	71 f0       	breq	.+28     	; 0x1012 <__EEPROM_REGION_LENGTH__+0x12>
     ff6:	47 95       	ror	r20

00000ff8 <__fp_splitA>:
     ff8:	88 0f       	add	r24, r24
     ffa:	97 fb       	bst	r25, 7
     ffc:	99 1f       	adc	r25, r25
     ffe:	61 f0       	breq	.+24     	; 0x1018 <__EEPROM_REGION_LENGTH__+0x18>
    1000:	9f 3f       	cpi	r25, 0xFF	; 255
    1002:	79 f0       	breq	.+30     	; 0x1022 <__EEPROM_REGION_LENGTH__+0x22>
    1004:	87 95       	ror	r24
    1006:	08 95       	ret
    1008:	12 16       	cp	r1, r18
    100a:	13 06       	cpc	r1, r19
    100c:	14 06       	cpc	r1, r20
    100e:	55 1f       	adc	r21, r21
    1010:	f2 cf       	rjmp	.-28     	; 0xff6 <__fp_split3+0xe>
    1012:	46 95       	lsr	r20
    1014:	f1 df       	rcall	.-30     	; 0xff8 <__fp_splitA>
    1016:	08 c0       	rjmp	.+16     	; 0x1028 <__EEPROM_REGION_LENGTH__+0x28>
    1018:	16 16       	cp	r1, r22
    101a:	17 06       	cpc	r1, r23
    101c:	18 06       	cpc	r1, r24
    101e:	99 1f       	adc	r25, r25
    1020:	f1 cf       	rjmp	.-30     	; 0x1004 <__EEPROM_REGION_LENGTH__+0x4>
    1022:	86 95       	lsr	r24
    1024:	71 05       	cpc	r23, r1
    1026:	61 05       	cpc	r22, r1
    1028:	08 94       	sec
    102a:	08 95       	ret

0000102c <__fp_zero>:
    102c:	e8 94       	clt

0000102e <__fp_szero>:
    102e:	bb 27       	eor	r27, r27
    1030:	66 27       	eor	r22, r22
    1032:	77 27       	eor	r23, r23
    1034:	cb 01       	movw	r24, r22
    1036:	97 f9       	bld	r25, 7
    1038:	08 95       	ret

0000103a <lrint>:
    103a:	de df       	rcall	.-68     	; 0xff8 <__fp_splitA>
    103c:	a8 f1       	brcs	.+106    	; 0x10a8 <lrint+0x6e>
    103e:	9e 57       	subi	r25, 0x7E	; 126
    1040:	a8 f1       	brcs	.+106    	; 0x10ac <lrint+0x72>
    1042:	98 51       	subi	r25, 0x18	; 24
    1044:	60 f0       	brcs	.+24     	; 0x105e <lrint+0x24>
    1046:	39 f1       	breq	.+78     	; 0x1096 <lrint+0x5c>
    1048:	98 30       	cpi	r25, 0x08	; 8
    104a:	70 f5       	brcc	.+92     	; 0x10a8 <lrint+0x6e>
    104c:	09 2e       	mov	r0, r25
    104e:	99 27       	eor	r25, r25
    1050:	66 0f       	add	r22, r22
    1052:	77 1f       	adc	r23, r23
    1054:	88 1f       	adc	r24, r24
    1056:	99 1f       	adc	r25, r25
    1058:	0a 94       	dec	r0
    105a:	d1 f7       	brne	.-12     	; 0x1050 <lrint+0x16>
    105c:	1c c0       	rjmp	.+56     	; 0x1096 <lrint+0x5c>
    105e:	bb 27       	eor	r27, r27
    1060:	99 3f       	cpi	r25, 0xF9	; 249
    1062:	4c f4       	brge	.+18     	; 0x1076 <lrint+0x3c>
    1064:	b1 11       	cpse	r27, r1
    1066:	b1 e0       	ldi	r27, 0x01	; 1
    1068:	b6 2b       	or	r27, r22
    106a:	67 2f       	mov	r22, r23
    106c:	78 2f       	mov	r23, r24
    106e:	88 27       	eor	r24, r24
    1070:	98 5f       	subi	r25, 0xF8	; 248
    1072:	b1 f7       	brne	.-20     	; 0x1060 <lrint+0x26>
    1074:	08 c0       	rjmp	.+16     	; 0x1086 <lrint+0x4c>
    1076:	86 95       	lsr	r24
    1078:	77 95       	ror	r23
    107a:	67 95       	ror	r22
    107c:	b7 95       	ror	r27
    107e:	08 f4       	brcc	.+2      	; 0x1082 <lrint+0x48>
    1080:	b1 60       	ori	r27, 0x01	; 1
    1082:	93 95       	inc	r25
    1084:	c1 f7       	brne	.-16     	; 0x1076 <lrint+0x3c>
    1086:	bb 0f       	add	r27, r27
    1088:	30 f4       	brcc	.+12     	; 0x1096 <lrint+0x5c>
    108a:	11 f4       	brne	.+4      	; 0x1090 <lrint+0x56>
    108c:	60 ff       	sbrs	r22, 0
    108e:	03 c0       	rjmp	.+6      	; 0x1096 <lrint+0x5c>
    1090:	6f 5f       	subi	r22, 0xFF	; 255
    1092:	7f 4f       	sbci	r23, 0xFF	; 255
    1094:	8f 4f       	sbci	r24, 0xFF	; 255
    1096:	3e f4       	brtc	.+14     	; 0x10a6 <lrint+0x6c>
    1098:	90 95       	com	r25
    109a:	80 95       	com	r24
    109c:	70 95       	com	r23
    109e:	61 95       	neg	r22
    10a0:	7f 4f       	sbci	r23, 0xFF	; 255
    10a2:	8f 4f       	sbci	r24, 0xFF	; 255
    10a4:	9f 4f       	sbci	r25, 0xFF	; 255
    10a6:	08 95       	ret
    10a8:	68 94       	set
    10aa:	c1 cf       	rjmp	.-126    	; 0x102e <__fp_szero>
    10ac:	bf cf       	rjmp	.-130    	; 0x102c <__fp_zero>

000010ae <__mulsf3>:
    10ae:	0b d0       	rcall	.+22     	; 0x10c6 <__mulsf3x>
    10b0:	79 cf       	rjmp	.-270    	; 0xfa4 <__fp_round>
    10b2:	42 df       	rcall	.-380    	; 0xf38 <__fp_pscA>
    10b4:	28 f0       	brcs	.+10     	; 0x10c0 <__mulsf3+0x12>
    10b6:	47 df       	rcall	.-370    	; 0xf46 <__fp_pscB>
    10b8:	18 f0       	brcs	.+6      	; 0x10c0 <__mulsf3+0x12>
    10ba:	95 23       	and	r25, r21
    10bc:	09 f0       	breq	.+2      	; 0x10c0 <__mulsf3+0x12>
    10be:	0e cf       	rjmp	.-484    	; 0xedc <__fp_inf>
    10c0:	13 cf       	rjmp	.-474    	; 0xee8 <__fp_nan>
    10c2:	11 24       	eor	r1, r1
    10c4:	b4 cf       	rjmp	.-152    	; 0x102e <__fp_szero>

000010c6 <__mulsf3x>:
    10c6:	90 df       	rcall	.-224    	; 0xfe8 <__fp_split3>
    10c8:	a0 f3       	brcs	.-24     	; 0x10b2 <__mulsf3+0x4>

000010ca <__mulsf3_pse>:
    10ca:	95 9f       	mul	r25, r21
    10cc:	d1 f3       	breq	.-12     	; 0x10c2 <__mulsf3+0x14>
    10ce:	95 0f       	add	r25, r21
    10d0:	50 e0       	ldi	r21, 0x00	; 0
    10d2:	55 1f       	adc	r21, r21
    10d4:	62 9f       	mul	r22, r18
    10d6:	f0 01       	movw	r30, r0
    10d8:	72 9f       	mul	r23, r18
    10da:	bb 27       	eor	r27, r27
    10dc:	f0 0d       	add	r31, r0
    10de:	b1 1d       	adc	r27, r1
    10e0:	63 9f       	mul	r22, r19
    10e2:	aa 27       	eor	r26, r26
    10e4:	f0 0d       	add	r31, r0
    10e6:	b1 1d       	adc	r27, r1
    10e8:	aa 1f       	adc	r26, r26
    10ea:	64 9f       	mul	r22, r20
    10ec:	66 27       	eor	r22, r22
    10ee:	b0 0d       	add	r27, r0
    10f0:	a1 1d       	adc	r26, r1
    10f2:	66 1f       	adc	r22, r22
    10f4:	82 9f       	mul	r24, r18
    10f6:	22 27       	eor	r18, r18
    10f8:	b0 0d       	add	r27, r0
    10fa:	a1 1d       	adc	r26, r1
    10fc:	62 1f       	adc	r22, r18
    10fe:	73 9f       	mul	r23, r19
    1100:	b0 0d       	add	r27, r0
    1102:	a1 1d       	adc	r26, r1
    1104:	62 1f       	adc	r22, r18
    1106:	83 9f       	mul	r24, r19
    1108:	a0 0d       	add	r26, r0
    110a:	61 1d       	adc	r22, r1
    110c:	22 1f       	adc	r18, r18
    110e:	74 9f       	mul	r23, r20
    1110:	33 27       	eor	r19, r19
    1112:	a0 0d       	add	r26, r0
    1114:	61 1d       	adc	r22, r1
    1116:	23 1f       	adc	r18, r19
    1118:	84 9f       	mul	r24, r20
    111a:	60 0d       	add	r22, r0
    111c:	21 1d       	adc	r18, r1
    111e:	82 2f       	mov	r24, r18
    1120:	76 2f       	mov	r23, r22
    1122:	6a 2f       	mov	r22, r26
    1124:	11 24       	eor	r1, r1
    1126:	9f 57       	subi	r25, 0x7F	; 127
    1128:	50 40       	sbci	r21, 0x00	; 0
    112a:	8a f0       	brmi	.+34     	; 0x114e <__mulsf3_pse+0x84>
    112c:	e1 f0       	breq	.+56     	; 0x1166 <__mulsf3_pse+0x9c>
    112e:	88 23       	and	r24, r24
    1130:	4a f0       	brmi	.+18     	; 0x1144 <__mulsf3_pse+0x7a>
    1132:	ee 0f       	add	r30, r30
    1134:	ff 1f       	adc	r31, r31
    1136:	bb 1f       	adc	r27, r27
    1138:	66 1f       	adc	r22, r22
    113a:	77 1f       	adc	r23, r23
    113c:	88 1f       	adc	r24, r24
    113e:	91 50       	subi	r25, 0x01	; 1
    1140:	50 40       	sbci	r21, 0x00	; 0
    1142:	a9 f7       	brne	.-22     	; 0x112e <__mulsf3_pse+0x64>
    1144:	9e 3f       	cpi	r25, 0xFE	; 254
    1146:	51 05       	cpc	r21, r1
    1148:	70 f0       	brcs	.+28     	; 0x1166 <__mulsf3_pse+0x9c>
    114a:	c8 ce       	rjmp	.-624    	; 0xedc <__fp_inf>
    114c:	70 cf       	rjmp	.-288    	; 0x102e <__fp_szero>
    114e:	5f 3f       	cpi	r21, 0xFF	; 255
    1150:	ec f3       	brlt	.-6      	; 0x114c <__mulsf3_pse+0x82>
    1152:	98 3e       	cpi	r25, 0xE8	; 232
    1154:	dc f3       	brlt	.-10     	; 0x114c <__mulsf3_pse+0x82>
    1156:	86 95       	lsr	r24
    1158:	77 95       	ror	r23
    115a:	67 95       	ror	r22
    115c:	b7 95       	ror	r27
    115e:	f7 95       	ror	r31
    1160:	e7 95       	ror	r30
    1162:	9f 5f       	subi	r25, 0xFF	; 255
    1164:	c1 f7       	brne	.-16     	; 0x1156 <__mulsf3_pse+0x8c>
    1166:	fe 2b       	or	r31, r30
    1168:	88 0f       	add	r24, r24
    116a:	91 1d       	adc	r25, r1
    116c:	96 95       	lsr	r25
    116e:	87 95       	ror	r24
    1170:	97 f9       	bld	r25, 7
    1172:	08 95       	ret

00001174 <round>:
    1174:	41 df       	rcall	.-382    	; 0xff8 <__fp_splitA>
    1176:	e0 f0       	brcs	.+56     	; 0x11b0 <round+0x3c>
    1178:	9e 37       	cpi	r25, 0x7E	; 126
    117a:	d8 f0       	brcs	.+54     	; 0x11b2 <round+0x3e>
    117c:	96 39       	cpi	r25, 0x96	; 150
    117e:	b8 f4       	brcc	.+46     	; 0x11ae <round+0x3a>
    1180:	9e 38       	cpi	r25, 0x8E	; 142
    1182:	48 f4       	brcc	.+18     	; 0x1196 <round+0x22>
    1184:	67 2f       	mov	r22, r23
    1186:	78 2f       	mov	r23, r24
    1188:	88 27       	eor	r24, r24
    118a:	98 5f       	subi	r25, 0xF8	; 248
    118c:	f9 cf       	rjmp	.-14     	; 0x1180 <round+0xc>
    118e:	86 95       	lsr	r24
    1190:	77 95       	ror	r23
    1192:	67 95       	ror	r22
    1194:	93 95       	inc	r25
    1196:	95 39       	cpi	r25, 0x95	; 149
    1198:	d0 f3       	brcs	.-12     	; 0x118e <round+0x1a>
    119a:	b6 2f       	mov	r27, r22
    119c:	b1 70       	andi	r27, 0x01	; 1
    119e:	6b 0f       	add	r22, r27
    11a0:	71 1d       	adc	r23, r1
    11a2:	81 1d       	adc	r24, r1
    11a4:	20 f4       	brcc	.+8      	; 0x11ae <round+0x3a>
    11a6:	87 95       	ror	r24
    11a8:	77 95       	ror	r23
    11aa:	67 95       	ror	r22
    11ac:	93 95       	inc	r25
    11ae:	4a c0       	rjmp	.+148    	; 0x1244 <__fp_mintl>
    11b0:	64 c0       	rjmp	.+200    	; 0x127a <__fp_mpack>
    11b2:	3d cf       	rjmp	.-390    	; 0x102e <__fp_szero>

000011b4 <sin>:
    11b4:	9f 93       	push	r25
    11b6:	cf de       	rcall	.-610    	; 0xf56 <__fp_rempio2>
    11b8:	0f 90       	pop	r0
    11ba:	07 fc       	sbrc	r0, 7
    11bc:	ee 5f       	subi	r30, 0xFE	; 254
    11be:	03 cf       	rjmp	.-506    	; 0xfc6 <__fp_sinus>
    11c0:	11 f4       	brne	.+4      	; 0x11c6 <sin+0x12>
    11c2:	0e f4       	brtc	.+2      	; 0x11c6 <sin+0x12>
    11c4:	91 ce       	rjmp	.-734    	; 0xee8 <__fp_nan>
    11c6:	59 c0       	rjmp	.+178    	; 0x127a <__fp_mpack>

000011c8 <sqrt>:
    11c8:	17 df       	rcall	.-466    	; 0xff8 <__fp_splitA>
    11ca:	d0 f3       	brcs	.-12     	; 0x11c0 <sin+0xc>
    11cc:	99 23       	and	r25, r25
    11ce:	d9 f3       	breq	.-10     	; 0x11c6 <sin+0x12>
    11d0:	ce f3       	brts	.-14     	; 0x11c4 <sin+0x10>
    11d2:	9f 57       	subi	r25, 0x7F	; 127
    11d4:	55 0b       	sbc	r21, r21
    11d6:	87 ff       	sbrs	r24, 7
    11d8:	5e d0       	rcall	.+188    	; 0x1296 <__fp_norm2>
    11da:	00 24       	eor	r0, r0
    11dc:	a0 e6       	ldi	r26, 0x60	; 96
    11de:	40 ea       	ldi	r20, 0xA0	; 160
    11e0:	90 01       	movw	r18, r0
    11e2:	80 58       	subi	r24, 0x80	; 128
    11e4:	56 95       	lsr	r21
    11e6:	97 95       	ror	r25
    11e8:	28 f4       	brcc	.+10     	; 0x11f4 <sqrt+0x2c>
    11ea:	80 5c       	subi	r24, 0xC0	; 192
    11ec:	66 0f       	add	r22, r22
    11ee:	77 1f       	adc	r23, r23
    11f0:	88 1f       	adc	r24, r24
    11f2:	20 f0       	brcs	.+8      	; 0x11fc <sqrt+0x34>
    11f4:	26 17       	cp	r18, r22
    11f6:	37 07       	cpc	r19, r23
    11f8:	48 07       	cpc	r20, r24
    11fa:	30 f4       	brcc	.+12     	; 0x1208 <sqrt+0x40>
    11fc:	62 1b       	sub	r22, r18
    11fe:	73 0b       	sbc	r23, r19
    1200:	84 0b       	sbc	r24, r20
    1202:	20 29       	or	r18, r0
    1204:	31 29       	or	r19, r1
    1206:	4a 2b       	or	r20, r26
    1208:	a6 95       	lsr	r26
    120a:	17 94       	ror	r1
    120c:	07 94       	ror	r0
    120e:	20 25       	eor	r18, r0
    1210:	31 25       	eor	r19, r1
    1212:	4a 27       	eor	r20, r26
    1214:	58 f7       	brcc	.-42     	; 0x11ec <sqrt+0x24>
    1216:	66 0f       	add	r22, r22
    1218:	77 1f       	adc	r23, r23
    121a:	88 1f       	adc	r24, r24
    121c:	20 f0       	brcs	.+8      	; 0x1226 <sqrt+0x5e>
    121e:	26 17       	cp	r18, r22
    1220:	37 07       	cpc	r19, r23
    1222:	48 07       	cpc	r20, r24
    1224:	30 f4       	brcc	.+12     	; 0x1232 <sqrt+0x6a>
    1226:	62 0b       	sbc	r22, r18
    1228:	73 0b       	sbc	r23, r19
    122a:	84 0b       	sbc	r24, r20
    122c:	20 0d       	add	r18, r0
    122e:	31 1d       	adc	r19, r1
    1230:	41 1d       	adc	r20, r1
    1232:	a0 95       	com	r26
    1234:	81 f7       	brne	.-32     	; 0x1216 <sqrt+0x4e>
    1236:	b9 01       	movw	r22, r18
    1238:	84 2f       	mov	r24, r20
    123a:	91 58       	subi	r25, 0x81	; 129
    123c:	88 0f       	add	r24, r24
    123e:	96 95       	lsr	r25
    1240:	87 95       	ror	r24
    1242:	08 95       	ret

00001244 <__fp_mintl>:
    1244:	88 23       	and	r24, r24
    1246:	71 f4       	brne	.+28     	; 0x1264 <__fp_mintl+0x20>
    1248:	77 23       	and	r23, r23
    124a:	21 f0       	breq	.+8      	; 0x1254 <__fp_mintl+0x10>
    124c:	98 50       	subi	r25, 0x08	; 8
    124e:	87 2b       	or	r24, r23
    1250:	76 2f       	mov	r23, r22
    1252:	07 c0       	rjmp	.+14     	; 0x1262 <__fp_mintl+0x1e>
    1254:	66 23       	and	r22, r22
    1256:	11 f4       	brne	.+4      	; 0x125c <__fp_mintl+0x18>
    1258:	99 27       	eor	r25, r25
    125a:	0d c0       	rjmp	.+26     	; 0x1276 <__fp_mintl+0x32>
    125c:	90 51       	subi	r25, 0x10	; 16
    125e:	86 2b       	or	r24, r22
    1260:	70 e0       	ldi	r23, 0x00	; 0
    1262:	60 e0       	ldi	r22, 0x00	; 0
    1264:	2a f0       	brmi	.+10     	; 0x1270 <__fp_mintl+0x2c>
    1266:	9a 95       	dec	r25
    1268:	66 0f       	add	r22, r22
    126a:	77 1f       	adc	r23, r23
    126c:	88 1f       	adc	r24, r24
    126e:	da f7       	brpl	.-10     	; 0x1266 <__fp_mintl+0x22>
    1270:	88 0f       	add	r24, r24
    1272:	96 95       	lsr	r25
    1274:	87 95       	ror	r24
    1276:	97 f9       	bld	r25, 7
    1278:	08 95       	ret

0000127a <__fp_mpack>:
    127a:	9f 3f       	cpi	r25, 0xFF	; 255
    127c:	31 f0       	breq	.+12     	; 0x128a <__fp_mpack_finite+0xc>

0000127e <__fp_mpack_finite>:
    127e:	91 50       	subi	r25, 0x01	; 1
    1280:	20 f4       	brcc	.+8      	; 0x128a <__fp_mpack_finite+0xc>
    1282:	87 95       	ror	r24
    1284:	77 95       	ror	r23
    1286:	67 95       	ror	r22
    1288:	b7 95       	ror	r27
    128a:	88 0f       	add	r24, r24
    128c:	91 1d       	adc	r25, r1
    128e:	96 95       	lsr	r25
    1290:	87 95       	ror	r24
    1292:	97 f9       	bld	r25, 7
    1294:	08 95       	ret

00001296 <__fp_norm2>:
    1296:	91 50       	subi	r25, 0x01	; 1
    1298:	50 40       	sbci	r21, 0x00	; 0
    129a:	66 0f       	add	r22, r22
    129c:	77 1f       	adc	r23, r23
    129e:	88 1f       	adc	r24, r24
    12a0:	d2 f7       	brpl	.-12     	; 0x1296 <__fp_norm2>
    12a2:	08 95       	ret

000012a4 <__fp_powsodd>:
    12a4:	9f 93       	push	r25
    12a6:	8f 93       	push	r24
    12a8:	7f 93       	push	r23
    12aa:	6f 93       	push	r22
    12ac:	ff 93       	push	r31
    12ae:	ef 93       	push	r30
    12b0:	9b 01       	movw	r18, r22
    12b2:	ac 01       	movw	r20, r24
    12b4:	fc de       	rcall	.-520    	; 0x10ae <__mulsf3>
    12b6:	ef 91       	pop	r30
    12b8:	ff 91       	pop	r31
    12ba:	19 de       	rcall	.-974    	; 0xeee <__fp_powser>
    12bc:	2f 91       	pop	r18
    12be:	3f 91       	pop	r19
    12c0:	4f 91       	pop	r20
    12c2:	5f 91       	pop	r21
    12c4:	f4 ce       	rjmp	.-536    	; 0x10ae <__mulsf3>

000012c6 <_exit>:
    12c6:	f8 94       	cli

000012c8 <__stop_program>:
    12c8:	ff cf       	rjmp	.-2      	; 0x12c8 <__stop_program>
