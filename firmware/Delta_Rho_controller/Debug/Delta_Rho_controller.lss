
Delta_Rho_controller.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000002c  00800100  00001640  000016d4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001640  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000081  0080012c  0080012c  00001700  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001700  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001730  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000110  00000000  00000000  00001770  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001ba6  00000000  00000000  00001880  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000b16  00000000  00000000  00003426  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000f1b  00000000  00000000  00003f3c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000480  00000000  00000000  00004e58  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000813  00000000  00000000  000052d8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001567  00000000  00000000  00005aeb  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000158  00000000  00000000  00007052  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	68 c0       	rjmp	.+208    	; 0xd2 <__ctors_end>
       2:	00 00       	nop
       4:	84 c0       	rjmp	.+264    	; 0x10e <__bad_interrupt>
       6:	00 00       	nop
       8:	82 c0       	rjmp	.+260    	; 0x10e <__bad_interrupt>
       a:	00 00       	nop
       c:	80 c0       	rjmp	.+256    	; 0x10e <__bad_interrupt>
       e:	00 00       	nop
      10:	7e c0       	rjmp	.+252    	; 0x10e <__bad_interrupt>
      12:	00 00       	nop
      14:	7c c0       	rjmp	.+248    	; 0x10e <__bad_interrupt>
      16:	00 00       	nop
      18:	7a c0       	rjmp	.+244    	; 0x10e <__bad_interrupt>
      1a:	00 00       	nop
      1c:	78 c0       	rjmp	.+240    	; 0x10e <__bad_interrupt>
      1e:	00 00       	nop
      20:	76 c0       	rjmp	.+236    	; 0x10e <__bad_interrupt>
      22:	00 00       	nop
      24:	74 c0       	rjmp	.+232    	; 0x10e <__bad_interrupt>
      26:	00 00       	nop
      28:	72 c0       	rjmp	.+228    	; 0x10e <__bad_interrupt>
      2a:	00 00       	nop
      2c:	70 c0       	rjmp	.+224    	; 0x10e <__bad_interrupt>
      2e:	00 00       	nop
      30:	6e c0       	rjmp	.+220    	; 0x10e <__bad_interrupt>
      32:	00 00       	nop
      34:	6c c0       	rjmp	.+216    	; 0x10e <__bad_interrupt>
      36:	00 00       	nop
      38:	6a c0       	rjmp	.+212    	; 0x10e <__bad_interrupt>
      3a:	00 00       	nop
      3c:	68 c0       	rjmp	.+208    	; 0x10e <__bad_interrupt>
      3e:	00 00       	nop
      40:	66 c0       	rjmp	.+204    	; 0x10e <__bad_interrupt>
      42:	00 00       	nop
      44:	64 c0       	rjmp	.+200    	; 0x10e <__bad_interrupt>
      46:	00 00       	nop
      48:	62 c0       	rjmp	.+196    	; 0x10e <__bad_interrupt>
      4a:	00 00       	nop
      4c:	60 c0       	rjmp	.+192    	; 0x10e <__bad_interrupt>
      4e:	00 00       	nop
      50:	5e c0       	rjmp	.+188    	; 0x10e <__bad_interrupt>
      52:	00 00       	nop
      54:	5c c0       	rjmp	.+184    	; 0x10e <__bad_interrupt>
      56:	00 00       	nop
      58:	5a c0       	rjmp	.+180    	; 0x10e <__bad_interrupt>
      5a:	00 00       	nop
      5c:	58 c0       	rjmp	.+176    	; 0x10e <__bad_interrupt>
      5e:	00 00       	nop
      60:	56 c0       	rjmp	.+172    	; 0x10e <__bad_interrupt>
      62:	00 00       	nop
      64:	54 c0       	rjmp	.+168    	; 0x10e <__bad_interrupt>
      66:	00 00       	nop
      68:	52 c0       	rjmp	.+164    	; 0x10e <__bad_interrupt>
      6a:	00 00       	nop
      6c:	50 c0       	rjmp	.+160    	; 0x10e <__bad_interrupt>
      6e:	00 00       	nop
      70:	70 c1       	rjmp	.+736    	; 0x352 <__vector_28>
      72:	00 00       	nop
      74:	4c c0       	rjmp	.+152    	; 0x10e <__bad_interrupt>
      76:	00 00       	nop
      78:	4a c0       	rjmp	.+148    	; 0x10e <__bad_interrupt>
      7a:	00 00       	nop
      7c:	48 c0       	rjmp	.+144    	; 0x10e <__bad_interrupt>
      7e:	00 00       	nop
      80:	46 c0       	rjmp	.+140    	; 0x10e <__bad_interrupt>
      82:	00 00       	nop
      84:	44 c0       	rjmp	.+136    	; 0x10e <__bad_interrupt>
      86:	00 00       	nop
      88:	42 c0       	rjmp	.+132    	; 0x10e <__bad_interrupt>
      8a:	00 00       	nop
      8c:	07 2c       	mov	r0, r7
      8e:	7a a5       	ldd	r23, Y+42	; 0x2a
      90:	ba 6c       	ori	r27, 0xCA	; 202
      92:	c5 90       	lpm	r12, Z+
      94:	da 3b       	cpi	r29, 0xBA	; 186
      96:	93 65       	ori	r25, 0x53	; 83
      98:	fc 8b       	std	Y+20, r31	; 0x14
      9a:	bc 53       	subi	r27, 0x3C	; 60
      9c:	f8 10       	cpse	r15, r8
      9e:	fd 3c       	cpi	r31, 0xCD	; 205
      a0:	56 92       	lac	Z, r5
      a2:	83 4d       	sbci	r24, 0xD3	; 211
      a4:	bd 87       	std	Y+13, r27	; 0x0d
      a6:	9d 3a       	cpi	r25, 0xAD	; 173
      a8:	b6 3d       	cpi	r27, 0xD6	; 214
      aa:	cb c9       	rjmp	.-3178   	; 0xfffff442 <__eeprom_end+0xff7ef442>
      ac:	bf 5b       	subi	r27, 0xBF	; 191
      ae:	be 73       	andi	r27, 0x3E	; 62
      b0:	da 0f       	add	r29, r26
      b2:	c9 3f       	cpi	r28, 0xF9	; 249
      b4:	05 a8       	ldd	r0, Z+53	; 0x35
      b6:	4c cd       	rjmp	.-1384   	; 0xfffffb50 <__eeprom_end+0xff7efb50>
      b8:	b2 d4       	rcall	.+2404   	; 0xa1e <sensorKinematics+0x292>
      ba:	4e b9       	out	0x0e, r20	; 14
      bc:	38 36       	cpi	r19, 0x68	; 104
      be:	a9 02       	muls	r26, r25
      c0:	0c 50       	subi	r16, 0x0C	; 12
      c2:	b9 91       	ld	r27, Y+
      c4:	86 88       	ldd	r8, Z+22	; 0x16
      c6:	08 3c       	cpi	r16, 0xC8	; 200
      c8:	a6 aa       	std	Z+54, r10	; 0x36
      ca:	aa 2a       	or	r10, r26
      cc:	be 00       	.word	0x00be	; ????
      ce:	00 00       	nop
      d0:	80 3f       	cpi	r24, 0xF0	; 240

000000d2 <__ctors_end>:
      d2:	11 24       	eor	r1, r1
      d4:	1f be       	out	0x3f, r1	; 63
      d6:	cf ef       	ldi	r28, 0xFF	; 255
      d8:	d0 e4       	ldi	r29, 0x40	; 64
      da:	de bf       	out	0x3e, r29	; 62
      dc:	cd bf       	out	0x3d, r28	; 61

000000de <__do_copy_data>:
      de:	11 e0       	ldi	r17, 0x01	; 1
      e0:	a0 e0       	ldi	r26, 0x00	; 0
      e2:	b1 e0       	ldi	r27, 0x01	; 1
      e4:	e0 e4       	ldi	r30, 0x40	; 64
      e6:	f6 e1       	ldi	r31, 0x16	; 22
      e8:	00 e0       	ldi	r16, 0x00	; 0
      ea:	0b bf       	out	0x3b, r16	; 59
      ec:	02 c0       	rjmp	.+4      	; 0xf2 <__do_copy_data+0x14>
      ee:	07 90       	elpm	r0, Z+
      f0:	0d 92       	st	X+, r0
      f2:	ac 32       	cpi	r26, 0x2C	; 44
      f4:	b1 07       	cpc	r27, r17
      f6:	d9 f7       	brne	.-10     	; 0xee <__do_copy_data+0x10>

000000f8 <__do_clear_bss>:
      f8:	21 e0       	ldi	r18, 0x01	; 1
      fa:	ac e2       	ldi	r26, 0x2C	; 44
      fc:	b1 e0       	ldi	r27, 0x01	; 1
      fe:	01 c0       	rjmp	.+2      	; 0x102 <.do_clear_bss_start>

00000100 <.do_clear_bss_loop>:
     100:	1d 92       	st	X+, r1

00000102 <.do_clear_bss_start>:
     102:	ad 3a       	cpi	r26, 0xAD	; 173
     104:	b2 07       	cpc	r27, r18
     106:	e1 f7       	brne	.-8      	; 0x100 <.do_clear_bss_loop>
     108:	c0 d6       	rcall	.+3456   	; 0xe8a <main>
     10a:	0c 94 1e 0b 	jmp	0x163c	; 0x163c <_exit>

0000010e <__bad_interrupt>:
     10e:	78 cf       	rjmp	.-272    	; 0x0 <__vectors>

00000110 <ADC_Initialize>:
	//home[0] = EE[0];
	//home[1] = EE[1];
	
	// TEMPORARILY HARD-CODING VALUES FROM GEOMETRIC ANALYSIS 02-07-2024
	home[0] = 9.7; // 11.42;
	home[1] = 50.1; // 53.71;
     110:	6f 92       	push	r6
     112:	7f 92       	push	r7
     114:	8f 92       	push	r8
     116:	9f 92       	push	r9
     118:	af 92       	push	r10
     11a:	cf 92       	push	r12
     11c:	ef 92       	push	r14
     11e:	ff 92       	push	r15
     120:	0f 93       	push	r16
     122:	1f 93       	push	r17
     124:	cf 93       	push	r28
     126:	df 93       	push	r29
     128:	ac e7       	ldi	r26, 0x7C	; 124
     12a:	b0 e0       	ldi	r27, 0x00	; 0
     12c:	1c 92       	st	X, r1
     12e:	ea e7       	ldi	r30, 0x7A	; 122
     130:	f0 e0       	ldi	r31, 0x00	; 0
     132:	10 82       	st	Z, r1
     134:	9b e7       	ldi	r25, 0x7B	; 123
     136:	69 2e       	mov	r6, r25
     138:	71 2c       	mov	r7, r1
     13a:	e3 01       	movw	r28, r6
     13c:	18 82       	st	Y, r1
     13e:	3e e7       	ldi	r19, 0x7E	; 126
     140:	83 2e       	mov	r8, r19
     142:	91 2c       	mov	r9, r1
     144:	e4 01       	movw	r28, r8
     146:	18 82       	st	Y, r1
     148:	30 81       	ld	r19, Z
     14a:	d0 e8       	ldi	r29, 0x80	; 128
     14c:	8d 9f       	mul	r24, r29
     14e:	c0 01       	movw	r24, r0
     150:	11 24       	eor	r1, r1
     152:	83 2b       	or	r24, r19
     154:	80 83       	st	Z, r24
     156:	e4 01       	movw	r28, r8
     158:	68 83       	st	Y, r22
     15a:	8c 91       	ld	r24, X
     15c:	d0 e4       	ldi	r29, 0x40	; 64
     15e:	4d 9f       	mul	r20, r29
     160:	a0 01       	movw	r20, r0
     162:	11 24       	eor	r1, r1
     164:	48 2b       	or	r20, r24
     166:	4c 93       	st	X, r20
     168:	8c 91       	ld	r24, X
     16a:	50 e2       	ldi	r21, 0x20	; 32
     16c:	05 9f       	mul	r16, r21
     16e:	80 01       	movw	r16, r0
     170:	11 24       	eor	r1, r1
     172:	08 2b       	or	r16, r24
     174:	0c 93       	st	X, r16
     176:	80 81       	ld	r24, Z
     178:	28 2b       	or	r18, r24
     17a:	20 83       	st	Z, r18
     17c:	80 81       	ld	r24, Z
     17e:	90 e2       	ldi	r25, 0x20	; 32
     180:	e9 9e       	mul	r14, r25
     182:	70 01       	movw	r14, r0
     184:	11 24       	eor	r1, r1
     186:	e8 2a       	or	r14, r24
     188:	e0 82       	st	Z, r14
     18a:	d3 01       	movw	r26, r6
     18c:	8c 91       	ld	r24, X
     18e:	c8 2a       	or	r12, r24
     190:	cc 92       	st	X, r12
     192:	80 81       	ld	r24, Z
     194:	aa 0c       	add	r10, r10
     196:	aa 0c       	add	r10, r10
     198:	aa 0c       	add	r10, r10
     19a:	a8 2a       	or	r10, r24
     19c:	a0 82       	st	Z, r10
     19e:	df 91       	pop	r29
     1a0:	cf 91       	pop	r28
     1a2:	1f 91       	pop	r17
     1a4:	0f 91       	pop	r16
     1a6:	ff 90       	pop	r15
     1a8:	ef 90       	pop	r14
     1aa:	cf 90       	pop	r12
     1ac:	af 90       	pop	r10
     1ae:	9f 90       	pop	r9
     1b0:	8f 90       	pop	r8
     1b2:	7f 90       	pop	r7
     1b4:	6f 90       	pop	r6
     1b6:	08 95       	ret

000001b8 <ADC_read>:
     1b8:	90 91 7c 00 	lds	r25, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
     1bc:	90 7e       	andi	r25, 0xE0	; 224
     1be:	90 93 7c 00 	sts	0x007C, r25	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
     1c2:	90 91 7c 00 	lds	r25, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
     1c6:	89 2b       	or	r24, r25
     1c8:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
     1cc:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
     1d0:	80 64       	ori	r24, 0x40	; 64
     1d2:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
     1d6:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
     1da:	84 ff       	sbrs	r24, 4
     1dc:	fc cf       	rjmp	.-8      	; 0x1d6 <ADC_read+0x1e>
     1de:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
     1e2:	80 61       	ori	r24, 0x10	; 16
     1e4:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
     1e8:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
     1ec:	20 91 79 00 	lds	r18, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
     1f0:	90 e0       	ldi	r25, 0x00	; 0
     1f2:	92 2b       	or	r25, r18
     1f4:	08 95       	ret

000001f6 <mC_init>:
     1f6:	af 92       	push	r10
     1f8:	cf 92       	push	r12
     1fa:	ef 92       	push	r14
     1fc:	0f 93       	push	r16
     1fe:	e1 e6       	ldi	r30, 0x61	; 97
     200:	f0 e0       	ldi	r31, 0x00	; 0
     202:	80 e8       	ldi	r24, 0x80	; 128
     204:	80 83       	st	Z, r24
     206:	10 82       	st	Z, r1
     208:	11 b8       	out	0x01, r1	; 1
     20a:	12 b8       	out	0x02, r1	; 2
     20c:	8f ef       	ldi	r24, 0xFF	; 255
     20e:	84 b9       	out	0x04, r24	; 4
     210:	15 b8       	out	0x05, r1	; 5
     212:	80 ef       	ldi	r24, 0xF0	; 240
     214:	87 b9       	out	0x07, r24	; 7
     216:	18 b8       	out	0x08, r1	; 8
     218:	8b ef       	ldi	r24, 0xFB	; 251
     21a:	8a b9       	out	0x0a, r24	; 10
     21c:	1b b8       	out	0x0b, r1	; 11
     21e:	91 ea       	ldi	r25, 0xA1	; 161
     220:	94 bd       	out	0x24, r25	; 36
     222:	82 e0       	ldi	r24, 0x02	; 2
     224:	85 bd       	out	0x25, r24	; 37
     226:	16 bc       	out	0x26, r1	; 38
     228:	17 bc       	out	0x27, r1	; 39
     22a:	18 bc       	out	0x28, r1	; 40
     22c:	90 93 80 00 	sts	0x0080, r25	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
     230:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
     234:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     238:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     23c:	10 92 87 00 	sts	0x0087, r1	; 0x800087 <__TEXT_REGION_LENGTH__+0x7e0087>
     240:	10 92 86 00 	sts	0x0086, r1	; 0x800086 <__TEXT_REGION_LENGTH__+0x7e0086>
     244:	10 92 89 00 	sts	0x0089, r1	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
     248:	10 92 88 00 	sts	0x0088, r1	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
     24c:	10 92 8b 00 	sts	0x008B, r1	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
     250:	10 92 8a 00 	sts	0x008A, r1	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
     254:	10 92 b6 00 	sts	0x00B6, r1	; 0x8000b6 <__TEXT_REGION_LENGTH__+0x7e00b6>
     258:	90 93 b0 00 	sts	0x00B0, r25	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
     25c:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7e00b1>
     260:	10 92 b2 00 	sts	0x00B2, r1	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7e00b2>
     264:	10 92 b3 00 	sts	0x00B3, r1	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7e00b3>
     268:	10 92 b4 00 	sts	0x00B4, r1	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7e00b4>
     26c:	10 92 90 00 	sts	0x0090, r1	; 0x800090 <__TEXT_REGION_LENGTH__+0x7e0090>
     270:	9d e0       	ldi	r25, 0x0D	; 13
     272:	90 93 91 00 	sts	0x0091, r25	; 0x800091 <__TEXT_REGION_LENGTH__+0x7e0091>
     276:	10 92 95 00 	sts	0x0095, r1	; 0x800095 <__TEXT_REGION_LENGTH__+0x7e0095>
     27a:	10 92 94 00 	sts	0x0094, r1	; 0x800094 <__TEXT_REGION_LENGTH__+0x7e0094>
     27e:	10 92 97 00 	sts	0x0097, r1	; 0x800097 <__TEXT_REGION_LENGTH__+0x7e0097>
     282:	10 92 96 00 	sts	0x0096, r1	; 0x800096 <__TEXT_REGION_LENGTH__+0x7e0096>
     286:	10 92 99 00 	sts	0x0099, r1	; 0x800099 <__TEXT_REGION_LENGTH__+0x7e0099>
     28a:	93 e6       	ldi	r25, 0x63	; 99
     28c:	90 93 98 00 	sts	0x0098, r25	; 0x800098 <__TEXT_REGION_LENGTH__+0x7e0098>
     290:	10 92 9b 00 	sts	0x009B, r1	; 0x80009b <__TEXT_REGION_LENGTH__+0x7e009b>
     294:	10 92 9a 00 	sts	0x009A, r1	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
     298:	10 92 6e 00 	sts	0x006E, r1	; 0x80006e <__TEXT_REGION_LENGTH__+0x7e006e>
     29c:	10 92 6f 00 	sts	0x006F, r1	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
     2a0:	10 92 70 00 	sts	0x0070, r1	; 0x800070 <__TEXT_REGION_LENGTH__+0x7e0070>
     2a4:	80 93 71 00 	sts	0x0071, r24	; 0x800071 <__TEXT_REGION_LENGTH__+0x7e0071>
     2a8:	a1 2c       	mov	r10, r1
     2aa:	c1 2c       	mov	r12, r1
     2ac:	e1 2c       	mov	r14, r1
     2ae:	00 e0       	ldi	r16, 0x00	; 0
     2b0:	27 e0       	ldi	r18, 0x07	; 7
     2b2:	41 e0       	ldi	r20, 0x01	; 1
     2b4:	69 e0       	ldi	r22, 0x09	; 9
     2b6:	81 e0       	ldi	r24, 0x01	; 1
     2b8:	2b df       	rcall	.-426    	; 0x110 <ADC_Initialize>
     2ba:	60 e0       	ldi	r22, 0x00	; 0
     2bc:	70 e0       	ldi	r23, 0x00	; 0
     2be:	88 ea       	ldi	r24, 0xA8	; 168
     2c0:	91 e4       	ldi	r25, 0x41	; 65
     2c2:	0e 94 b4 09 	call	0x1368	; 0x1368 <lrint>
     2c6:	61 50       	subi	r22, 0x01	; 1
     2c8:	71 09       	sbc	r23, r1
     2ca:	70 93 cd 00 	sts	0x00CD, r23	; 0x8000cd <__TEXT_REGION_LENGTH__+0x7e00cd>
     2ce:	60 93 cc 00 	sts	0x00CC, r22	; 0x8000cc <__TEXT_REGION_LENGTH__+0x7e00cc>
     2d2:	e9 ec       	ldi	r30, 0xC9	; 201
     2d4:	f0 e0       	ldi	r31, 0x00	; 0
     2d6:	88 e1       	ldi	r24, 0x18	; 24
     2d8:	80 83       	st	Z, r24
     2da:	aa ec       	ldi	r26, 0xCA	; 202
     2dc:	b0 e0       	ldi	r27, 0x00	; 0
     2de:	8c 91       	ld	r24, X
     2e0:	86 60       	ori	r24, 0x06	; 6
     2e2:	8c 93       	st	X, r24
     2e4:	80 81       	ld	r24, Z
     2e6:	80 68       	ori	r24, 0x80	; 128
     2e8:	80 83       	st	Z, r24
     2ea:	0f 91       	pop	r16
     2ec:	ef 90       	pop	r14
     2ee:	cf 90       	pop	r12
     2f0:	af 90       	pop	r10
     2f2:	08 95       	ret

000002f4 <updateState>:
     2f4:	e0 91 94 00 	lds	r30, 0x0094	; 0x800094 <__TEXT_REGION_LENGTH__+0x7e0094>
     2f8:	f0 91 95 00 	lds	r31, 0x0095	; 0x800095 <__TEXT_REGION_LENGTH__+0x7e0095>
     2fc:	a0 91 98 00 	lds	r26, 0x0098	; 0x800098 <__TEXT_REGION_LENGTH__+0x7e0098>
     300:	b0 91 99 00 	lds	r27, 0x0099	; 0x800099 <__TEXT_REGION_LENGTH__+0x7e0099>
     304:	da 01       	movw	r26, r20
     306:	1c 92       	st	X, r1
     308:	d9 01       	movw	r26, r18
     30a:	ed 93       	st	X+, r30
     30c:	fc 93       	st	X, r31
     30e:	fc 01       	movw	r30, r24
     310:	db 01       	movw	r26, r22
     312:	bc 01       	movw	r22, r24
     314:	6a 5f       	subi	r22, 0xFA	; 250
     316:	7f 4f       	sbci	r23, 0xFF	; 255
     318:	40 81       	ld	r20, Z
     31a:	51 81       	ldd	r21, Z+1	; 0x01
     31c:	90 91 c8 00 	lds	r25, 0x00C8	; 0x8000c8 <__TEXT_REGION_LENGTH__+0x7e00c8>
     320:	97 ff       	sbrs	r25, 7
     322:	fc cf       	rjmp	.-8      	; 0x31c <updateState+0x28>
     324:	20 91 ce 00 	lds	r18, 0x00CE	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7e00ce>
     328:	90 91 c8 00 	lds	r25, 0x00C8	; 0x8000c8 <__TEXT_REGION_LENGTH__+0x7e00c8>
     32c:	97 ff       	sbrs	r25, 7
     32e:	fc cf       	rjmp	.-8      	; 0x328 <updateState+0x34>
     330:	80 91 ce 00 	lds	r24, 0x00CE	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7e00ce>
     334:	30 e0       	ldi	r19, 0x00	; 0
     336:	38 2b       	or	r19, r24
     338:	21 93       	st	Z+, r18
     33a:	31 93       	st	Z+, r19
     33c:	ca 01       	movw	r24, r20
     33e:	88 0f       	add	r24, r24
     340:	99 1f       	adc	r25, r25
     342:	28 1b       	sub	r18, r24
     344:	39 0b       	sbc	r19, r25
     346:	2d 93       	st	X+, r18
     348:	3d 93       	st	X+, r19
     34a:	e6 17       	cp	r30, r22
     34c:	f7 07       	cpc	r31, r23
     34e:	21 f7       	brne	.-56     	; 0x318 <updateState+0x24>
     350:	08 95       	ret

00000352 <__vector_28>:
     352:	1f 92       	push	r1
     354:	0f 92       	push	r0
     356:	0f b6       	in	r0, 0x3f	; 63
     358:	0f 92       	push	r0
     35a:	11 24       	eor	r1, r1
     35c:	0b b6       	in	r0, 0x3b	; 59
     35e:	0f 92       	push	r0
     360:	2f 93       	push	r18
     362:	3f 93       	push	r19
     364:	4f 93       	push	r20
     366:	5f 93       	push	r21
     368:	6f 93       	push	r22
     36a:	7f 93       	push	r23
     36c:	8f 93       	push	r24
     36e:	9f 93       	push	r25
     370:	af 93       	push	r26
     372:	bf 93       	push	r27
     374:	ef 93       	push	r30
     376:	ff 93       	push	r31
     378:	80 91 c8 00 	lds	r24, 0x00C8	; 0x8000c8 <__TEXT_REGION_LENGTH__+0x7e00c8>
     37c:	87 ff       	sbrs	r24, 7
     37e:	fc cf       	rjmp	.-8      	; 0x378 <__vector_28+0x26>
     380:	80 91 ce 00 	lds	r24, 0x00CE	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7e00ce>
     384:	85 35       	cpi	r24, 0x55	; 85
     386:	a1 f0       	breq	.+40     	; 0x3b0 <__vector_28+0x5e>
     388:	47 9a       	sbi	0x08, 7	; 8
     38a:	ff 91       	pop	r31
     38c:	ef 91       	pop	r30
     38e:	bf 91       	pop	r27
     390:	af 91       	pop	r26
     392:	9f 91       	pop	r25
     394:	8f 91       	pop	r24
     396:	7f 91       	pop	r23
     398:	6f 91       	pop	r22
     39a:	5f 91       	pop	r21
     39c:	4f 91       	pop	r20
     39e:	3f 91       	pop	r19
     3a0:	2f 91       	pop	r18
     3a2:	0f 90       	pop	r0
     3a4:	0b be       	out	0x3b, r0	; 59
     3a6:	0f 90       	pop	r0
     3a8:	0f be       	out	0x3f, r0	; 63
     3aa:	0f 90       	pop	r0
     3ac:	1f 90       	pop	r1
     3ae:	18 95       	reti
     3b0:	80 91 c8 00 	lds	r24, 0x00C8	; 0x8000c8 <__TEXT_REGION_LENGTH__+0x7e00c8>
     3b4:	87 ff       	sbrs	r24, 7
     3b6:	fc cf       	rjmp	.-8      	; 0x3b0 <__vector_28+0x5e>
     3b8:	80 91 ce 00 	lds	r24, 0x00CE	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7e00ce>
     3bc:	98 2f       	mov	r25, r24
     3be:	9f 70       	andi	r25, 0x0F	; 15
     3c0:	93 30       	cpi	r25, 0x03	; 3
     3c2:	11 f0       	breq	.+4      	; 0x3c8 <__vector_28+0x76>
     3c4:	91 11       	cpse	r25, r1
     3c6:	e0 cf       	rjmp	.-64     	; 0x388 <__vector_28+0x36>
     3c8:	47 98       	cbi	0x08, 7	; 8
     3ca:	80 7f       	andi	r24, 0xF0	; 240
     3cc:	80 37       	cpi	r24, 0x70	; 112
     3ce:	09 f4       	brne	.+2      	; 0x3d2 <__vector_28+0x80>
     3d0:	12 c1       	rjmp	.+548    	; 0x5f6 <__LOCK_REGION_LENGTH__+0x1f6>
     3d2:	08 f4       	brcc	.+2      	; 0x3d6 <__vector_28+0x84>
     3d4:	54 c0       	rjmp	.+168    	; 0x47e <__LOCK_REGION_LENGTH__+0x7e>
     3d6:	80 3a       	cpi	r24, 0xA0	; 160
     3d8:	09 f4       	brne	.+2      	; 0x3dc <__vector_28+0x8a>
     3da:	03 c1       	rjmp	.+518    	; 0x5e2 <__LOCK_REGION_LENGTH__+0x1e2>
     3dc:	08 f4       	brcc	.+2      	; 0x3e0 <__vector_28+0x8e>
     3de:	9f c0       	rjmp	.+318    	; 0x51e <__LOCK_REGION_LENGTH__+0x11e>
     3e0:	80 3c       	cpi	r24, 0xC0	; 192
     3e2:	f1 f0       	breq	.+60     	; 0x420 <__LOCK_REGION_LENGTH__+0x20>
     3e4:	80 3d       	cpi	r24, 0xD0	; 208
     3e6:	09 f4       	brne	.+2      	; 0x3ea <__vector_28+0x98>
     3e8:	ed c0       	rjmp	.+474    	; 0x5c4 <__LOCK_REGION_LENGTH__+0x1c4>
     3ea:	80 3b       	cpi	r24, 0xB0	; 176
     3ec:	69 f6       	brne	.-102    	; 0x388 <__vector_28+0x36>
     3ee:	eb e7       	ldi	r30, 0x7B	; 123
     3f0:	f1 e0       	ldi	r31, 0x01	; 1
     3f2:	41 e8       	ldi	r20, 0x81	; 129
     3f4:	51 e0       	ldi	r21, 0x01	; 1
     3f6:	80 91 c8 00 	lds	r24, 0x00C8	; 0x8000c8 <__TEXT_REGION_LENGTH__+0x7e00c8>
     3fa:	87 ff       	sbrs	r24, 7
     3fc:	fc cf       	rjmp	.-8      	; 0x3f6 <__vector_28+0xa4>
     3fe:	90 91 ce 00 	lds	r25, 0x00CE	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7e00ce>
     402:	80 91 c8 00 	lds	r24, 0x00C8	; 0x8000c8 <__TEXT_REGION_LENGTH__+0x7e00c8>
     406:	87 ff       	sbrs	r24, 7
     408:	fc cf       	rjmp	.-8      	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
     40a:	20 91 ce 00 	lds	r18, 0x00CE	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7e00ce>
     40e:	89 2f       	mov	r24, r25
     410:	90 e0       	ldi	r25, 0x00	; 0
     412:	92 2b       	or	r25, r18
     414:	81 93       	st	Z+, r24
     416:	91 93       	st	Z+, r25
     418:	4e 17       	cp	r20, r30
     41a:	5f 07       	cpc	r21, r31
     41c:	61 f7       	brne	.-40     	; 0x3f6 <__vector_28+0xa4>
     41e:	b4 cf       	rjmp	.-152    	; 0x388 <__vector_28+0x36>
     420:	80 91 c8 00 	lds	r24, 0x00C8	; 0x8000c8 <__TEXT_REGION_LENGTH__+0x7e00c8>
     424:	87 ff       	sbrs	r24, 7
     426:	fc cf       	rjmp	.-8      	; 0x420 <__LOCK_REGION_LENGTH__+0x20>
     428:	80 91 ce 00 	lds	r24, 0x00CE	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7e00ce>
     42c:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
     430:	80 91 c8 00 	lds	r24, 0x00C8	; 0x8000c8 <__TEXT_REGION_LENGTH__+0x7e00c8>
     434:	87 ff       	sbrs	r24, 7
     436:	fc cf       	rjmp	.-8      	; 0x430 <__LOCK_REGION_LENGTH__+0x30>
     438:	80 91 ce 00 	lds	r24, 0x00CE	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7e00ce>
     43c:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
     440:	80 91 c8 00 	lds	r24, 0x00C8	; 0x8000c8 <__TEXT_REGION_LENGTH__+0x7e00c8>
     444:	87 ff       	sbrs	r24, 7
     446:	fc cf       	rjmp	.-8      	; 0x440 <__LOCK_REGION_LENGTH__+0x40>
     448:	80 91 ce 00 	lds	r24, 0x00CE	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7e00ce>
     44c:	87 bd       	out	0x27, r24	; 39
     44e:	80 91 c8 00 	lds	r24, 0x00C8	; 0x8000c8 <__TEXT_REGION_LENGTH__+0x7e00c8>
     452:	87 ff       	sbrs	r24, 7
     454:	fc cf       	rjmp	.-8      	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
     456:	80 91 ce 00 	lds	r24, 0x00CE	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7e00ce>
     45a:	88 bd       	out	0x28, r24	; 40
     45c:	80 91 c8 00 	lds	r24, 0x00C8	; 0x8000c8 <__TEXT_REGION_LENGTH__+0x7e00c8>
     460:	87 ff       	sbrs	r24, 7
     462:	fc cf       	rjmp	.-8      	; 0x45c <__LOCK_REGION_LENGTH__+0x5c>
     464:	80 91 ce 00 	lds	r24, 0x00CE	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7e00ce>
     468:	80 93 b3 00 	sts	0x00B3, r24	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7e00b3>
     46c:	80 91 c8 00 	lds	r24, 0x00C8	; 0x8000c8 <__TEXT_REGION_LENGTH__+0x7e00c8>
     470:	87 ff       	sbrs	r24, 7
     472:	fc cf       	rjmp	.-8      	; 0x46c <__LOCK_REGION_LENGTH__+0x6c>
     474:	80 91 ce 00 	lds	r24, 0x00CE	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7e00ce>
     478:	80 93 b4 00 	sts	0x00B4, r24	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7e00b4>
     47c:	85 cf       	rjmp	.-246    	; 0x388 <__vector_28+0x36>
     47e:	80 32       	cpi	r24, 0x20	; 32
     480:	09 f4       	brne	.+2      	; 0x484 <__LOCK_REGION_LENGTH__+0x84>
     482:	92 c0       	rjmp	.+292    	; 0x5a8 <__LOCK_REGION_LENGTH__+0x1a8>
     484:	c8 f1       	brcs	.+114    	; 0x4f8 <__LOCK_REGION_LENGTH__+0xf8>
     486:	80 33       	cpi	r24, 0x30	; 48
     488:	09 f4       	brne	.+2      	; 0x48c <__LOCK_REGION_LENGTH__+0x8c>
     48a:	58 c0       	rjmp	.+176    	; 0x53c <__LOCK_REGION_LENGTH__+0x13c>
     48c:	80 35       	cpi	r24, 0x50	; 80
     48e:	09 f0       	breq	.+2      	; 0x492 <__LOCK_REGION_LENGTH__+0x92>
     490:	7b cf       	rjmp	.-266    	; 0x388 <__vector_28+0x36>
     492:	20 e0       	ldi	r18, 0x00	; 0
     494:	30 e0       	ldi	r19, 0x00	; 0
     496:	48 ec       	ldi	r20, 0xC8	; 200
     498:	52 e4       	ldi	r21, 0x42	; 66
     49a:	60 91 32 01 	lds	r22, 0x0132	; 0x800132 <u_r>
     49e:	70 91 33 01 	lds	r23, 0x0133	; 0x800133 <u_r+0x1>
     4a2:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <u_r+0x2>
     4a6:	90 91 35 01 	lds	r25, 0x0135	; 0x800135 <u_r+0x3>
     4aa:	98 d7       	rcall	.+3888   	; 0x13dc <__mulsf3>
     4ac:	21 d6       	rcall	.+3138   	; 0x10f0 <__fixsfsi>
     4ae:	70 93 41 01 	sts	0x0141, r23	; 0x800141 <send_EE+0x1>
     4b2:	60 93 40 01 	sts	0x0140, r22	; 0x800140 <send_EE>
     4b6:	20 e0       	ldi	r18, 0x00	; 0
     4b8:	30 e0       	ldi	r19, 0x00	; 0
     4ba:	48 ec       	ldi	r20, 0xC8	; 200
     4bc:	52 e4       	ldi	r21, 0x42	; 66
     4be:	60 91 36 01 	lds	r22, 0x0136	; 0x800136 <u_r+0x4>
     4c2:	70 91 37 01 	lds	r23, 0x0137	; 0x800137 <u_r+0x5>
     4c6:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <u_r+0x6>
     4ca:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <u_r+0x7>
     4ce:	86 d7       	rcall	.+3852   	; 0x13dc <__mulsf3>
     4d0:	0f d6       	rcall	.+3102   	; 0x10f0 <__fixsfsi>
     4d2:	70 93 43 01 	sts	0x0143, r23	; 0x800143 <send_EE+0x3>
     4d6:	60 93 42 01 	sts	0x0142, r22	; 0x800142 <send_EE+0x2>
     4da:	e0 e4       	ldi	r30, 0x40	; 64
     4dc:	f1 e0       	ldi	r31, 0x01	; 1
     4de:	26 e4       	ldi	r18, 0x46	; 70
     4e0:	31 e0       	ldi	r19, 0x01	; 1
     4e2:	91 91       	ld	r25, Z+
     4e4:	80 91 c8 00 	lds	r24, 0x00C8	; 0x8000c8 <__TEXT_REGION_LENGTH__+0x7e00c8>
     4e8:	85 ff       	sbrs	r24, 5
     4ea:	fc cf       	rjmp	.-8      	; 0x4e4 <__LOCK_REGION_LENGTH__+0xe4>
     4ec:	90 93 ce 00 	sts	0x00CE, r25	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7e00ce>
     4f0:	2e 17       	cp	r18, r30
     4f2:	3f 07       	cpc	r19, r31
     4f4:	b1 f7       	brne	.-20     	; 0x4e2 <__LOCK_REGION_LENGTH__+0xe2>
     4f6:	48 cf       	rjmp	.-368    	; 0x388 <__vector_28+0x36>
     4f8:	88 23       	and	r24, r24
     4fa:	71 f1       	breq	.+92     	; 0x558 <__LOCK_REGION_LENGTH__+0x158>
     4fc:	80 31       	cpi	r24, 0x10	; 16
     4fe:	09 f0       	breq	.+2      	; 0x502 <__LOCK_REGION_LENGTH__+0x102>
     500:	43 cf       	rjmp	.-378    	; 0x388 <__vector_28+0x36>
     502:	e9 e9       	ldi	r30, 0x99	; 153
     504:	f1 e0       	ldi	r31, 0x01	; 1
     506:	91 91       	ld	r25, Z+
     508:	80 91 c8 00 	lds	r24, 0x00C8	; 0x8000c8 <__TEXT_REGION_LENGTH__+0x7e00c8>
     50c:	85 ff       	sbrs	r24, 5
     50e:	fc cf       	rjmp	.-8      	; 0x508 <__LOCK_REGION_LENGTH__+0x108>
     510:	90 93 ce 00 	sts	0x00CE, r25	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7e00ce>
     514:	81 e0       	ldi	r24, 0x01	; 1
     516:	ef 39       	cpi	r30, 0x9F	; 159
     518:	f8 07       	cpc	r31, r24
     51a:	a9 f7       	brne	.-22     	; 0x506 <__LOCK_REGION_LENGTH__+0x106>
     51c:	35 cf       	rjmp	.-406    	; 0x388 <__vector_28+0x36>
     51e:	80 38       	cpi	r24, 0x80	; 128
     520:	51 f1       	breq	.+84     	; 0x576 <__LOCK_REGION_LENGTH__+0x176>
     522:	80 39       	cpi	r24, 0x90	; 144
     524:	09 f0       	breq	.+2      	; 0x528 <__LOCK_REGION_LENGTH__+0x128>
     526:	30 cf       	rjmp	.-416    	; 0x388 <__vector_28+0x36>
     528:	20 e3       	ldi	r18, 0x30	; 48
     52a:	31 e0       	ldi	r19, 0x01	; 1
     52c:	4d e2       	ldi	r20, 0x2D	; 45
     52e:	51 e0       	ldi	r21, 0x01	; 1
     530:	6d e8       	ldi	r22, 0x8D	; 141
     532:	71 e0       	ldi	r23, 0x01	; 1
     534:	89 e9       	ldi	r24, 0x99	; 153
     536:	91 e0       	ldi	r25, 0x01	; 1
     538:	dd de       	rcall	.-582    	; 0x2f4 <updateState>
     53a:	26 cf       	rjmp	.-436    	; 0x388 <__vector_28+0x36>
     53c:	e1 e8       	ldi	r30, 0x81	; 129
     53e:	f1 e0       	ldi	r31, 0x01	; 1
     540:	91 91       	ld	r25, Z+
     542:	80 91 c8 00 	lds	r24, 0x00C8	; 0x8000c8 <__TEXT_REGION_LENGTH__+0x7e00c8>
     546:	85 ff       	sbrs	r24, 5
     548:	fc cf       	rjmp	.-8      	; 0x542 <__LOCK_REGION_LENGTH__+0x142>
     54a:	90 93 ce 00 	sts	0x00CE, r25	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7e00ce>
     54e:	81 e0       	ldi	r24, 0x01	; 1
     550:	e7 38       	cpi	r30, 0x87	; 135
     552:	f8 07       	cpc	r31, r24
     554:	a9 f7       	brne	.-22     	; 0x540 <__LOCK_REGION_LENGTH__+0x140>
     556:	18 cf       	rjmp	.-464    	; 0x388 <__vector_28+0x36>
     558:	ef e9       	ldi	r30, 0x9F	; 159
     55a:	f1 e0       	ldi	r31, 0x01	; 1
     55c:	25 ea       	ldi	r18, 0xA5	; 165
     55e:	31 e0       	ldi	r19, 0x01	; 1
     560:	91 91       	ld	r25, Z+
     562:	80 91 c8 00 	lds	r24, 0x00C8	; 0x8000c8 <__TEXT_REGION_LENGTH__+0x7e00c8>
     566:	85 ff       	sbrs	r24, 5
     568:	fc cf       	rjmp	.-8      	; 0x562 <__LOCK_REGION_LENGTH__+0x162>
     56a:	90 93 ce 00 	sts	0x00CE, r25	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7e00ce>
     56e:	2e 17       	cp	r18, r30
     570:	3f 07       	cpc	r19, r31
     572:	b1 f7       	brne	.-20     	; 0x560 <__LOCK_REGION_LENGTH__+0x160>
     574:	09 cf       	rjmp	.-494    	; 0x388 <__vector_28+0x36>
     576:	ef e9       	ldi	r30, 0x9F	; 159
     578:	f1 e0       	ldi	r31, 0x01	; 1
     57a:	45 ea       	ldi	r20, 0xA5	; 165
     57c:	51 e0       	ldi	r21, 0x01	; 1
     57e:	80 91 c8 00 	lds	r24, 0x00C8	; 0x8000c8 <__TEXT_REGION_LENGTH__+0x7e00c8>
     582:	87 ff       	sbrs	r24, 7
     584:	fc cf       	rjmp	.-8      	; 0x57e <__LOCK_REGION_LENGTH__+0x17e>
     586:	90 91 ce 00 	lds	r25, 0x00CE	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7e00ce>
     58a:	80 91 c8 00 	lds	r24, 0x00C8	; 0x8000c8 <__TEXT_REGION_LENGTH__+0x7e00c8>
     58e:	87 ff       	sbrs	r24, 7
     590:	fc cf       	rjmp	.-8      	; 0x58a <__LOCK_REGION_LENGTH__+0x18a>
     592:	20 91 ce 00 	lds	r18, 0x00CE	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7e00ce>
     596:	89 2f       	mov	r24, r25
     598:	90 e0       	ldi	r25, 0x00	; 0
     59a:	92 2b       	or	r25, r18
     59c:	81 93       	st	Z+, r24
     59e:	91 93       	st	Z+, r25
     5a0:	4e 17       	cp	r20, r30
     5a2:	5f 07       	cpc	r21, r31
     5a4:	61 f7       	brne	.-40     	; 0x57e <__LOCK_REGION_LENGTH__+0x17e>
     5a6:	f0 ce       	rjmp	.-544    	; 0x388 <__vector_28+0x36>
     5a8:	e3 e9       	ldi	r30, 0x93	; 147
     5aa:	f1 e0       	ldi	r31, 0x01	; 1
     5ac:	91 91       	ld	r25, Z+
     5ae:	80 91 c8 00 	lds	r24, 0x00C8	; 0x8000c8 <__TEXT_REGION_LENGTH__+0x7e00c8>
     5b2:	85 ff       	sbrs	r24, 5
     5b4:	fc cf       	rjmp	.-8      	; 0x5ae <__LOCK_REGION_LENGTH__+0x1ae>
     5b6:	90 93 ce 00 	sts	0x00CE, r25	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7e00ce>
     5ba:	81 e0       	ldi	r24, 0x01	; 1
     5bc:	e9 39       	cpi	r30, 0x99	; 153
     5be:	f8 07       	cpc	r31, r24
     5c0:	a9 f7       	brne	.-22     	; 0x5ac <__LOCK_REGION_LENGTH__+0x1ac>
     5c2:	e2 ce       	rjmp	.-572    	; 0x388 <__vector_28+0x36>
     5c4:	81 e0       	ldi	r24, 0x01	; 1
     5c6:	90 e0       	ldi	r25, 0x00	; 0
     5c8:	20 91 3e 01 	lds	r18, 0x013E	; 0x80013e <mode_switch>
     5cc:	30 91 3f 01 	lds	r19, 0x013F	; 0x80013f <mode_switch+0x1>
     5d0:	23 2b       	or	r18, r19
     5d2:	11 f0       	breq	.+4      	; 0x5d8 <__LOCK_REGION_LENGTH__+0x1d8>
     5d4:	80 e0       	ldi	r24, 0x00	; 0
     5d6:	90 e0       	ldi	r25, 0x00	; 0
     5d8:	90 93 3f 01 	sts	0x013F, r25	; 0x80013f <mode_switch+0x1>
     5dc:	80 93 3e 01 	sts	0x013E, r24	; 0x80013e <mode_switch>
     5e0:	d3 ce       	rjmp	.-602    	; 0x388 <__vector_28+0x36>
     5e2:	2e e2       	ldi	r18, 0x2E	; 46
     5e4:	31 e0       	ldi	r19, 0x01	; 1
     5e6:	4c e2       	ldi	r20, 0x2C	; 44
     5e8:	51 e0       	ldi	r21, 0x01	; 1
     5ea:	67 e8       	ldi	r22, 0x87	; 135
     5ec:	71 e0       	ldi	r23, 0x01	; 1
     5ee:	83 e9       	ldi	r24, 0x93	; 147
     5f0:	91 e0       	ldi	r25, 0x01	; 1
     5f2:	80 de       	rcall	.-768    	; 0x2f4 <updateState>
     5f4:	c9 ce       	rjmp	.-622    	; 0x388 <__vector_28+0x36>
     5f6:	81 e0       	ldi	r24, 0x01	; 1
     5f8:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <start>
     5fc:	c5 ce       	rjmp	.-630    	; 0x388 <__vector_28+0x36>

000005fe <updateSensor>:
     5fe:	ef 92       	push	r14
     600:	ff 92       	push	r15
     602:	0f 93       	push	r16
     604:	1f 93       	push	r17
     606:	cf 93       	push	r28
     608:	df 93       	push	r29
     60a:	80 e0       	ldi	r24, 0x00	; 0
     60c:	d5 dd       	rcall	.-1110   	; 0x1b8 <ADC_read>
     60e:	7c 01       	movw	r14, r24
     610:	83 e0       	ldi	r24, 0x03	; 3
     612:	d2 dd       	rcall	.-1116   	; 0x1b8 <ADC_read>
     614:	ec 01       	movw	r28, r24
     616:	02 e7       	ldi	r16, 0x72	; 114
     618:	11 e0       	ldi	r17, 0x01	; 1
     61a:	b7 01       	movw	r22, r14
     61c:	ff 0c       	add	r15, r15
     61e:	88 0b       	sbc	r24, r24
     620:	99 0b       	sbc	r25, r25
     622:	99 d5       	rcall	.+2866   	; 0x1156 <__floatsisf>
     624:	20 e0       	ldi	r18, 0x00	; 0
     626:	30 e0       	ldi	r19, 0x00	; 0
     628:	40 e8       	ldi	r20, 0x80	; 128
     62a:	5a e3       	ldi	r21, 0x3A	; 58
     62c:	d7 d6       	rcall	.+3502   	; 0x13dc <__mulsf3>
     62e:	2c ee       	ldi	r18, 0xEC	; 236
     630:	31 e5       	ldi	r19, 0x51	; 81
     632:	48 eb       	ldi	r20, 0xB8	; 184
     634:	50 e4       	ldi	r21, 0x40	; 64
     636:	d2 d6       	rcall	.+3492   	; 0x13dc <__mulsf3>
     638:	26 e6       	ldi	r18, 0x66	; 102
     63a:	36 e6       	ldi	r19, 0x66	; 102
     63c:	46 ea       	ldi	r20, 0xA6	; 166
     63e:	5f e3       	ldi	r21, 0x3F	; 63
     640:	87 d4       	rcall	.+2318   	; 0xf50 <__subsf3>
     642:	f8 01       	movw	r30, r16
     644:	60 83       	st	Z, r22
     646:	71 83       	std	Z+1, r23	; 0x01
     648:	82 83       	std	Z+2, r24	; 0x02
     64a:	93 83       	std	Z+3, r25	; 0x03
     64c:	be 01       	movw	r22, r28
     64e:	dd 0f       	add	r29, r29
     650:	88 0b       	sbc	r24, r24
     652:	99 0b       	sbc	r25, r25
     654:	80 d5       	rcall	.+2816   	; 0x1156 <__floatsisf>
     656:	20 e0       	ldi	r18, 0x00	; 0
     658:	30 e0       	ldi	r19, 0x00	; 0
     65a:	40 e8       	ldi	r20, 0x80	; 128
     65c:	5a e3       	ldi	r21, 0x3A	; 58
     65e:	be d6       	rcall	.+3452   	; 0x13dc <__mulsf3>
     660:	2c ee       	ldi	r18, 0xEC	; 236
     662:	31 e5       	ldi	r19, 0x51	; 81
     664:	48 eb       	ldi	r20, 0xB8	; 184
     666:	50 e4       	ldi	r21, 0x40	; 64
     668:	b9 d6       	rcall	.+3442   	; 0x13dc <__mulsf3>
     66a:	28 e0       	ldi	r18, 0x08	; 8
     66c:	3c ea       	ldi	r19, 0xAC	; 172
     66e:	4c eb       	ldi	r20, 0xBC	; 188
     670:	5f e3       	ldi	r21, 0x3F	; 63
     672:	6e d4       	rcall	.+2268   	; 0xf50 <__subsf3>
     674:	f8 01       	movw	r30, r16
     676:	64 83       	std	Z+4, r22	; 0x04
     678:	75 83       	std	Z+5, r23	; 0x05
     67a:	86 83       	std	Z+6, r24	; 0x06
     67c:	97 83       	std	Z+7, r25	; 0x07
     67e:	df 91       	pop	r29
     680:	cf 91       	pop	r28
     682:	1f 91       	pop	r17
     684:	0f 91       	pop	r16
     686:	ff 90       	pop	r15
     688:	ef 90       	pop	r14
     68a:	08 95       	ret

0000068c <rotateVector2D>:
     68c:	4f 92       	push	r4
     68e:	5f 92       	push	r5
     690:	6f 92       	push	r6
     692:	7f 92       	push	r7
     694:	8f 92       	push	r8
     696:	9f 92       	push	r9
     698:	af 92       	push	r10
     69a:	bf 92       	push	r11
     69c:	cf 92       	push	r12
     69e:	df 92       	push	r13
     6a0:	ef 92       	push	r14
     6a2:	ff 92       	push	r15
     6a4:	cf 93       	push	r28
     6a6:	df 93       	push	r29
     6a8:	cd b7       	in	r28, 0x3d	; 61
     6aa:	de b7       	in	r29, 0x3e	; 62
     6ac:	2a 97       	sbiw	r28, 0x0a	; 10
     6ae:	0f b6       	in	r0, 0x3f	; 63
     6b0:	f8 94       	cli
     6b2:	de bf       	out	0x3e, r29	; 62
     6b4:	0f be       	out	0x3f, r0	; 63
     6b6:	cd bf       	out	0x3d, r28	; 61
     6b8:	9a 87       	std	Y+10, r25	; 0x0a
     6ba:	89 87       	std	Y+9, r24	; 0x09
     6bc:	4a 01       	movw	r8, r20
     6be:	5b 01       	movw	r10, r22
     6c0:	dc 01       	movw	r26, r24
     6c2:	8d 91       	ld	r24, X+
     6c4:	9d 91       	ld	r25, X+
     6c6:	0d 90       	ld	r0, X+
     6c8:	bc 91       	ld	r27, X
     6ca:	a0 2d       	mov	r26, r0
     6cc:	89 83       	std	Y+1, r24	; 0x01
     6ce:	9a 83       	std	Y+2, r25	; 0x02
     6d0:	ab 83       	std	Y+3, r26	; 0x03
     6d2:	bc 83       	std	Y+4, r27	; 0x04
     6d4:	cb 01       	movw	r24, r22
     6d6:	ba 01       	movw	r22, r20
     6d8:	a0 d4       	rcall	.+2368   	; 0x101a <cos>
     6da:	6b 01       	movw	r12, r22
     6dc:	7c 01       	movw	r14, r24
     6de:	e9 85       	ldd	r30, Y+9	; 0x09
     6e0:	fa 85       	ldd	r31, Y+10	; 0x0a
     6e2:	44 80       	ldd	r4, Z+4	; 0x04
     6e4:	55 80       	ldd	r5, Z+5	; 0x05
     6e6:	66 80       	ldd	r6, Z+6	; 0x06
     6e8:	77 80       	ldd	r7, Z+7	; 0x07
     6ea:	c5 01       	movw	r24, r10
     6ec:	b4 01       	movw	r22, r8
     6ee:	f9 d6       	rcall	.+3570   	; 0x14e2 <sin>
     6f0:	4b 01       	movw	r8, r22
     6f2:	5c 01       	movw	r10, r24
     6f4:	a7 01       	movw	r20, r14
     6f6:	96 01       	movw	r18, r12
     6f8:	69 81       	ldd	r22, Y+1	; 0x01
     6fa:	7a 81       	ldd	r23, Y+2	; 0x02
     6fc:	8b 81       	ldd	r24, Y+3	; 0x03
     6fe:	9c 81       	ldd	r25, Y+4	; 0x04
     700:	6d d6       	rcall	.+3290   	; 0x13dc <__mulsf3>
     702:	6d 83       	std	Y+5, r22	; 0x05
     704:	7e 83       	std	Y+6, r23	; 0x06
     706:	8f 83       	std	Y+7, r24	; 0x07
     708:	98 87       	std	Y+8, r25	; 0x08
     70a:	a5 01       	movw	r20, r10
     70c:	94 01       	movw	r18, r8
     70e:	c3 01       	movw	r24, r6
     710:	b2 01       	movw	r22, r4
     712:	64 d6       	rcall	.+3272   	; 0x13dc <__mulsf3>
     714:	9b 01       	movw	r18, r22
     716:	ac 01       	movw	r20, r24
     718:	6d 81       	ldd	r22, Y+5	; 0x05
     71a:	7e 81       	ldd	r23, Y+6	; 0x06
     71c:	8f 81       	ldd	r24, Y+7	; 0x07
     71e:	98 85       	ldd	r25, Y+8	; 0x08
     720:	17 d4       	rcall	.+2094   	; 0xf50 <__subsf3>
     722:	a9 85       	ldd	r26, Y+9	; 0x09
     724:	ba 85       	ldd	r27, Y+10	; 0x0a
     726:	6d 93       	st	X+, r22
     728:	7d 93       	st	X+, r23
     72a:	8d 93       	st	X+, r24
     72c:	9c 93       	st	X, r25
     72e:	13 97       	sbiw	r26, 0x03	; 3
     730:	a5 01       	movw	r20, r10
     732:	94 01       	movw	r18, r8
     734:	69 81       	ldd	r22, Y+1	; 0x01
     736:	7a 81       	ldd	r23, Y+2	; 0x02
     738:	8b 81       	ldd	r24, Y+3	; 0x03
     73a:	9c 81       	ldd	r25, Y+4	; 0x04
     73c:	4f d6       	rcall	.+3230   	; 0x13dc <__mulsf3>
     73e:	4b 01       	movw	r8, r22
     740:	5c 01       	movw	r10, r24
     742:	a3 01       	movw	r20, r6
     744:	92 01       	movw	r18, r4
     746:	c7 01       	movw	r24, r14
     748:	b6 01       	movw	r22, r12
     74a:	48 d6       	rcall	.+3216   	; 0x13dc <__mulsf3>
     74c:	9b 01       	movw	r18, r22
     74e:	ac 01       	movw	r20, r24
     750:	c5 01       	movw	r24, r10
     752:	b4 01       	movw	r22, r8
     754:	fe d3       	rcall	.+2044   	; 0xf52 <__addsf3>
     756:	e9 85       	ldd	r30, Y+9	; 0x09
     758:	fa 85       	ldd	r31, Y+10	; 0x0a
     75a:	64 83       	std	Z+4, r22	; 0x04
     75c:	75 83       	std	Z+5, r23	; 0x05
     75e:	86 83       	std	Z+6, r24	; 0x06
     760:	97 83       	std	Z+7, r25	; 0x07
     762:	2a 96       	adiw	r28, 0x0a	; 10
     764:	0f b6       	in	r0, 0x3f	; 63
     766:	f8 94       	cli
     768:	de bf       	out	0x3e, r29	; 62
     76a:	0f be       	out	0x3f, r0	; 63
     76c:	cd bf       	out	0x3d, r28	; 61
     76e:	df 91       	pop	r29
     770:	cf 91       	pop	r28
     772:	ff 90       	pop	r15
     774:	ef 90       	pop	r14
     776:	df 90       	pop	r13
     778:	cf 90       	pop	r12
     77a:	bf 90       	pop	r11
     77c:	af 90       	pop	r10
     77e:	9f 90       	pop	r9
     780:	8f 90       	pop	r8
     782:	7f 90       	pop	r7
     784:	6f 90       	pop	r6
     786:	5f 90       	pop	r5
     788:	4f 90       	pop	r4
     78a:	08 95       	ret

0000078c <sensorKinematics>:
     78c:	2f 92       	push	r2
     78e:	3f 92       	push	r3
     790:	4f 92       	push	r4
     792:	5f 92       	push	r5
     794:	6f 92       	push	r6
     796:	7f 92       	push	r7
     798:	8f 92       	push	r8
     79a:	9f 92       	push	r9
     79c:	af 92       	push	r10
     79e:	bf 92       	push	r11
     7a0:	cf 92       	push	r12
     7a2:	df 92       	push	r13
     7a4:	ef 92       	push	r14
     7a6:	ff 92       	push	r15
     7a8:	0f 93       	push	r16
     7aa:	1f 93       	push	r17
     7ac:	cf 93       	push	r28
     7ae:	df 93       	push	r29
     7b0:	cd b7       	in	r28, 0x3d	; 61
     7b2:	de b7       	in	r29, 0x3e	; 62
     7b4:	2c 97       	sbiw	r28, 0x0c	; 12
     7b6:	0f b6       	in	r0, 0x3f	; 63
     7b8:	f8 94       	cli
     7ba:	de bf       	out	0x3e, r29	; 62
     7bc:	0f be       	out	0x3f, r0	; 63
     7be:	cd bf       	out	0x3d, r28	; 61
     7c0:	7c 01       	movw	r14, r24
     7c2:	dc 01       	movw	r26, r24
     7c4:	6d 91       	ld	r22, X+
     7c6:	7d 91       	ld	r23, X+
     7c8:	8d 91       	ld	r24, X+
     7ca:	9c 91       	ld	r25, X
     7cc:	26 d4       	rcall	.+2124   	; 0x101a <cos>
     7ce:	2a e6       	ldi	r18, 0x6A	; 106
     7d0:	c2 2e       	mov	r12, r18
     7d2:	21 e0       	ldi	r18, 0x01	; 1
     7d4:	d2 2e       	mov	r13, r18
     7d6:	20 e0       	ldi	r18, 0x00	; 0
     7d8:	30 e0       	ldi	r19, 0x00	; 0
     7da:	48 ec       	ldi	r20, 0xC8	; 200
     7dc:	51 e4       	ldi	r21, 0x41	; 65
     7de:	fe d5       	rcall	.+3068   	; 0x13dc <__mulsf3>
     7e0:	f6 01       	movw	r30, r12
     7e2:	20 81       	ld	r18, Z
     7e4:	31 81       	ldd	r19, Z+1	; 0x01
     7e6:	42 81       	ldd	r20, Z+2	; 0x02
     7e8:	53 81       	ldd	r21, Z+3	; 0x03
     7ea:	b3 d3       	rcall	.+1894   	; 0xf52 <__addsf3>
     7ec:	2b 01       	movw	r4, r22
     7ee:	3c 01       	movw	r6, r24
     7f0:	02 e6       	ldi	r16, 0x62	; 98
     7f2:	11 e0       	ldi	r17, 0x01	; 1
     7f4:	d8 01       	movw	r26, r16
     7f6:	6d 93       	st	X+, r22
     7f8:	7d 93       	st	X+, r23
     7fa:	8d 93       	st	X+, r24
     7fc:	9c 93       	st	X, r25
     7fe:	13 97       	sbiw	r26, 0x03	; 3
     800:	f7 01       	movw	r30, r14
     802:	60 81       	ld	r22, Z
     804:	71 81       	ldd	r23, Z+1	; 0x01
     806:	82 81       	ldd	r24, Z+2	; 0x02
     808:	93 81       	ldd	r25, Z+3	; 0x03
     80a:	6b d6       	rcall	.+3286   	; 0x14e2 <sin>
     80c:	20 e0       	ldi	r18, 0x00	; 0
     80e:	30 e0       	ldi	r19, 0x00	; 0
     810:	48 ec       	ldi	r20, 0xC8	; 200
     812:	51 e4       	ldi	r21, 0x41	; 65
     814:	e3 d5       	rcall	.+3014   	; 0x13dc <__mulsf3>
     816:	d6 01       	movw	r26, r12
     818:	14 96       	adiw	r26, 0x04	; 4
     81a:	2d 91       	ld	r18, X+
     81c:	3d 91       	ld	r19, X+
     81e:	4d 91       	ld	r20, X+
     820:	5c 91       	ld	r21, X
     822:	17 97       	sbiw	r26, 0x07	; 7
     824:	96 d3       	rcall	.+1836   	; 0xf52 <__addsf3>
     826:	69 87       	std	Y+9, r22	; 0x09
     828:	7a 87       	std	Y+10, r23	; 0x0a
     82a:	8b 87       	std	Y+11, r24	; 0x0b
     82c:	9c 87       	std	Y+12, r25	; 0x0c
     82e:	f8 01       	movw	r30, r16
     830:	64 83       	std	Z+4, r22	; 0x04
     832:	75 83       	std	Z+5, r23	; 0x05
     834:	86 83       	std	Z+6, r24	; 0x06
     836:	97 83       	std	Z+7, r25	; 0x07
     838:	d7 01       	movw	r26, r14
     83a:	14 96       	adiw	r26, 0x04	; 4
     83c:	cd 90       	ld	r12, X+
     83e:	dd 90       	ld	r13, X+
     840:	ed 90       	ld	r14, X+
     842:	fc 90       	ld	r15, X
     844:	17 97       	sbiw	r26, 0x07	; 7
     846:	c7 01       	movw	r24, r14
     848:	b6 01       	movw	r22, r12
     84a:	e7 d3       	rcall	.+1998   	; 0x101a <cos>
     84c:	34 e2       	ldi	r19, 0x24	; 36
     84e:	23 2e       	mov	r2, r19
     850:	31 e0       	ldi	r19, 0x01	; 1
     852:	33 2e       	mov	r3, r19
     854:	20 e0       	ldi	r18, 0x00	; 0
     856:	30 e0       	ldi	r19, 0x00	; 0
     858:	48 ec       	ldi	r20, 0xC8	; 200
     85a:	51 e4       	ldi	r21, 0x41	; 65
     85c:	bf d5       	rcall	.+2942   	; 0x13dc <__mulsf3>
     85e:	f1 01       	movw	r30, r2
     860:	20 81       	ld	r18, Z
     862:	31 81       	ldd	r19, Z+1	; 0x01
     864:	42 81       	ldd	r20, Z+2	; 0x02
     866:	53 81       	ldd	r21, Z+3	; 0x03
     868:	74 d3       	rcall	.+1768   	; 0xf52 <__addsf3>
     86a:	4b 01       	movw	r8, r22
     86c:	5c 01       	movw	r10, r24
     86e:	aa e5       	ldi	r26, 0x5A	; 90
     870:	b1 e0       	ldi	r27, 0x01	; 1
     872:	6d 93       	st	X+, r22
     874:	7d 93       	st	X+, r23
     876:	8d 93       	st	X+, r24
     878:	9c 93       	st	X, r25
     87a:	13 97       	sbiw	r26, 0x03	; 3
     87c:	c7 01       	movw	r24, r14
     87e:	b6 01       	movw	r22, r12
     880:	30 d6       	rcall	.+3168   	; 0x14e2 <sin>
     882:	20 e0       	ldi	r18, 0x00	; 0
     884:	30 e0       	ldi	r19, 0x00	; 0
     886:	48 ec       	ldi	r20, 0xC8	; 200
     888:	51 e4       	ldi	r21, 0x41	; 65
     88a:	a8 d5       	rcall	.+2896   	; 0x13dc <__mulsf3>
     88c:	f1 01       	movw	r30, r2
     88e:	24 81       	ldd	r18, Z+4	; 0x04
     890:	35 81       	ldd	r19, Z+5	; 0x05
     892:	46 81       	ldd	r20, Z+6	; 0x06
     894:	57 81       	ldd	r21, Z+7	; 0x07
     896:	5d d3       	rcall	.+1722   	; 0xf52 <__addsf3>
     898:	6b 01       	movw	r12, r22
     89a:	7c 01       	movw	r14, r24
     89c:	60 93 5e 01 	sts	0x015E, r22	; 0x80015e <p4+0x4>
     8a0:	70 93 5f 01 	sts	0x015F, r23	; 0x80015f <p4+0x5>
     8a4:	80 93 60 01 	sts	0x0160, r24	; 0x800160 <p4+0x6>
     8a8:	90 93 61 01 	sts	0x0161, r25	; 0x800161 <p4+0x7>
     8ac:	a3 01       	movw	r20, r6
     8ae:	92 01       	movw	r18, r4
     8b0:	c5 01       	movw	r24, r10
     8b2:	b4 01       	movw	r22, r8
     8b4:	4d d3       	rcall	.+1690   	; 0xf50 <__subsf3>
     8b6:	2b 01       	movw	r4, r22
     8b8:	3c 01       	movw	r6, r24
     8ba:	29 85       	ldd	r18, Y+9	; 0x09
     8bc:	3a 85       	ldd	r19, Y+10	; 0x0a
     8be:	4b 85       	ldd	r20, Y+11	; 0x0b
     8c0:	5c 85       	ldd	r21, Y+12	; 0x0c
     8c2:	c7 01       	movw	r24, r14
     8c4:	b6 01       	movw	r22, r12
     8c6:	44 d3       	rcall	.+1672   	; 0xf50 <__subsf3>
     8c8:	4b 01       	movw	r8, r22
     8ca:	5c 01       	movw	r10, r24
     8cc:	a3 01       	movw	r20, r6
     8ce:	92 01       	movw	r18, r4
     8d0:	c3 01       	movw	r24, r6
     8d2:	b2 01       	movw	r22, r4
     8d4:	83 d5       	rcall	.+2822   	; 0x13dc <__mulsf3>
     8d6:	6b 01       	movw	r12, r22
     8d8:	7c 01       	movw	r14, r24
     8da:	a5 01       	movw	r20, r10
     8dc:	94 01       	movw	r18, r8
     8de:	c5 01       	movw	r24, r10
     8e0:	b4 01       	movw	r22, r8
     8e2:	7c d5       	rcall	.+2808   	; 0x13dc <__mulsf3>
     8e4:	9b 01       	movw	r18, r22
     8e6:	ac 01       	movw	r20, r24
     8e8:	c7 01       	movw	r24, r14
     8ea:	b6 01       	movw	r22, r12
     8ec:	32 d3       	rcall	.+1636   	; 0xf52 <__addsf3>
     8ee:	03 d6       	rcall	.+3078   	; 0x14f6 <sqrt>
     8f0:	6b 01       	movw	r12, r22
     8f2:	7c 01       	movw	r14, r24
     8f4:	9b 01       	movw	r18, r22
     8f6:	ac 01       	movw	r20, r24
     8f8:	71 d5       	rcall	.+2786   	; 0x13dc <__mulsf3>
     8fa:	20 e0       	ldi	r18, 0x00	; 0
     8fc:	30 e0       	ldi	r19, 0x00	; 0
     8fe:	48 ec       	ldi	r20, 0xC8	; 200
     900:	54 e4       	ldi	r21, 0x44	; 68
     902:	27 d3       	rcall	.+1614   	; 0xf52 <__addsf3>
     904:	20 e0       	ldi	r18, 0x00	; 0
     906:	30 e0       	ldi	r19, 0x00	; 0
     908:	48 ec       	ldi	r20, 0xC8	; 200
     90a:	54 e4       	ldi	r21, 0x44	; 68
     90c:	21 d3       	rcall	.+1602   	; 0xf50 <__subsf3>
     90e:	69 87       	std	Y+9, r22	; 0x09
     910:	7a 87       	std	Y+10, r23	; 0x0a
     912:	8b 87       	std	Y+11, r24	; 0x0b
     914:	9c 87       	std	Y+12, r25	; 0x0c
     916:	20 e0       	ldi	r18, 0x00	; 0
     918:	30 e0       	ldi	r19, 0x00	; 0
     91a:	40 ea       	ldi	r20, 0xA0	; 160
     91c:	52 e4       	ldi	r21, 0x42	; 66
     91e:	c7 01       	movw	r24, r14
     920:	b6 01       	movw	r22, r12
     922:	5c d5       	rcall	.+2744   	; 0x13dc <__mulsf3>
     924:	9b 01       	movw	r18, r22
     926:	ac 01       	movw	r20, r24
     928:	69 85       	ldd	r22, Y+9	; 0x09
     92a:	7a 85       	ldd	r23, Y+10	; 0x0a
     92c:	8b 85       	ldd	r24, Y+11	; 0x0b
     92e:	9c 85       	ldd	r25, Y+12	; 0x0c
     930:	77 d3       	rcall	.+1774   	; 0x1020 <__divsf3>
     932:	00 d3       	rcall	.+1536   	; 0xf34 <acos>
     934:	69 87       	std	Y+9, r22	; 0x09
     936:	7a 87       	std	Y+10, r23	; 0x0a
     938:	8b 87       	std	Y+11, r24	; 0x0b
     93a:	9c 87       	std	Y+12, r25	; 0x0c
     93c:	20 e0       	ldi	r18, 0x00	; 0
     93e:	30 e0       	ldi	r19, 0x00	; 0
     940:	40 e2       	ldi	r20, 0x20	; 32
     942:	52 e4       	ldi	r21, 0x42	; 66
     944:	c3 01       	movw	r24, r6
     946:	b2 01       	movw	r22, r4
     948:	49 d5       	rcall	.+2706   	; 0x13dc <__mulsf3>
     94a:	a7 01       	movw	r20, r14
     94c:	96 01       	movw	r18, r12
     94e:	68 d3       	rcall	.+1744   	; 0x1020 <__divsf3>
     950:	69 83       	std	Y+1, r22	; 0x01
     952:	7a 83       	std	Y+2, r23	; 0x02
     954:	8b 83       	std	Y+3, r24	; 0x03
     956:	9c 83       	std	Y+4, r25	; 0x04
     958:	20 e0       	ldi	r18, 0x00	; 0
     95a:	30 e0       	ldi	r19, 0x00	; 0
     95c:	40 e2       	ldi	r20, 0x20	; 32
     95e:	52 e4       	ldi	r21, 0x42	; 66
     960:	c5 01       	movw	r24, r10
     962:	b4 01       	movw	r22, r8
     964:	3b d5       	rcall	.+2678   	; 0x13dc <__mulsf3>
     966:	a7 01       	movw	r20, r14
     968:	96 01       	movw	r18, r12
     96a:	5a d3       	rcall	.+1716   	; 0x1020 <__divsf3>
     96c:	6d 83       	std	Y+5, r22	; 0x05
     96e:	7e 83       	std	Y+6, r23	; 0x06
     970:	8f 83       	std	Y+7, r24	; 0x07
     972:	98 87       	std	Y+8, r25	; 0x08
     974:	49 85       	ldd	r20, Y+9	; 0x09
     976:	5a 85       	ldd	r21, Y+10	; 0x0a
     978:	6b 85       	ldd	r22, Y+11	; 0x0b
     97a:	7c 85       	ldd	r23, Y+12	; 0x0c
     97c:	ce 01       	movw	r24, r28
     97e:	01 96       	adiw	r24, 0x01	; 1
     980:	85 de       	rcall	.-758    	; 0x68c <rotateVector2D>
     982:	2d 81       	ldd	r18, Y+5	; 0x05
     984:	3e 81       	ldd	r19, Y+6	; 0x06
     986:	4f 81       	ldd	r20, Y+7	; 0x07
     988:	58 85       	ldd	r21, Y+8	; 0x08
     98a:	d8 01       	movw	r26, r16
     98c:	14 96       	adiw	r26, 0x04	; 4
     98e:	6d 91       	ld	r22, X+
     990:	7d 91       	ld	r23, X+
     992:	8d 91       	ld	r24, X+
     994:	9c 91       	ld	r25, X
     996:	17 97       	sbiw	r26, 0x07	; 7
     998:	dc d2       	rcall	.+1464   	; 0xf52 <__addsf3>
     99a:	4b 01       	movw	r8, r22
     99c:	5c 01       	movw	r10, r24
     99e:	4e e4       	ldi	r20, 0x4E	; 78
     9a0:	e4 2e       	mov	r14, r20
     9a2:	41 e0       	ldi	r20, 0x01	; 1
     9a4:	f4 2e       	mov	r15, r20
     9a6:	29 81       	ldd	r18, Y+1	; 0x01
     9a8:	3a 81       	ldd	r19, Y+2	; 0x02
     9aa:	4b 81       	ldd	r20, Y+3	; 0x03
     9ac:	5c 81       	ldd	r21, Y+4	; 0x04
     9ae:	f8 01       	movw	r30, r16
     9b0:	60 81       	ld	r22, Z
     9b2:	71 81       	ldd	r23, Z+1	; 0x01
     9b4:	82 81       	ldd	r24, Z+2	; 0x02
     9b6:	93 81       	ldd	r25, Z+3	; 0x03
     9b8:	cc d2       	rcall	.+1432   	; 0xf52 <__addsf3>
     9ba:	06 e4       	ldi	r16, 0x46	; 70
     9bc:	11 e0       	ldi	r17, 0x01	; 1
     9be:	d8 01       	movw	r26, r16
     9c0:	2d 91       	ld	r18, X+
     9c2:	3d 91       	ld	r19, X+
     9c4:	4d 91       	ld	r20, X+
     9c6:	5c 91       	ld	r21, X
     9c8:	c3 d2       	rcall	.+1414   	; 0xf50 <__subsf3>
     9ca:	f7 01       	movw	r30, r14
     9cc:	60 83       	st	Z, r22
     9ce:	71 83       	std	Z+1, r23	; 0x01
     9d0:	82 83       	std	Z+2, r24	; 0x02
     9d2:	93 83       	std	Z+3, r25	; 0x03
     9d4:	d8 01       	movw	r26, r16
     9d6:	14 96       	adiw	r26, 0x04	; 4
     9d8:	2d 91       	ld	r18, X+
     9da:	3d 91       	ld	r19, X+
     9dc:	4d 91       	ld	r20, X+
     9de:	5c 91       	ld	r21, X
     9e0:	17 97       	sbiw	r26, 0x07	; 7
     9e2:	c5 01       	movw	r24, r10
     9e4:	b4 01       	movw	r22, r8
     9e6:	b4 d2       	rcall	.+1384   	; 0xf50 <__subsf3>
     9e8:	f7 01       	movw	r30, r14
     9ea:	64 83       	std	Z+4, r22	; 0x04
     9ec:	75 83       	std	Z+5, r23	; 0x05
     9ee:	86 83       	std	Z+6, r24	; 0x06
     9f0:	97 83       	std	Z+7, r25	; 0x07
     9f2:	2c 96       	adiw	r28, 0x0c	; 12
     9f4:	0f b6       	in	r0, 0x3f	; 63
     9f6:	f8 94       	cli
     9f8:	de bf       	out	0x3e, r29	; 62
     9fa:	0f be       	out	0x3f, r0	; 63
     9fc:	cd bf       	out	0x3d, r28	; 61
     9fe:	df 91       	pop	r29
     a00:	cf 91       	pop	r28
     a02:	1f 91       	pop	r17
     a04:	0f 91       	pop	r16
     a06:	ff 90       	pop	r15
     a08:	ef 90       	pop	r14
     a0a:	df 90       	pop	r13
     a0c:	cf 90       	pop	r12
     a0e:	bf 90       	pop	r11
     a10:	af 90       	pop	r10
     a12:	9f 90       	pop	r9
     a14:	8f 90       	pop	r8
     a16:	7f 90       	pop	r7
     a18:	6f 90       	pop	r6
     a1a:	5f 90       	pop	r5
     a1c:	4f 90       	pop	r4
     a1e:	3f 90       	pop	r3
     a20:	2f 90       	pop	r2
     a22:	08 95       	ret

00000a24 <nullSpaceControl>:


//////////////////////////////////////////////////////////////////////////
///     Cancel out force measured by sensor
//////////////////////////////////////////////////////////////////////////
void nullSpaceControl (void) {
     a24:	2f 92       	push	r2
     a26:	3f 92       	push	r3
     a28:	4f 92       	push	r4
     a2a:	5f 92       	push	r5
     a2c:	6f 92       	push	r6
     a2e:	7f 92       	push	r7
     a30:	8f 92       	push	r8
     a32:	9f 92       	push	r9
     a34:	af 92       	push	r10
     a36:	bf 92       	push	r11
     a38:	cf 92       	push	r12
     a3a:	df 92       	push	r13
     a3c:	ef 92       	push	r14
     a3e:	ff 92       	push	r15
     a40:	0f 93       	push	r16
     a42:	1f 93       	push	r17
     a44:	cf 93       	push	r28
     a46:	df 93       	push	r29
     a48:	cd b7       	in	r28, 0x3d	; 61
     a4a:	de b7       	in	r29, 0x3e	; 62
     a4c:	68 97       	sbiw	r28, 0x18	; 24
     a4e:	0f b6       	in	r0, 0x3f	; 63
     a50:	f8 94       	cli
     a52:	de bf       	out	0x3e, r29	; 62
     a54:	0f be       	out	0x3f, r0	; 63
     a56:	cd bf       	out	0x3d, r28	; 61
	// u_r[0] is X motion (Forw+/Backw-)
	// u_r[1] is Y motion (Right+/Left-)
	// u_r[2] is Z motion (CCW+/CW-)
	
	unsigned char u[3][2];
	float f[3] = {0,0,0};
     a58:	19 82       	std	Y+1, r1	; 0x01
     a5a:	1a 82       	std	Y+2, r1	; 0x02
     a5c:	1b 82       	std	Y+3, r1	; 0x03
     a5e:	1c 82       	std	Y+4, r1	; 0x04
     a60:	1d 82       	std	Y+5, r1	; 0x05
     a62:	1e 82       	std	Y+6, r1	; 0x06
     a64:	1f 82       	std	Y+7, r1	; 0x07
     a66:	18 86       	std	Y+8, r1	; 0x08
     a68:	19 86       	std	Y+9, r1	; 0x09
     a6a:	1a 86       	std	Y+10, r1	; 0x0a
     a6c:	1b 86       	std	Y+11, r1	; 0x0b
     a6e:	1c 86       	std	Y+12, r1	; 0x0c
	float gainY; // gain in ROBOT's Y direction
	
	gainY = 20;
	gainX = gainY;
	// Sensor displacement 'away' from robot has dampened so increase the 'fwd/back' gain
	if (EE[1] > 3) {
     a70:	c0 90 52 01 	lds	r12, 0x0152	; 0x800152 <EE+0x4>
     a74:	d0 90 53 01 	lds	r13, 0x0153	; 0x800153 <EE+0x5>
     a78:	e0 90 54 01 	lds	r14, 0x0154	; 0x800154 <EE+0x6>
     a7c:	f0 90 55 01 	lds	r15, 0x0155	; 0x800155 <EE+0x7>
     a80:	20 e0       	ldi	r18, 0x00	; 0
     a82:	30 e0       	ldi	r19, 0x00	; 0
     a84:	40 e4       	ldi	r20, 0x40	; 64
     a86:	50 e4       	ldi	r21, 0x40	; 64
     a88:	c7 01       	movw	r24, r14
     a8a:	b6 01       	movw	r22, r12
     a8c:	69 d4       	rcall	.+2258   	; 0x1360 <__gesf2>
     a8e:	18 16       	cp	r1, r24
     a90:	0c f4       	brge	.+2      	; 0xa94 <nullSpaceControl+0x70>
     a92:	cb c0       	rjmp	.+406    	; 0xc2a <nullSpaceControl+0x206>
	
	float gainX; // gain in ROBOT's X direction
	float gainY; // gain in ROBOT's Y direction
	
	gainY = 20;
	gainX = gainY;
     a94:	60 e0       	ldi	r22, 0x00	; 0
     a96:	70 e0       	ldi	r23, 0x00	; 0
     a98:	80 ea       	ldi	r24, 0xA0	; 160
     a9a:	91 e4       	ldi	r25, 0x41	; 65
	if (EE[1] > 3) {
		gainX += 10;
	}

	// Sensor 'x' is robot 'y' and vice-versa
	u_r[0] = EE[1]*gainX;
     a9c:	a7 01       	movw	r20, r14
     a9e:	96 01       	movw	r18, r12
     aa0:	9d d4       	rcall	.+2362   	; 0x13dc <__mulsf3>
     aa2:	6d 8b       	std	Y+21, r22	; 0x15
     aa4:	7e 8b       	std	Y+22, r23	; 0x16
     aa6:	8f 8b       	std	Y+23, r24	; 0x17
     aa8:	98 8f       	std	Y+24, r25	; 0x18
     aaa:	cb 01       	movw	r24, r22
     aac:	af 89       	ldd	r26, Y+23	; 0x17
     aae:	b8 8d       	ldd	r27, Y+24	; 0x18
     ab0:	80 93 32 01 	sts	0x0132, r24	; 0x800132 <u_r>
     ab4:	90 93 33 01 	sts	0x0133, r25	; 0x800133 <u_r+0x1>
     ab8:	a0 93 34 01 	sts	0x0134, r26	; 0x800134 <u_r+0x2>
     abc:	b0 93 35 01 	sts	0x0135, r27	; 0x800135 <u_r+0x3>
	u_r[1] = EE[0]*gainY;
     ac0:	20 e0       	ldi	r18, 0x00	; 0
     ac2:	30 e0       	ldi	r19, 0x00	; 0
     ac4:	40 ea       	ldi	r20, 0xA0	; 160
     ac6:	51 e4       	ldi	r21, 0x41	; 65
     ac8:	60 91 4e 01 	lds	r22, 0x014E	; 0x80014e <EE>
     acc:	70 91 4f 01 	lds	r23, 0x014F	; 0x80014f <EE+0x1>
     ad0:	80 91 50 01 	lds	r24, 0x0150	; 0x800150 <EE+0x2>
     ad4:	90 91 51 01 	lds	r25, 0x0151	; 0x800151 <EE+0x3>
     ad8:	81 d4       	rcall	.+2306   	; 0x13dc <__mulsf3>
     ada:	60 93 36 01 	sts	0x0136, r22	; 0x800136 <u_r+0x4>
     ade:	70 93 37 01 	sts	0x0137, r23	; 0x800137 <u_r+0x5>
     ae2:	80 93 38 01 	sts	0x0138, r24	; 0x800138 <u_r+0x6>
     ae6:	90 93 39 01 	sts	0x0139, r25	; 0x800139 <u_r+0x7>
	u_r[2] = 0;
     aea:	10 92 3a 01 	sts	0x013A, r1	; 0x80013a <u_r+0x8>
     aee:	10 92 3b 01 	sts	0x013B, r1	; 0x80013b <u_r+0x9>
     af2:	10 92 3c 01 	sts	0x013C, r1	; 0x80013c <u_r+0xa>
     af6:	10 92 3d 01 	sts	0x013D, r1	; 0x80013d <u_r+0xb>
     afa:	ce 01       	movw	r24, r28
     afc:	01 96       	adiw	r24, 0x01	; 1
     afe:	1c 01       	movw	r2, r24
     b00:	90 e0       	ldi	r25, 0x00	; 0
     b02:	89 2e       	mov	r8, r25
     b04:	91 e0       	ldi	r25, 0x01	; 1
     b06:	99 2e       	mov	r9, r25
     b08:	fe 01       	movw	r30, r28
     b0a:	3d 96       	adiw	r30, 0x0d	; 13
     b0c:	fc 8b       	std	Y+20, r31	; 0x14
     b0e:	eb 8b       	std	Y+19, r30	; 0x13
     b10:	81 01       	movw	r16, r2
     b12:	41 2c       	mov	r4, r1
     b14:	51 2c       	mov	r5, r1
     b16:	32 01       	movw	r6, r4
     b18:	2e e3       	ldi	r18, 0x3E	; 62
     b1a:	a2 2e       	mov	r10, r18
     b1c:	21 e0       	ldi	r18, 0x01	; 1
     b1e:	b2 2e       	mov	r11, r18
     b20:	86 e3       	ldi	r24, 0x36	; 54
     b22:	e8 2e       	mov	r14, r24
     b24:	81 e0       	ldi	r24, 0x01	; 1
     b26:	f8 2e       	mov	r15, r24
	
	gainY = 20;
	gainX = gainY;
	// Sensor displacement 'away' from robot has dampened so increase the 'fwd/back' gain
	if (EE[1] > 3) {
		gainX += 10;
     b28:	64 01       	movw	r12, r8
     b2a:	8d 89       	ldd	r24, Y+21	; 0x15
     b2c:	9e 89       	ldd	r25, Y+22	; 0x16
     b2e:	af 89       	ldd	r26, Y+23	; 0x17
     b30:	b8 8d       	ldd	r27, Y+24	; 0x18
     b32:	9c 01       	movw	r18, r24
     b34:	ad 01       	movw	r20, r26
	u_r[2] = 0;
	
	// Perform the matrix multiplication J_r * u_r
	for (int i = 0; i < 3; i++) {
		for (int j = 0; j < 3; j++) {
			f[i] += J_r[i][j] * u_r[j];
     b36:	f6 01       	movw	r30, r12
     b38:	61 91       	ld	r22, Z+
     b3a:	71 91       	ld	r23, Z+
     b3c:	81 91       	ld	r24, Z+
     b3e:	91 91       	ld	r25, Z+
     b40:	6f 01       	movw	r12, r30
     b42:	4c d4       	rcall	.+2200   	; 0x13dc <__mulsf3>
     b44:	9b 01       	movw	r18, r22
     b46:	ac 01       	movw	r20, r24
     b48:	c3 01       	movw	r24, r6
     b4a:	b2 01       	movw	r22, r4
     b4c:	02 d2       	rcall	.+1028   	; 0xf52 <__addsf3>
     b4e:	2b 01       	movw	r4, r22
     b50:	3c 01       	movw	r6, r24
	u_r[1] = EE[0]*gainY;
	u_r[2] = 0;
	
	// Perform the matrix multiplication J_r * u_r
	for (int i = 0; i < 3; i++) {
		for (int j = 0; j < 3; j++) {
     b52:	ae 14       	cp	r10, r14
     b54:	bf 04       	cpc	r11, r15
     b56:	39 f0       	breq	.+14     	; 0xb66 <nullSpaceControl+0x142>
     b58:	f7 01       	movw	r30, r14
     b5a:	21 91       	ld	r18, Z+
     b5c:	31 91       	ld	r19, Z+
     b5e:	41 91       	ld	r20, Z+
     b60:	51 91       	ld	r21, Z+
     b62:	7f 01       	movw	r14, r30
     b64:	e8 cf       	rjmp	.-48     	; 0xb36 <nullSpaceControl+0x112>
     b66:	f8 01       	movw	r30, r16
     b68:	61 93       	st	Z+, r22
     b6a:	71 93       	st	Z+, r23
     b6c:	81 93       	st	Z+, r24
     b6e:	91 93       	st	Z+, r25
     b70:	8f 01       	movw	r16, r30
     b72:	fc e0       	ldi	r31, 0x0C	; 12
     b74:	8f 0e       	add	r8, r31
     b76:	91 1c       	adc	r9, r1
	u_r[0] = EE[1]*gainX;
	u_r[1] = EE[0]*gainY;
	u_r[2] = 0;
	
	// Perform the matrix multiplication J_r * u_r
	for (int i = 0; i < 3; i++) {
     b78:	8b 89       	ldd	r24, Y+19	; 0x13
     b7a:	9c 89       	ldd	r25, Y+20	; 0x14
     b7c:	08 17       	cp	r16, r24
     b7e:	19 07       	cpc	r17, r25
     b80:	31 f0       	breq	.+12     	; 0xb8e <nullSpaceControl+0x16a>
     b82:	f8 01       	movw	r30, r16
     b84:	40 80       	ld	r4, Z
     b86:	51 80       	ldd	r5, Z+1	; 0x01
     b88:	62 80       	ldd	r6, Z+2	; 0x02
     b8a:	73 80       	ldd	r7, Z+3	; 0x03
     b8c:	c9 cf       	rjmp	.-110    	; 0xb20 <nullSpaceControl+0xfc>
     b8e:	7e 01       	movw	r14, r28
     b90:	f3 e1       	ldi	r31, 0x13	; 19
     b92:	ef 0e       	add	r14, r31
     b94:	f1 1c       	adc	r15, r1
		}
	}	
	
	// Assign to wheel array
	for (int i = 0; i < 3; i++){
		temp = (int)roundf(f[i]);
     b96:	f1 01       	movw	r30, r2
     b98:	61 91       	ld	r22, Z+
     b9a:	71 91       	ld	r23, Z+
     b9c:	81 91       	ld	r24, Z+
     b9e:	91 91       	ld	r25, Z+
     ba0:	1f 01       	movw	r2, r30
     ba2:	7f d4       	rcall	.+2302   	; 0x14a2 <round>
     ba4:	a5 d2       	rcall	.+1354   	; 0x10f0 <__fixsfsi>
		
		if(temp > 255){
     ba6:	6f 3f       	cpi	r22, 0xFF	; 255
     ba8:	71 05       	cpc	r23, r1
     baa:	09 f0       	breq	.+2      	; 0xbae <nullSpaceControl+0x18a>
     bac:	bc f5       	brge	.+110    	; 0xc1c <nullSpaceControl+0x1f8>
			temp = 255;
		}
		else if(temp < -255){
     bae:	61 30       	cpi	r22, 0x01	; 1
     bb0:	ff ef       	ldi	r31, 0xFF	; 255
     bb2:	7f 07       	cpc	r23, r31
     bb4:	ac f1       	brlt	.+106    	; 0xc20 <nullSpaceControl+0x1fc>
			temp = -255;
		}
		if(temp >= 0){
     bb6:	77 fd       	sbrc	r23, 7
     bb8:	3d c0       	rjmp	.+122    	; 0xc34 <nullSpaceControl+0x210>
			u[i][0] = 0;
     bba:	f8 01       	movw	r30, r16
     bbc:	10 82       	st	Z, r1
			u[i][1] = abs(temp);
     bbe:	61 83       	std	Z+1, r22	; 0x01
     bc0:	0e 5f       	subi	r16, 0xFE	; 254
     bc2:	1f 4f       	sbci	r17, 0xFF	; 255
			f[i] += J_r[i][j] * u_r[j];
		}
	}	
	
	// Assign to wheel array
	for (int i = 0; i < 3; i++){
     bc4:	e0 16       	cp	r14, r16
     bc6:	f1 06       	cpc	r15, r17
     bc8:	31 f7       	brne	.-52     	; 0xb96 <nullSpaceControl+0x172>
			u[i][1] = 0;
		}
	}

	// Front Left
	FLCW = u[0][1];
     bca:	8e 85       	ldd	r24, Y+14	; 0x0e
     bcc:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
	FLCCW = u[0][0];
     bd0:	8d 85       	ldd	r24, Y+13	; 0x0d
     bd2:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
	// Rear
	RCCW = u[1][0];
     bd6:	8f 85       	ldd	r24, Y+15	; 0x0f
     bd8:	87 bd       	out	0x27, r24	; 39
	RCW = u[1][1];
     bda:	88 89       	ldd	r24, Y+16	; 0x10
     bdc:	88 bd       	out	0x28, r24	; 40
	//Front Right
	FRCCW = u[2][0];
     bde:	89 89       	ldd	r24, Y+17	; 0x11
     be0:	80 93 b3 00 	sts	0x00B3, r24	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7e00b3>
	FRCW = u[2][1];	
     be4:	8a 89       	ldd	r24, Y+18	; 0x12
     be6:	80 93 b4 00 	sts	0x00B4, r24	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7e00b4>
}
     bea:	68 96       	adiw	r28, 0x18	; 24
     bec:	0f b6       	in	r0, 0x3f	; 63
     bee:	f8 94       	cli
     bf0:	de bf       	out	0x3e, r29	; 62
     bf2:	0f be       	out	0x3f, r0	; 63
     bf4:	cd bf       	out	0x3d, r28	; 61
     bf6:	df 91       	pop	r29
     bf8:	cf 91       	pop	r28
     bfa:	1f 91       	pop	r17
     bfc:	0f 91       	pop	r16
     bfe:	ff 90       	pop	r15
     c00:	ef 90       	pop	r14
     c02:	df 90       	pop	r13
     c04:	cf 90       	pop	r12
     c06:	bf 90       	pop	r11
     c08:	af 90       	pop	r10
     c0a:	9f 90       	pop	r9
     c0c:	8f 90       	pop	r8
     c0e:	7f 90       	pop	r7
     c10:	6f 90       	pop	r6
     c12:	5f 90       	pop	r5
     c14:	4f 90       	pop	r4
     c16:	3f 90       	pop	r3
     c18:	2f 90       	pop	r2
     c1a:	08 95       	ret
     c1c:	6f ef       	ldi	r22, 0xFF	; 255
     c1e:	cd cf       	rjmp	.-102    	; 0xbba <nullSpaceControl+0x196>
     c20:	6f ef       	ldi	r22, 0xFF	; 255
		if(temp >= 0){
			u[i][0] = 0;
			u[i][1] = abs(temp);
		}
		else{
			u[i][0] = abs(temp);
     c22:	f8 01       	movw	r30, r16
     c24:	60 83       	st	Z, r22
			u[i][1] = 0;
     c26:	11 82       	std	Z+1, r1	; 0x01
     c28:	cb cf       	rjmp	.-106    	; 0xbc0 <nullSpaceControl+0x19c>
	
	gainY = 20;
	gainX = gainY;
	// Sensor displacement 'away' from robot has dampened so increase the 'fwd/back' gain
	if (EE[1] > 3) {
		gainX += 10;
     c2a:	60 e0       	ldi	r22, 0x00	; 0
     c2c:	70 e0       	ldi	r23, 0x00	; 0
     c2e:	80 ef       	ldi	r24, 0xF0	; 240
     c30:	91 e4       	ldi	r25, 0x41	; 65
     c32:	34 cf       	rjmp	.-408    	; 0xa9c <nullSpaceControl+0x78>
     c34:	61 95       	neg	r22
     c36:	f5 cf       	rjmp	.-22     	; 0xc22 <nullSpaceControl+0x1fe>

00000c38 <comEstimate>:


//////////////////////////////////////////////////////////////////////////
///     CoM estimation
//////////////////////////////////////////////////////////////////////////
void comEstimate (void) {
     c38:	2f 92       	push	r2
     c3a:	3f 92       	push	r3
     c3c:	4f 92       	push	r4
     c3e:	5f 92       	push	r5
     c40:	6f 92       	push	r6
     c42:	7f 92       	push	r7
     c44:	8f 92       	push	r8
     c46:	9f 92       	push	r9
     c48:	af 92       	push	r10
     c4a:	bf 92       	push	r11
     c4c:	cf 92       	push	r12
     c4e:	df 92       	push	r13
     c50:	ef 92       	push	r14
     c52:	ff 92       	push	r15
     c54:	0f 93       	push	r16
     c56:	1f 93       	push	r17
     c58:	cf 93       	push	r28
     c5a:	df 93       	push	r29
     c5c:	cd b7       	in	r28, 0x3d	; 61
     c5e:	de b7       	in	r29, 0x3e	; 62
     c60:	66 97       	sbiw	r28, 0x16	; 22
     c62:	0f b6       	in	r0, 0x3f	; 63
     c64:	f8 94       	cli
     c66:	de bf       	out	0x3e, r29	; 62
     c68:	0f be       	out	0x3f, r0	; 63
     c6a:	cd bf       	out	0x3d, r28	; 61
	// u_r[0] is X motion (Fwd+/Bkwd-)
	// u_r[1] is Y motion (Right+/Left-)
	// u_r[2] is Z motion (CCW+/CW-)
	
	unsigned char u[3][2];
	float f[3] = {0,0,0};
     c6c:	19 82       	std	Y+1, r1	; 0x01
     c6e:	1a 82       	std	Y+2, r1	; 0x02
     c70:	1b 82       	std	Y+3, r1	; 0x03
     c72:	1c 82       	std	Y+4, r1	; 0x04
     c74:	1d 82       	std	Y+5, r1	; 0x05
     c76:	1e 82       	std	Y+6, r1	; 0x06
     c78:	1f 82       	std	Y+7, r1	; 0x07
     c7a:	18 86       	std	Y+8, r1	; 0x08
     c7c:	19 86       	std	Y+9, r1	; 0x09
     c7e:	1a 86       	std	Y+10, r1	; 0x0a
     c80:	1b 86       	std	Y+11, r1	; 0x0b
     c82:	1c 86       	std	Y+12, r1	; 0x0c
	if (EE[1] > 3) {
		gainX *= 1.3;
	}
		
	// Get unit direction of sensor displacement
	float EE_mag = sqrt(pow(EE[0],2) + pow(EE[1],2));
     c84:	c0 90 4e 01 	lds	r12, 0x014E	; 0x80014e <EE>
     c88:	d0 90 4f 01 	lds	r13, 0x014F	; 0x80014f <EE+0x1>
     c8c:	e0 90 50 01 	lds	r14, 0x0150	; 0x800150 <EE+0x2>
     c90:	f0 90 51 01 	lds	r15, 0x0151	; 0x800151 <EE+0x3>
     c94:	80 90 52 01 	lds	r8, 0x0152	; 0x800152 <EE+0x4>
     c98:	90 90 53 01 	lds	r9, 0x0153	; 0x800153 <EE+0x5>
     c9c:	a0 90 54 01 	lds	r10, 0x0154	; 0x800154 <EE+0x6>
     ca0:	b0 90 55 01 	lds	r11, 0x0155	; 0x800155 <EE+0x7>
     ca4:	a7 01       	movw	r20, r14
     ca6:	96 01       	movw	r18, r12
     ca8:	c7 01       	movw	r24, r14
     caa:	b6 01       	movw	r22, r12
     cac:	97 d3       	rcall	.+1838   	; 0x13dc <__mulsf3>
     cae:	2b 01       	movw	r4, r22
     cb0:	3c 01       	movw	r6, r24
     cb2:	a5 01       	movw	r20, r10
     cb4:	94 01       	movw	r18, r8
     cb6:	c5 01       	movw	r24, r10
     cb8:	b4 01       	movw	r22, r8
     cba:	90 d3       	rcall	.+1824   	; 0x13dc <__mulsf3>
     cbc:	9b 01       	movw	r18, r22
     cbe:	ac 01       	movw	r20, r24
     cc0:	c3 01       	movw	r24, r6
     cc2:	b2 01       	movw	r22, r4
     cc4:	46 d1       	rcall	.+652    	; 0xf52 <__addsf3>
     cc6:	17 d4       	rcall	.+2094   	; 0x14f6 <sqrt>
     cc8:	2b 01       	movw	r4, r22
     cca:	3c 01       	movw	r6, r24
	direction[0] = EE[0]/EE_mag;
     ccc:	9b 01       	movw	r18, r22
     cce:	ac 01       	movw	r20, r24
     cd0:	c7 01       	movw	r24, r14
     cd2:	b6 01       	movw	r22, r12
     cd4:	a5 d1       	rcall	.+842    	; 0x1020 <__divsf3>
     cd6:	60 93 a5 01 	sts	0x01A5, r22	; 0x8001a5 <direction>
     cda:	70 93 a6 01 	sts	0x01A6, r23	; 0x8001a6 <direction+0x1>
     cde:	80 93 a7 01 	sts	0x01A7, r24	; 0x8001a7 <direction+0x2>
     ce2:	90 93 a8 01 	sts	0x01A8, r25	; 0x8001a8 <direction+0x3>
	direction[1] = EE[1]/EE_mag; 
     ce6:	a3 01       	movw	r20, r6
     ce8:	92 01       	movw	r18, r4
     cea:	c5 01       	movw	r24, r10
     cec:	b4 01       	movw	r22, r8
     cee:	98 d1       	rcall	.+816    	; 0x1020 <__divsf3>
     cf0:	60 93 a9 01 	sts	0x01A9, r22	; 0x8001a9 <direction+0x4>
     cf4:	70 93 aa 01 	sts	0x01AA, r23	; 0x8001aa <direction+0x5>
     cf8:	80 93 ab 01 	sts	0x01AB, r24	; 0x8001ab <direction+0x6>
     cfc:	90 93 ac 01 	sts	0x01AC, r25	; 0x8001ac <direction+0x7>
     d00:	c5 01       	movw	r24, r10
	
	// Sensor 'x' is robot 'y' and vice-versa
	u_r[0] = -EE[1]*20; // -direction[1]*gainX;
     d02:	b4 01       	movw	r22, r8
     d04:	90 58       	subi	r25, 0x80	; 128
     d06:	20 e0       	ldi	r18, 0x00	; 0
     d08:	30 e0       	ldi	r19, 0x00	; 0
     d0a:	40 ea       	ldi	r20, 0xA0	; 160
     d0c:	51 e4       	ldi	r21, 0x41	; 65
     d0e:	66 d3       	rcall	.+1740   	; 0x13dc <__mulsf3>
     d10:	6b 8b       	std	Y+19, r22	; 0x13
     d12:	7c 8b       	std	Y+20, r23	; 0x14
     d14:	8d 8b       	std	Y+21, r24	; 0x15
     d16:	9e 8b       	std	Y+22, r25	; 0x16
     d18:	cb 01       	movw	r24, r22
     d1a:	ad 89       	ldd	r26, Y+21	; 0x15
     d1c:	be 89       	ldd	r27, Y+22	; 0x16
     d1e:	80 93 32 01 	sts	0x0132, r24	; 0x800132 <u_r>
     d22:	90 93 33 01 	sts	0x0133, r25	; 0x800133 <u_r+0x1>
     d26:	a0 93 34 01 	sts	0x0134, r26	; 0x800134 <u_r+0x2>
     d2a:	b0 93 35 01 	sts	0x0135, r27	; 0x800135 <u_r+0x3>
     d2e:	c7 01       	movw	r24, r14
	u_r[1] = -EE[0]*20; // direction[0]*gainY;
     d30:	b6 01       	movw	r22, r12
     d32:	90 58       	subi	r25, 0x80	; 128
     d34:	20 e0       	ldi	r18, 0x00	; 0
     d36:	30 e0       	ldi	r19, 0x00	; 0
     d38:	40 ea       	ldi	r20, 0xA0	; 160
     d3a:	51 e4       	ldi	r21, 0x41	; 65
     d3c:	4f d3       	rcall	.+1694   	; 0x13dc <__mulsf3>
     d3e:	60 93 36 01 	sts	0x0136, r22	; 0x800136 <u_r+0x4>
     d42:	70 93 37 01 	sts	0x0137, r23	; 0x800137 <u_r+0x5>
     d46:	80 93 38 01 	sts	0x0138, r24	; 0x800138 <u_r+0x6>
     d4a:	90 93 39 01 	sts	0x0139, r25	; 0x800139 <u_r+0x7>
     d4e:	10 92 3a 01 	sts	0x013A, r1	; 0x80013a <u_r+0x8>
	u_r[2] = 0;
     d52:	10 92 3b 01 	sts	0x013B, r1	; 0x80013b <u_r+0x9>
     d56:	10 92 3c 01 	sts	0x013C, r1	; 0x80013c <u_r+0xa>
     d5a:	10 92 3d 01 	sts	0x013D, r1	; 0x80013d <u_r+0xb>
     d5e:	ce 01       	movw	r24, r28
     d60:	01 96       	adiw	r24, 0x01	; 1
     d62:	4c 01       	movw	r8, r24
     d64:	90 e0       	ldi	r25, 0x00	; 0
     d66:	a9 2e       	mov	r10, r25
     d68:	91 e0       	ldi	r25, 0x01	; 1
     d6a:	b9 2e       	mov	r11, r25
     d6c:	1e 01       	movw	r2, r28
     d6e:	9d e0       	ldi	r25, 0x0D	; 13
     d70:	29 0e       	add	r2, r25
     d72:	31 1c       	adc	r3, r1
     d74:	84 01       	movw	r16, r8
     d76:	41 2c       	mov	r4, r1
     d78:	51 2c       	mov	r5, r1
     d7a:	32 01       	movw	r6, r4
     d7c:	86 e3       	ldi	r24, 0x36	; 54
     d7e:	e8 2e       	mov	r14, r24
     d80:	81 e0       	ldi	r24, 0x01	; 1
     d82:	f8 2e       	mov	r15, r24
     d84:	65 01       	movw	r12, r10


//////////////////////////////////////////////////////////////////////////
///     CoM estimation
//////////////////////////////////////////////////////////////////////////
void comEstimate (void) {
     d86:	8b 89       	ldd	r24, Y+19	; 0x13
     d88:	9c 89       	ldd	r25, Y+20	; 0x14
     d8a:	ad 89       	ldd	r26, Y+21	; 0x15
     d8c:	be 89       	ldd	r27, Y+22	; 0x16
     d8e:	9c 01       	movw	r18, r24
     d90:	ad 01       	movw	r20, r26
	u_r[2] = 0;
	
	// Perform the matrix multiplication J_r * u_r
	for (int i = 0; i < 3; i++) {
		for (int j = 0; j < 3; j++) {
			f[i] += J_r[i][j] * u_r[j];
     d92:	f6 01       	movw	r30, r12
     d94:	61 91       	ld	r22, Z+
     d96:	71 91       	ld	r23, Z+
     d98:	81 91       	ld	r24, Z+
     d9a:	91 91       	ld	r25, Z+
     d9c:	6f 01       	movw	r12, r30
     d9e:	1e d3       	rcall	.+1596   	; 0x13dc <__mulsf3>
     da0:	9b 01       	movw	r18, r22
     da2:	ac 01       	movw	r20, r24
     da4:	c3 01       	movw	r24, r6
     da6:	b2 01       	movw	r22, r4
     da8:	d4 d0       	rcall	.+424    	; 0xf52 <__addsf3>
     daa:	2b 01       	movw	r4, r22
     dac:	3c 01       	movw	r6, r24
     dae:	fe e3       	ldi	r31, 0x3E	; 62
	u_r[1] = -EE[0]*20; // direction[0]*gainY;
	u_r[2] = 0;
	
	// Perform the matrix multiplication J_r * u_r
	for (int i = 0; i < 3; i++) {
		for (int j = 0; j < 3; j++) {
     db0:	ef 16       	cp	r14, r31
     db2:	f1 e0       	ldi	r31, 0x01	; 1
     db4:	ff 06       	cpc	r15, r31
     db6:	39 f0       	breq	.+14     	; 0xdc6 <comEstimate+0x18e>
     db8:	f7 01       	movw	r30, r14
     dba:	21 91       	ld	r18, Z+
     dbc:	31 91       	ld	r19, Z+
     dbe:	41 91       	ld	r20, Z+
     dc0:	51 91       	ld	r21, Z+
     dc2:	7f 01       	movw	r14, r30
     dc4:	e6 cf       	rjmp	.-52     	; 0xd92 <comEstimate+0x15a>
     dc6:	f8 01       	movw	r30, r16
     dc8:	61 93       	st	Z+, r22
     dca:	71 93       	st	Z+, r23
     dcc:	81 93       	st	Z+, r24
     dce:	91 93       	st	Z+, r25
     dd0:	8f 01       	movw	r16, r30
     dd2:	fc e0       	ldi	r31, 0x0C	; 12
     dd4:	af 0e       	add	r10, r31
     dd6:	b1 1c       	adc	r11, r1
     dd8:	02 15       	cp	r16, r2
	u_r[0] = -EE[1]*20; // -direction[1]*gainX;
	u_r[1] = -EE[0]*20; // direction[0]*gainY;
	u_r[2] = 0;
	
	// Perform the matrix multiplication J_r * u_r
	for (int i = 0; i < 3; i++) {
     dda:	13 05       	cpc	r17, r3
     ddc:	31 f0       	breq	.+12     	; 0xdea <comEstimate+0x1b2>
     dde:	f8 01       	movw	r30, r16
     de0:	40 80       	ld	r4, Z
     de2:	51 80       	ldd	r5, Z+1	; 0x01
     de4:	62 80       	ldd	r6, Z+2	; 0x02
     de6:	73 80       	ldd	r7, Z+3	; 0x03
     de8:	c9 cf       	rjmp	.-110    	; 0xd7c <comEstimate+0x144>
     dea:	7e 01       	movw	r14, r28
     dec:	f3 e1       	ldi	r31, 0x13	; 19
     dee:	ef 0e       	add	r14, r31
		}
	}
	
	// Assign to wheel array
	for (int i = 0; i < 3; i++){
		temp = (int)roundf(f[i]);
     df0:	f1 1c       	adc	r15, r1
     df2:	f4 01       	movw	r30, r8
     df4:	61 91       	ld	r22, Z+
     df6:	71 91       	ld	r23, Z+
     df8:	81 91       	ld	r24, Z+
     dfa:	91 91       	ld	r25, Z+
     dfc:	4f 01       	movw	r8, r30
     dfe:	51 d3       	rcall	.+1698   	; 0x14a2 <round>
     e00:	77 d1       	rcall	.+750    	; 0x10f0 <__fixsfsi>
     e02:	6f 3f       	cpi	r22, 0xFF	; 255
		
		if(temp > 255){
     e04:	71 05       	cpc	r23, r1
     e06:	09 f0       	breq	.+2      	; 0xe0a <comEstimate+0x1d2>
     e08:	bc f5       	brge	.+110    	; 0xe78 <comEstimate+0x240>
     e0a:	61 30       	cpi	r22, 0x01	; 1
			temp = 255;
		}
		else if(temp < -255){
     e0c:	ff ef       	ldi	r31, 0xFF	; 255
     e0e:	7f 07       	cpc	r23, r31
     e10:	ac f1       	brlt	.+106    	; 0xe7c <comEstimate+0x244>
     e12:	77 fd       	sbrc	r23, 7
			temp = -255;
		}
		if(temp >= 0){
     e14:	38 c0       	rjmp	.+112    	; 0xe86 <comEstimate+0x24e>
     e16:	f8 01       	movw	r30, r16
			u[i][0] = 0;
     e18:	10 82       	st	Z, r1
     e1a:	61 83       	std	Z+1, r22	; 0x01
			u[i][1] = abs(temp);
     e1c:	0e 5f       	subi	r16, 0xFE	; 254
     e1e:	1f 4f       	sbci	r17, 0xFF	; 255
     e20:	e0 16       	cp	r14, r16
			f[i] += J_r[i][j] * u_r[j];
		}
	}
	
	// Assign to wheel array
	for (int i = 0; i < 3; i++){
     e22:	f1 06       	cpc	r15, r17
     e24:	31 f7       	brne	.-52     	; 0xdf2 <comEstimate+0x1ba>
     e26:	8e 85       	ldd	r24, Y+14	; 0x0e
			u[i][1] = 0;
		}
	}

	// Front Left
	FLCW = u[0][1];
     e28:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
     e2c:	8d 85       	ldd	r24, Y+13	; 0x0d
	FLCCW = u[0][0];
     e2e:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
     e32:	8f 85       	ldd	r24, Y+15	; 0x0f
	// Rear
	RCCW = u[1][0];
     e34:	87 bd       	out	0x27, r24	; 39
     e36:	88 89       	ldd	r24, Y+16	; 0x10
	RCW = u[1][1];
     e38:	88 bd       	out	0x28, r24	; 40
     e3a:	89 89       	ldd	r24, Y+17	; 0x11
	//Front Right
	FRCCW = u[2][0];
     e3c:	80 93 b3 00 	sts	0x00B3, r24	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7e00b3>
     e40:	8a 89       	ldd	r24, Y+18	; 0x12
	FRCW = u[2][1];
     e42:	80 93 b4 00 	sts	0x00B4, r24	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7e00b4>
     e46:	66 96       	adiw	r28, 0x16	; 22
}
     e48:	0f b6       	in	r0, 0x3f	; 63
     e4a:	f8 94       	cli
     e4c:	de bf       	out	0x3e, r29	; 62
     e4e:	0f be       	out	0x3f, r0	; 63
     e50:	cd bf       	out	0x3d, r28	; 61
     e52:	df 91       	pop	r29
     e54:	cf 91       	pop	r28
     e56:	1f 91       	pop	r17
     e58:	0f 91       	pop	r16
     e5a:	ff 90       	pop	r15
     e5c:	ef 90       	pop	r14
     e5e:	df 90       	pop	r13
     e60:	cf 90       	pop	r12
     e62:	bf 90       	pop	r11
     e64:	af 90       	pop	r10
     e66:	9f 90       	pop	r9
     e68:	8f 90       	pop	r8
     e6a:	7f 90       	pop	r7
     e6c:	6f 90       	pop	r6
     e6e:	5f 90       	pop	r5
     e70:	4f 90       	pop	r4
     e72:	3f 90       	pop	r3
     e74:	2f 90       	pop	r2
     e76:	08 95       	ret
     e78:	6f ef       	ldi	r22, 0xFF	; 255
     e7a:	cd cf       	rjmp	.-102    	; 0xe16 <comEstimate+0x1de>
     e7c:	6f ef       	ldi	r22, 0xFF	; 255
     e7e:	f8 01       	movw	r30, r16
		if(temp >= 0){
			u[i][0] = 0;
			u[i][1] = abs(temp);
		}
		else{
			u[i][0] = abs(temp);
     e80:	60 83       	st	Z, r22
     e82:	11 82       	std	Z+1, r1	; 0x01
			u[i][1] = 0;
     e84:	cb cf       	rjmp	.-106    	; 0xe1c <comEstimate+0x1e4>
     e86:	61 95       	neg	r22
     e88:	fa cf       	rjmp	.-12     	; 0xe7e <comEstimate+0x246>

00000e8a <main>:
     e8a:	1f 93       	push	r17
}

//================================================================================================
//                                          Main
//================================================================================================
int main(void){
     e8c:	cf 93       	push	r28
     e8e:	df 93       	push	r29

	//float time;
	int rest_period = 0; // initial resting period
		
	mC_init();
     e90:	b2 d9       	rcall	.-3228   	; 0x1f6 <mC_init>
	//sensorKinematics(resting_angles); // Run kinematics on resting base angles
	//home[0] = EE[0];
	//home[1] = EE[1];
	
	// TEMPORARILY HARD-CODING VALUES FROM GEOMETRIC ANALYSIS 02-07-2024
	home[0] = 9.7; // 11.42;
     e92:	83 e3       	ldi	r24, 0x33	; 51
     e94:	93 e3       	ldi	r25, 0x33	; 51
     e96:	ab e1       	ldi	r26, 0x1B	; 27
     e98:	b1 e4       	ldi	r27, 0x41	; 65
     e9a:	80 93 46 01 	sts	0x0146, r24	; 0x800146 <home>
     e9e:	90 93 47 01 	sts	0x0147, r25	; 0x800147 <home+0x1>
     ea2:	a0 93 48 01 	sts	0x0148, r26	; 0x800148 <home+0x2>
     ea6:	b0 93 49 01 	sts	0x0149, r27	; 0x800149 <home+0x3>
	home[1] = 50.1; // 53.71;
     eaa:	86 e6       	ldi	r24, 0x66	; 102
     eac:	96 e6       	ldi	r25, 0x66	; 102
     eae:	a8 e4       	ldi	r26, 0x48	; 72
     eb0:	b2 e4       	ldi	r27, 0x42	; 66
     eb2:	80 93 4a 01 	sts	0x014A, r24	; 0x80014a <home+0x4>
     eb6:	90 93 4b 01 	sts	0x014B, r25	; 0x80014b <home+0x5>
     eba:	a0 93 4c 01 	sts	0x014C, r26	; 0x80014c <home+0x6>
     ebe:	b0 93 4d 01 	sts	0x014D, r27	; 0x80014d <home+0x7>
	int rest_period = 0; // initial resting period
		
	mC_init();
	getHome(); // Get sensor resting state home config
	
	PORTC &= ~BIT(redLED); // Turn OFF redLED
     ec2:	47 98       	cbi	0x08, 7	; 8
	PORTC |= BIT(blueLED); // Turn ON blueLED
     ec4:	46 9a       	sbi	0x08, 6	; 8
	PORTC |= BIT(redLED);  // Turn ON redLED
     ec6:	47 9a       	sbi	0x08, 7	; 8
	
	TCCR3B = (0<<CS32) | (0<<CS31) | (0<<CS30);
     ec8:	10 92 91 00 	sts	0x0091, r1	; 0x800091 <__TEXT_REGION_LENGTH__+0x7e0091>
	sei();
     ecc:	78 94       	sei
//                                          Main
//================================================================================================
int main(void){

	//float time;
	int rest_period = 0; // initial resting period
     ece:	c0 e0       	ldi	r28, 0x00	; 0
     ed0:	d0 e0       	ldi	r29, 0x00	; 0
		}
		else {
			comEstimate();
		}
		
		PORTC  ^= BIT(blueLED);	// Toggle blueLED
     ed2:	10 e4       	ldi	r17, 0x40	; 64
	
	TCCR3B = (0<<CS32) | (0<<CS31) | (0<<CS30);
	sei();
	
	// Primary Loop
	while(start == 0){
     ed4:	80 91 7a 01 	lds	r24, 0x017A	; 0x80017a <start>
     ed8:	81 11       	cpse	r24, r1
     eda:	08 c0       	rjmp	.+16     	; 0xeec <main+0x62>
		if (rest_period < 40){
     edc:	c8 32       	cpi	r28, 0x28	; 40
     ede:	d1 05       	cpc	r29, r1
     ee0:	7c f4       	brge	.+30     	; 0xf00 <main+0x76>
			rest_period += 1;
     ee2:	21 96       	adiw	r28, 0x01	; 1
	
	TCCR3B = (0<<CS32) | (0<<CS31) | (0<<CS30);
	sei();
	
	// Primary Loop
	while(start == 0){
     ee4:	80 91 7a 01 	lds	r24, 0x017A	; 0x80017a <start>
     ee8:	88 23       	and	r24, r24
     eea:	c1 f3       	breq	.-16     	; 0xedc <main+0x52>
		
		PORTC  ^= BIT(blueLED);	// Toggle blueLED
		_delay_ms(100); // Changed from 100 to test which loop is running 11/28/23
	}
	
	PORTC |= BIT(blueLED);		// Turn ON blueLED
     eec:	46 9a       	sbi	0x08, 6	; 8
	TCCR3B = (1<<CS32) | (0<<CS31) | (1<<CS30);
     eee:	85 e0       	ldi	r24, 0x05	; 5
     ef0:	80 93 91 00 	sts	0x0091, r24	; 0x800091 <__TEXT_REGION_LENGTH__+0x7e0091>
		//f_desired_position();
		//controller();				// NOT SURE WHAT THIS DOES ... DOESN'T SEEM TO BE NEEDED WITH CENTRALIZED (MATLAB) CONTROL
	//}

	return 0;
     ef4:	80 e0       	ldi	r24, 0x00	; 0
     ef6:	90 e0       	ldi	r25, 0x00	; 0
     ef8:	df 91       	pop	r29
     efa:	cf 91       	pop	r28
     efc:	1f 91       	pop	r17
			rest_period += 1;
			continue;
		}
		
		// ADC read and assign to 'sensor_data'
		updateSensor();
     efe:	08 95       	ret
     f00:	7e db       	rcall	.-2308   	; 0x5fe <updateSensor>
		// Calculate force and direction of sensor, assign to 'EE'
		sensorKinematics(sensor_data);
     f02:	82 e7       	ldi	r24, 0x72	; 114
     f04:	91 e0       	ldi	r25, 0x01	; 1
     f06:	42 dc       	rcall	.-1916   	; 0x78c <sensorKinematics>
		
		// Default is null-space control mode
		if (!mode_switch) {
     f08:	80 91 3e 01 	lds	r24, 0x013E	; 0x80013e <mode_switch>
     f0c:	90 91 3f 01 	lds	r25, 0x013F	; 0x80013f <mode_switch+0x1>
     f10:	89 2b       	or	r24, r25
			nullSpaceControl();
     f12:	71 f4       	brne	.+28     	; 0xf30 <main+0xa6>
     f14:	87 dd       	rcall	.-1266   	; 0xa24 <nullSpaceControl>
		}
		else {
			comEstimate();
		}
		
		PORTC  ^= BIT(blueLED);	// Toggle blueLED
     f16:	88 b1       	in	r24, 0x08	; 8
     f18:	81 27       	eor	r24, r17
     f1a:	88 b9       	out	0x08, r24	; 8
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     f1c:	2f e7       	ldi	r18, 0x7F	; 127
     f1e:	8a e1       	ldi	r24, 0x1A	; 26
     f20:	96 e0       	ldi	r25, 0x06	; 6
     f22:	21 50       	subi	r18, 0x01	; 1
     f24:	80 40       	sbci	r24, 0x00	; 0
     f26:	90 40       	sbci	r25, 0x00	; 0
     f28:	e1 f7       	brne	.-8      	; 0xf22 <main+0x98>
     f2a:	00 c0       	rjmp	.+0      	; 0xf2c <main+0xa2>
     f2c:	00 00       	nop
		// Default is null-space control mode
		if (!mode_switch) {
			nullSpaceControl();
		}
		else {
			comEstimate();
     f2e:	d2 cf       	rjmp	.-92     	; 0xed4 <main+0x4a>
     f30:	83 de       	rcall	.-762    	; 0xc38 <comEstimate>
     f32:	f1 cf       	rjmp	.-30     	; 0xf16 <main+0x8c>

00000f34 <acos>:
     f34:	9f 93       	push	r25
     f36:	9f 77       	andi	r25, 0x7F	; 127
     f38:	49 d1       	rcall	.+658    	; 0x11cc <__fp_arccos>
     f3a:	0f 90       	pop	r0
     f3c:	00 20       	and	r0, r0
     f3e:	3a f4       	brpl	.+14     	; 0xf4e <acos+0x1a>
     f40:	90 58       	subi	r25, 0x80	; 128
     f42:	a2 ea       	ldi	r26, 0xA2	; 162
     f44:	2a ed       	ldi	r18, 0xDA	; 218
     f46:	3f e0       	ldi	r19, 0x0F	; 15
     f48:	49 e4       	ldi	r20, 0x49	; 73
     f4a:	50 e4       	ldi	r21, 0x40	; 64
     f4c:	13 d0       	rcall	.+38     	; 0xf74 <__addsf3x>
     f4e:	bd c1       	rjmp	.+890    	; 0x12ca <__fp_round>

00000f50 <__subsf3>:
     f50:	50 58       	subi	r21, 0x80	; 128

00000f52 <__addsf3>:
     f52:	bb 27       	eor	r27, r27
     f54:	aa 27       	eor	r26, r26
     f56:	0e d0       	rcall	.+28     	; 0xf74 <__addsf3x>
     f58:	b8 c1       	rjmp	.+880    	; 0x12ca <__fp_round>
     f5a:	81 d1       	rcall	.+770    	; 0x125e <__fp_pscA>
     f5c:	30 f0       	brcs	.+12     	; 0xf6a <__addsf3+0x18>
     f5e:	86 d1       	rcall	.+780    	; 0x126c <__fp_pscB>
     f60:	20 f0       	brcs	.+8      	; 0xf6a <__addsf3+0x18>
     f62:	31 f4       	brne	.+12     	; 0xf70 <__addsf3+0x1e>
     f64:	9f 3f       	cpi	r25, 0xFF	; 255
     f66:	11 f4       	brne	.+4      	; 0xf6c <__addsf3+0x1a>
     f68:	1e f4       	brtc	.+6      	; 0xf70 <__addsf3+0x1e>
     f6a:	51 c1       	rjmp	.+674    	; 0x120e <__fp_nan>
     f6c:	0e f4       	brtc	.+2      	; 0xf70 <__addsf3+0x1e>
     f6e:	e0 95       	com	r30
     f70:	e7 fb       	bst	r30, 7
     f72:	47 c1       	rjmp	.+654    	; 0x1202 <__fp_inf>

00000f74 <__addsf3x>:
     f74:	e9 2f       	mov	r30, r25
     f76:	cb d1       	rcall	.+918    	; 0x130e <__fp_split3>
     f78:	80 f3       	brcs	.-32     	; 0xf5a <__addsf3+0x8>
     f7a:	ba 17       	cp	r27, r26
     f7c:	62 07       	cpc	r22, r18
     f7e:	73 07       	cpc	r23, r19
     f80:	84 07       	cpc	r24, r20
     f82:	95 07       	cpc	r25, r21
     f84:	18 f0       	brcs	.+6      	; 0xf8c <__addsf3x+0x18>
     f86:	71 f4       	brne	.+28     	; 0xfa4 <__addsf3x+0x30>
     f88:	9e f5       	brtc	.+102    	; 0xff0 <__addsf3x+0x7c>
     f8a:	e3 c1       	rjmp	.+966    	; 0x1352 <__fp_zero>
     f8c:	0e f4       	brtc	.+2      	; 0xf90 <__addsf3x+0x1c>
     f8e:	e0 95       	com	r30
     f90:	0b 2e       	mov	r0, r27
     f92:	ba 2f       	mov	r27, r26
     f94:	a0 2d       	mov	r26, r0
     f96:	0b 01       	movw	r0, r22
     f98:	b9 01       	movw	r22, r18
     f9a:	90 01       	movw	r18, r0
     f9c:	0c 01       	movw	r0, r24
     f9e:	ca 01       	movw	r24, r20
     fa0:	a0 01       	movw	r20, r0
     fa2:	11 24       	eor	r1, r1
     fa4:	ff 27       	eor	r31, r31
     fa6:	59 1b       	sub	r21, r25
     fa8:	99 f0       	breq	.+38     	; 0xfd0 <__addsf3x+0x5c>
     faa:	59 3f       	cpi	r21, 0xF9	; 249
     fac:	50 f4       	brcc	.+20     	; 0xfc2 <__addsf3x+0x4e>
     fae:	50 3e       	cpi	r21, 0xE0	; 224
     fb0:	68 f1       	brcs	.+90     	; 0x100c <__EEPROM_REGION_LENGTH__+0xc>
     fb2:	1a 16       	cp	r1, r26
     fb4:	f0 40       	sbci	r31, 0x00	; 0
     fb6:	a2 2f       	mov	r26, r18
     fb8:	23 2f       	mov	r18, r19
     fba:	34 2f       	mov	r19, r20
     fbc:	44 27       	eor	r20, r20
     fbe:	58 5f       	subi	r21, 0xF8	; 248
     fc0:	f3 cf       	rjmp	.-26     	; 0xfa8 <__addsf3x+0x34>
     fc2:	46 95       	lsr	r20
     fc4:	37 95       	ror	r19
     fc6:	27 95       	ror	r18
     fc8:	a7 95       	ror	r26
     fca:	f0 40       	sbci	r31, 0x00	; 0
     fcc:	53 95       	inc	r21
     fce:	c9 f7       	brne	.-14     	; 0xfc2 <__addsf3x+0x4e>
     fd0:	7e f4       	brtc	.+30     	; 0xff0 <__addsf3x+0x7c>
     fd2:	1f 16       	cp	r1, r31
     fd4:	ba 0b       	sbc	r27, r26
     fd6:	62 0b       	sbc	r22, r18
     fd8:	73 0b       	sbc	r23, r19
     fda:	84 0b       	sbc	r24, r20
     fdc:	ba f0       	brmi	.+46     	; 0x100c <__EEPROM_REGION_LENGTH__+0xc>
     fde:	91 50       	subi	r25, 0x01	; 1
     fe0:	a1 f0       	breq	.+40     	; 0x100a <__EEPROM_REGION_LENGTH__+0xa>
     fe2:	ff 0f       	add	r31, r31
     fe4:	bb 1f       	adc	r27, r27
     fe6:	66 1f       	adc	r22, r22
     fe8:	77 1f       	adc	r23, r23
     fea:	88 1f       	adc	r24, r24
     fec:	c2 f7       	brpl	.-16     	; 0xfde <__addsf3x+0x6a>
     fee:	0e c0       	rjmp	.+28     	; 0x100c <__EEPROM_REGION_LENGTH__+0xc>
     ff0:	ba 0f       	add	r27, r26
     ff2:	62 1f       	adc	r22, r18
     ff4:	73 1f       	adc	r23, r19
     ff6:	84 1f       	adc	r24, r20
     ff8:	48 f4       	brcc	.+18     	; 0x100c <__EEPROM_REGION_LENGTH__+0xc>
     ffa:	87 95       	ror	r24
     ffc:	77 95       	ror	r23
     ffe:	67 95       	ror	r22
    1000:	b7 95       	ror	r27
    1002:	f7 95       	ror	r31
    1004:	9e 3f       	cpi	r25, 0xFE	; 254
    1006:	08 f0       	brcs	.+2      	; 0x100a <__EEPROM_REGION_LENGTH__+0xa>
    1008:	b3 cf       	rjmp	.-154    	; 0xf70 <__addsf3+0x1e>
    100a:	93 95       	inc	r25
    100c:	88 0f       	add	r24, r24
    100e:	08 f0       	brcs	.+2      	; 0x1012 <__EEPROM_REGION_LENGTH__+0x12>
    1010:	99 27       	eor	r25, r25
    1012:	ee 0f       	add	r30, r30
    1014:	97 95       	ror	r25
    1016:	87 95       	ror	r24
    1018:	08 95       	ret

0000101a <cos>:
    101a:	30 d1       	rcall	.+608    	; 0x127c <__fp_rempio2>
    101c:	e3 95       	inc	r30
    101e:	66 c1       	rjmp	.+716    	; 0x12ec <__fp_sinus>

00001020 <__divsf3>:
    1020:	0c d0       	rcall	.+24     	; 0x103a <__divsf3x>
    1022:	53 c1       	rjmp	.+678    	; 0x12ca <__fp_round>
    1024:	23 d1       	rcall	.+582    	; 0x126c <__fp_pscB>
    1026:	40 f0       	brcs	.+16     	; 0x1038 <__divsf3+0x18>
    1028:	1a d1       	rcall	.+564    	; 0x125e <__fp_pscA>
    102a:	30 f0       	brcs	.+12     	; 0x1038 <__divsf3+0x18>
    102c:	21 f4       	brne	.+8      	; 0x1036 <__divsf3+0x16>
    102e:	5f 3f       	cpi	r21, 0xFF	; 255
    1030:	19 f0       	breq	.+6      	; 0x1038 <__divsf3+0x18>
    1032:	e7 c0       	rjmp	.+462    	; 0x1202 <__fp_inf>
    1034:	51 11       	cpse	r21, r1
    1036:	8e c1       	rjmp	.+796    	; 0x1354 <__fp_szero>
    1038:	ea c0       	rjmp	.+468    	; 0x120e <__fp_nan>

0000103a <__divsf3x>:
    103a:	69 d1       	rcall	.+722    	; 0x130e <__fp_split3>
    103c:	98 f3       	brcs	.-26     	; 0x1024 <__divsf3+0x4>

0000103e <__divsf3_pse>:
    103e:	99 23       	and	r25, r25
    1040:	c9 f3       	breq	.-14     	; 0x1034 <__divsf3+0x14>
    1042:	55 23       	and	r21, r21
    1044:	b1 f3       	breq	.-20     	; 0x1032 <__divsf3+0x12>
    1046:	95 1b       	sub	r25, r21
    1048:	55 0b       	sbc	r21, r21
    104a:	bb 27       	eor	r27, r27
    104c:	aa 27       	eor	r26, r26
    104e:	62 17       	cp	r22, r18
    1050:	73 07       	cpc	r23, r19
    1052:	84 07       	cpc	r24, r20
    1054:	38 f0       	brcs	.+14     	; 0x1064 <__divsf3_pse+0x26>
    1056:	9f 5f       	subi	r25, 0xFF	; 255
    1058:	5f 4f       	sbci	r21, 0xFF	; 255
    105a:	22 0f       	add	r18, r18
    105c:	33 1f       	adc	r19, r19
    105e:	44 1f       	adc	r20, r20
    1060:	aa 1f       	adc	r26, r26
    1062:	a9 f3       	breq	.-22     	; 0x104e <__divsf3_pse+0x10>
    1064:	33 d0       	rcall	.+102    	; 0x10cc <__divsf3_pse+0x8e>
    1066:	0e 2e       	mov	r0, r30
    1068:	3a f0       	brmi	.+14     	; 0x1078 <__divsf3_pse+0x3a>
    106a:	e0 e8       	ldi	r30, 0x80	; 128
    106c:	30 d0       	rcall	.+96     	; 0x10ce <__divsf3_pse+0x90>
    106e:	91 50       	subi	r25, 0x01	; 1
    1070:	50 40       	sbci	r21, 0x00	; 0
    1072:	e6 95       	lsr	r30
    1074:	00 1c       	adc	r0, r0
    1076:	ca f7       	brpl	.-14     	; 0x106a <__divsf3_pse+0x2c>
    1078:	29 d0       	rcall	.+82     	; 0x10cc <__divsf3_pse+0x8e>
    107a:	fe 2f       	mov	r31, r30
    107c:	27 d0       	rcall	.+78     	; 0x10cc <__divsf3_pse+0x8e>
    107e:	66 0f       	add	r22, r22
    1080:	77 1f       	adc	r23, r23
    1082:	88 1f       	adc	r24, r24
    1084:	bb 1f       	adc	r27, r27
    1086:	26 17       	cp	r18, r22
    1088:	37 07       	cpc	r19, r23
    108a:	48 07       	cpc	r20, r24
    108c:	ab 07       	cpc	r26, r27
    108e:	b0 e8       	ldi	r27, 0x80	; 128
    1090:	09 f0       	breq	.+2      	; 0x1094 <__divsf3_pse+0x56>
    1092:	bb 0b       	sbc	r27, r27
    1094:	80 2d       	mov	r24, r0
    1096:	bf 01       	movw	r22, r30
    1098:	ff 27       	eor	r31, r31
    109a:	93 58       	subi	r25, 0x83	; 131
    109c:	5f 4f       	sbci	r21, 0xFF	; 255
    109e:	2a f0       	brmi	.+10     	; 0x10aa <__divsf3_pse+0x6c>
    10a0:	9e 3f       	cpi	r25, 0xFE	; 254
    10a2:	51 05       	cpc	r21, r1
    10a4:	68 f0       	brcs	.+26     	; 0x10c0 <__divsf3_pse+0x82>
    10a6:	ad c0       	rjmp	.+346    	; 0x1202 <__fp_inf>
    10a8:	55 c1       	rjmp	.+682    	; 0x1354 <__fp_szero>
    10aa:	5f 3f       	cpi	r21, 0xFF	; 255
    10ac:	ec f3       	brlt	.-6      	; 0x10a8 <__divsf3_pse+0x6a>
    10ae:	98 3e       	cpi	r25, 0xE8	; 232
    10b0:	dc f3       	brlt	.-10     	; 0x10a8 <__divsf3_pse+0x6a>
    10b2:	86 95       	lsr	r24
    10b4:	77 95       	ror	r23
    10b6:	67 95       	ror	r22
    10b8:	b7 95       	ror	r27
    10ba:	f7 95       	ror	r31
    10bc:	9f 5f       	subi	r25, 0xFF	; 255
    10be:	c9 f7       	brne	.-14     	; 0x10b2 <__divsf3_pse+0x74>
    10c0:	88 0f       	add	r24, r24
    10c2:	91 1d       	adc	r25, r1
    10c4:	96 95       	lsr	r25
    10c6:	87 95       	ror	r24
    10c8:	97 f9       	bld	r25, 7
    10ca:	08 95       	ret
    10cc:	e1 e0       	ldi	r30, 0x01	; 1
    10ce:	66 0f       	add	r22, r22
    10d0:	77 1f       	adc	r23, r23
    10d2:	88 1f       	adc	r24, r24
    10d4:	bb 1f       	adc	r27, r27
    10d6:	62 17       	cp	r22, r18
    10d8:	73 07       	cpc	r23, r19
    10da:	84 07       	cpc	r24, r20
    10dc:	ba 07       	cpc	r27, r26
    10de:	20 f0       	brcs	.+8      	; 0x10e8 <__divsf3_pse+0xaa>
    10e0:	62 1b       	sub	r22, r18
    10e2:	73 0b       	sbc	r23, r19
    10e4:	84 0b       	sbc	r24, r20
    10e6:	ba 0b       	sbc	r27, r26
    10e8:	ee 1f       	adc	r30, r30
    10ea:	88 f7       	brcc	.-30     	; 0x10ce <__divsf3_pse+0x90>
    10ec:	e0 95       	com	r30
    10ee:	08 95       	ret

000010f0 <__fixsfsi>:
    10f0:	04 d0       	rcall	.+8      	; 0x10fa <__fixunssfsi>
    10f2:	68 94       	set
    10f4:	b1 11       	cpse	r27, r1
    10f6:	2e c1       	rjmp	.+604    	; 0x1354 <__fp_szero>
    10f8:	08 95       	ret

000010fa <__fixunssfsi>:
    10fa:	11 d1       	rcall	.+546    	; 0x131e <__fp_splitA>
    10fc:	88 f0       	brcs	.+34     	; 0x1120 <__fixunssfsi+0x26>
    10fe:	9f 57       	subi	r25, 0x7F	; 127
    1100:	90 f0       	brcs	.+36     	; 0x1126 <__fixunssfsi+0x2c>
    1102:	b9 2f       	mov	r27, r25
    1104:	99 27       	eor	r25, r25
    1106:	b7 51       	subi	r27, 0x17	; 23
    1108:	a0 f0       	brcs	.+40     	; 0x1132 <__fixunssfsi+0x38>
    110a:	d1 f0       	breq	.+52     	; 0x1140 <__fixunssfsi+0x46>
    110c:	66 0f       	add	r22, r22
    110e:	77 1f       	adc	r23, r23
    1110:	88 1f       	adc	r24, r24
    1112:	99 1f       	adc	r25, r25
    1114:	1a f0       	brmi	.+6      	; 0x111c <__fixunssfsi+0x22>
    1116:	ba 95       	dec	r27
    1118:	c9 f7       	brne	.-14     	; 0x110c <__fixunssfsi+0x12>
    111a:	12 c0       	rjmp	.+36     	; 0x1140 <__fixunssfsi+0x46>
    111c:	b1 30       	cpi	r27, 0x01	; 1
    111e:	81 f0       	breq	.+32     	; 0x1140 <__fixunssfsi+0x46>
    1120:	18 d1       	rcall	.+560    	; 0x1352 <__fp_zero>
    1122:	b1 e0       	ldi	r27, 0x01	; 1
    1124:	08 95       	ret
    1126:	15 c1       	rjmp	.+554    	; 0x1352 <__fp_zero>
    1128:	67 2f       	mov	r22, r23
    112a:	78 2f       	mov	r23, r24
    112c:	88 27       	eor	r24, r24
    112e:	b8 5f       	subi	r27, 0xF8	; 248
    1130:	39 f0       	breq	.+14     	; 0x1140 <__fixunssfsi+0x46>
    1132:	b9 3f       	cpi	r27, 0xF9	; 249
    1134:	cc f3       	brlt	.-14     	; 0x1128 <__fixunssfsi+0x2e>
    1136:	86 95       	lsr	r24
    1138:	77 95       	ror	r23
    113a:	67 95       	ror	r22
    113c:	b3 95       	inc	r27
    113e:	d9 f7       	brne	.-10     	; 0x1136 <__fixunssfsi+0x3c>
    1140:	3e f4       	brtc	.+14     	; 0x1150 <__fixunssfsi+0x56>
    1142:	90 95       	com	r25
    1144:	80 95       	com	r24
    1146:	70 95       	com	r23
    1148:	61 95       	neg	r22
    114a:	7f 4f       	sbci	r23, 0xFF	; 255
    114c:	8f 4f       	sbci	r24, 0xFF	; 255
    114e:	9f 4f       	sbci	r25, 0xFF	; 255
    1150:	08 95       	ret

00001152 <__floatunsisf>:
    1152:	e8 94       	clt
    1154:	09 c0       	rjmp	.+18     	; 0x1168 <__floatsisf+0x12>

00001156 <__floatsisf>:
    1156:	97 fb       	bst	r25, 7
    1158:	3e f4       	brtc	.+14     	; 0x1168 <__floatsisf+0x12>
    115a:	90 95       	com	r25
    115c:	80 95       	com	r24
    115e:	70 95       	com	r23
    1160:	61 95       	neg	r22
    1162:	7f 4f       	sbci	r23, 0xFF	; 255
    1164:	8f 4f       	sbci	r24, 0xFF	; 255
    1166:	9f 4f       	sbci	r25, 0xFF	; 255
    1168:	99 23       	and	r25, r25
    116a:	a9 f0       	breq	.+42     	; 0x1196 <__floatsisf+0x40>
    116c:	f9 2f       	mov	r31, r25
    116e:	96 e9       	ldi	r25, 0x96	; 150
    1170:	bb 27       	eor	r27, r27
    1172:	93 95       	inc	r25
    1174:	f6 95       	lsr	r31
    1176:	87 95       	ror	r24
    1178:	77 95       	ror	r23
    117a:	67 95       	ror	r22
    117c:	b7 95       	ror	r27
    117e:	f1 11       	cpse	r31, r1
    1180:	f8 cf       	rjmp	.-16     	; 0x1172 <__floatsisf+0x1c>
    1182:	fa f4       	brpl	.+62     	; 0x11c2 <__floatsisf+0x6c>
    1184:	bb 0f       	add	r27, r27
    1186:	11 f4       	brne	.+4      	; 0x118c <__floatsisf+0x36>
    1188:	60 ff       	sbrs	r22, 0
    118a:	1b c0       	rjmp	.+54     	; 0x11c2 <__floatsisf+0x6c>
    118c:	6f 5f       	subi	r22, 0xFF	; 255
    118e:	7f 4f       	sbci	r23, 0xFF	; 255
    1190:	8f 4f       	sbci	r24, 0xFF	; 255
    1192:	9f 4f       	sbci	r25, 0xFF	; 255
    1194:	16 c0       	rjmp	.+44     	; 0x11c2 <__floatsisf+0x6c>
    1196:	88 23       	and	r24, r24
    1198:	11 f0       	breq	.+4      	; 0x119e <__floatsisf+0x48>
    119a:	96 e9       	ldi	r25, 0x96	; 150
    119c:	11 c0       	rjmp	.+34     	; 0x11c0 <__floatsisf+0x6a>
    119e:	77 23       	and	r23, r23
    11a0:	21 f0       	breq	.+8      	; 0x11aa <__floatsisf+0x54>
    11a2:	9e e8       	ldi	r25, 0x8E	; 142
    11a4:	87 2f       	mov	r24, r23
    11a6:	76 2f       	mov	r23, r22
    11a8:	05 c0       	rjmp	.+10     	; 0x11b4 <__floatsisf+0x5e>
    11aa:	66 23       	and	r22, r22
    11ac:	71 f0       	breq	.+28     	; 0x11ca <__floatsisf+0x74>
    11ae:	96 e8       	ldi	r25, 0x86	; 134
    11b0:	86 2f       	mov	r24, r22
    11b2:	70 e0       	ldi	r23, 0x00	; 0
    11b4:	60 e0       	ldi	r22, 0x00	; 0
    11b6:	2a f0       	brmi	.+10     	; 0x11c2 <__floatsisf+0x6c>
    11b8:	9a 95       	dec	r25
    11ba:	66 0f       	add	r22, r22
    11bc:	77 1f       	adc	r23, r23
    11be:	88 1f       	adc	r24, r24
    11c0:	da f7       	brpl	.-10     	; 0x11b8 <__floatsisf+0x62>
    11c2:	88 0f       	add	r24, r24
    11c4:	96 95       	lsr	r25
    11c6:	87 95       	ror	r24
    11c8:	97 f9       	bld	r25, 7
    11ca:	08 95       	ret

000011cc <__fp_arccos>:
    11cc:	df 93       	push	r29
    11ce:	cf 93       	push	r28
    11d0:	1f 93       	push	r17
    11d2:	0f 93       	push	r16
    11d4:	8b 01       	movw	r16, r22
    11d6:	ec 01       	movw	r28, r24
    11d8:	ec e8       	ldi	r30, 0x8C	; 140
    11da:	f0 e0       	ldi	r31, 0x00	; 0
    11dc:	1b d0       	rcall	.+54     	; 0x1214 <__fp_powser>
    11de:	75 d0       	rcall	.+234    	; 0x12ca <__fp_round>
    11e0:	98 01       	movw	r18, r16
    11e2:	ae 01       	movw	r20, r28
    11e4:	8b 01       	movw	r16, r22
    11e6:	ec 01       	movw	r28, r24
    11e8:	60 e0       	ldi	r22, 0x00	; 0
    11ea:	70 e0       	ldi	r23, 0x00	; 0
    11ec:	80 e8       	ldi	r24, 0x80	; 128
    11ee:	9f e3       	ldi	r25, 0x3F	; 63
    11f0:	af de       	rcall	.-674    	; 0xf50 <__subsf3>
    11f2:	81 d1       	rcall	.+770    	; 0x14f6 <sqrt>
    11f4:	98 01       	movw	r18, r16
    11f6:	ae 01       	movw	r20, r28
    11f8:	0f 91       	pop	r16
    11fa:	1f 91       	pop	r17
    11fc:	cf 91       	pop	r28
    11fe:	df 91       	pop	r29
    1200:	f9 c0       	rjmp	.+498    	; 0x13f4 <__mulsf3x>

00001202 <__fp_inf>:
    1202:	97 f9       	bld	r25, 7
    1204:	9f 67       	ori	r25, 0x7F	; 127
    1206:	80 e8       	ldi	r24, 0x80	; 128
    1208:	70 e0       	ldi	r23, 0x00	; 0
    120a:	60 e0       	ldi	r22, 0x00	; 0
    120c:	08 95       	ret

0000120e <__fp_nan>:
    120e:	9f ef       	ldi	r25, 0xFF	; 255
    1210:	80 ec       	ldi	r24, 0xC0	; 192
    1212:	08 95       	ret

00001214 <__fp_powser>:
    1214:	df 93       	push	r29
    1216:	cf 93       	push	r28
    1218:	1f 93       	push	r17
    121a:	0f 93       	push	r16
    121c:	ff 92       	push	r15
    121e:	ef 92       	push	r14
    1220:	df 92       	push	r13
    1222:	7b 01       	movw	r14, r22
    1224:	8c 01       	movw	r16, r24
    1226:	68 94       	set
    1228:	05 c0       	rjmp	.+10     	; 0x1234 <__fp_powser+0x20>
    122a:	da 2e       	mov	r13, r26
    122c:	ef 01       	movw	r28, r30
    122e:	e2 d0       	rcall	.+452    	; 0x13f4 <__mulsf3x>
    1230:	fe 01       	movw	r30, r28
    1232:	e8 94       	clt
    1234:	a5 91       	lpm	r26, Z+
    1236:	25 91       	lpm	r18, Z+
    1238:	35 91       	lpm	r19, Z+
    123a:	45 91       	lpm	r20, Z+
    123c:	55 91       	lpm	r21, Z+
    123e:	ae f3       	brts	.-22     	; 0x122a <__fp_powser+0x16>
    1240:	ef 01       	movw	r28, r30
    1242:	98 de       	rcall	.-720    	; 0xf74 <__addsf3x>
    1244:	fe 01       	movw	r30, r28
    1246:	97 01       	movw	r18, r14
    1248:	a8 01       	movw	r20, r16
    124a:	da 94       	dec	r13
    124c:	79 f7       	brne	.-34     	; 0x122c <__fp_powser+0x18>
    124e:	df 90       	pop	r13
    1250:	ef 90       	pop	r14
    1252:	ff 90       	pop	r15
    1254:	0f 91       	pop	r16
    1256:	1f 91       	pop	r17
    1258:	cf 91       	pop	r28
    125a:	df 91       	pop	r29
    125c:	08 95       	ret

0000125e <__fp_pscA>:
    125e:	00 24       	eor	r0, r0
    1260:	0a 94       	dec	r0
    1262:	16 16       	cp	r1, r22
    1264:	17 06       	cpc	r1, r23
    1266:	18 06       	cpc	r1, r24
    1268:	09 06       	cpc	r0, r25
    126a:	08 95       	ret

0000126c <__fp_pscB>:
    126c:	00 24       	eor	r0, r0
    126e:	0a 94       	dec	r0
    1270:	12 16       	cp	r1, r18
    1272:	13 06       	cpc	r1, r19
    1274:	14 06       	cpc	r1, r20
    1276:	05 06       	cpc	r0, r21
    1278:	08 95       	ret
    127a:	c9 cf       	rjmp	.-110    	; 0x120e <__fp_nan>

0000127c <__fp_rempio2>:
    127c:	50 d0       	rcall	.+160    	; 0x131e <__fp_splitA>
    127e:	e8 f3       	brcs	.-6      	; 0x127a <__fp_pscB+0xe>
    1280:	e8 94       	clt
    1282:	e0 e0       	ldi	r30, 0x00	; 0
    1284:	bb 27       	eor	r27, r27
    1286:	9f 57       	subi	r25, 0x7F	; 127
    1288:	f0 f0       	brcs	.+60     	; 0x12c6 <__fp_rempio2+0x4a>
    128a:	2a ed       	ldi	r18, 0xDA	; 218
    128c:	3f e0       	ldi	r19, 0x0F	; 15
    128e:	49 ec       	ldi	r20, 0xC9	; 201
    1290:	06 c0       	rjmp	.+12     	; 0x129e <__fp_rempio2+0x22>
    1292:	ee 0f       	add	r30, r30
    1294:	bb 0f       	add	r27, r27
    1296:	66 1f       	adc	r22, r22
    1298:	77 1f       	adc	r23, r23
    129a:	88 1f       	adc	r24, r24
    129c:	28 f0       	brcs	.+10     	; 0x12a8 <__fp_rempio2+0x2c>
    129e:	b2 3a       	cpi	r27, 0xA2	; 162
    12a0:	62 07       	cpc	r22, r18
    12a2:	73 07       	cpc	r23, r19
    12a4:	84 07       	cpc	r24, r20
    12a6:	28 f0       	brcs	.+10     	; 0x12b2 <__fp_rempio2+0x36>
    12a8:	b2 5a       	subi	r27, 0xA2	; 162
    12aa:	62 0b       	sbc	r22, r18
    12ac:	73 0b       	sbc	r23, r19
    12ae:	84 0b       	sbc	r24, r20
    12b0:	e3 95       	inc	r30
    12b2:	9a 95       	dec	r25
    12b4:	72 f7       	brpl	.-36     	; 0x1292 <__fp_rempio2+0x16>
    12b6:	80 38       	cpi	r24, 0x80	; 128
    12b8:	30 f4       	brcc	.+12     	; 0x12c6 <__fp_rempio2+0x4a>
    12ba:	9a 95       	dec	r25
    12bc:	bb 0f       	add	r27, r27
    12be:	66 1f       	adc	r22, r22
    12c0:	77 1f       	adc	r23, r23
    12c2:	88 1f       	adc	r24, r24
    12c4:	d2 f7       	brpl	.-12     	; 0x12ba <__fp_rempio2+0x3e>
    12c6:	90 48       	sbci	r25, 0x80	; 128
    12c8:	95 c1       	rjmp	.+810    	; 0x15f4 <__fp_mpack_finite>

000012ca <__fp_round>:
    12ca:	09 2e       	mov	r0, r25
    12cc:	03 94       	inc	r0
    12ce:	00 0c       	add	r0, r0
    12d0:	11 f4       	brne	.+4      	; 0x12d6 <__fp_round+0xc>
    12d2:	88 23       	and	r24, r24
    12d4:	52 f0       	brmi	.+20     	; 0x12ea <__fp_round+0x20>
    12d6:	bb 0f       	add	r27, r27
    12d8:	40 f4       	brcc	.+16     	; 0x12ea <__fp_round+0x20>
    12da:	bf 2b       	or	r27, r31
    12dc:	11 f4       	brne	.+4      	; 0x12e2 <__fp_round+0x18>
    12de:	60 ff       	sbrs	r22, 0
    12e0:	04 c0       	rjmp	.+8      	; 0x12ea <__fp_round+0x20>
    12e2:	6f 5f       	subi	r22, 0xFF	; 255
    12e4:	7f 4f       	sbci	r23, 0xFF	; 255
    12e6:	8f 4f       	sbci	r24, 0xFF	; 255
    12e8:	9f 4f       	sbci	r25, 0xFF	; 255
    12ea:	08 95       	ret

000012ec <__fp_sinus>:
    12ec:	ef 93       	push	r30
    12ee:	e0 ff       	sbrs	r30, 0
    12f0:	06 c0       	rjmp	.+12     	; 0x12fe <__fp_sinus+0x12>
    12f2:	a2 ea       	ldi	r26, 0xA2	; 162
    12f4:	2a ed       	ldi	r18, 0xDA	; 218
    12f6:	3f e0       	ldi	r19, 0x0F	; 15
    12f8:	49 ec       	ldi	r20, 0xC9	; 201
    12fa:	5f eb       	ldi	r21, 0xBF	; 191
    12fc:	3b de       	rcall	.-906    	; 0xf74 <__addsf3x>
    12fe:	e5 df       	rcall	.-54     	; 0x12ca <__fp_round>
    1300:	0f 90       	pop	r0
    1302:	03 94       	inc	r0
    1304:	01 fc       	sbrc	r0, 1
    1306:	90 58       	subi	r25, 0x80	; 128
    1308:	e4 eb       	ldi	r30, 0xB4	; 180
    130a:	f0 e0       	ldi	r31, 0x00	; 0
    130c:	86 c1       	rjmp	.+780    	; 0x161a <__fp_powsodd>

0000130e <__fp_split3>:
    130e:	57 fd       	sbrc	r21, 7
    1310:	90 58       	subi	r25, 0x80	; 128
    1312:	44 0f       	add	r20, r20
    1314:	55 1f       	adc	r21, r21
    1316:	59 f0       	breq	.+22     	; 0x132e <__fp_splitA+0x10>
    1318:	5f 3f       	cpi	r21, 0xFF	; 255
    131a:	71 f0       	breq	.+28     	; 0x1338 <__fp_splitA+0x1a>
    131c:	47 95       	ror	r20

0000131e <__fp_splitA>:
    131e:	88 0f       	add	r24, r24
    1320:	97 fb       	bst	r25, 7
    1322:	99 1f       	adc	r25, r25
    1324:	61 f0       	breq	.+24     	; 0x133e <__fp_splitA+0x20>
    1326:	9f 3f       	cpi	r25, 0xFF	; 255
    1328:	79 f0       	breq	.+30     	; 0x1348 <__fp_splitA+0x2a>
    132a:	87 95       	ror	r24
    132c:	08 95       	ret
    132e:	12 16       	cp	r1, r18
    1330:	13 06       	cpc	r1, r19
    1332:	14 06       	cpc	r1, r20
    1334:	55 1f       	adc	r21, r21
    1336:	f2 cf       	rjmp	.-28     	; 0x131c <__fp_split3+0xe>
    1338:	46 95       	lsr	r20
    133a:	f1 df       	rcall	.-30     	; 0x131e <__fp_splitA>
    133c:	08 c0       	rjmp	.+16     	; 0x134e <__fp_splitA+0x30>
    133e:	16 16       	cp	r1, r22
    1340:	17 06       	cpc	r1, r23
    1342:	18 06       	cpc	r1, r24
    1344:	99 1f       	adc	r25, r25
    1346:	f1 cf       	rjmp	.-30     	; 0x132a <__fp_splitA+0xc>
    1348:	86 95       	lsr	r24
    134a:	71 05       	cpc	r23, r1
    134c:	61 05       	cpc	r22, r1
    134e:	08 94       	sec
    1350:	08 95       	ret

00001352 <__fp_zero>:
    1352:	e8 94       	clt

00001354 <__fp_szero>:
    1354:	bb 27       	eor	r27, r27
    1356:	66 27       	eor	r22, r22
    1358:	77 27       	eor	r23, r23
    135a:	cb 01       	movw	r24, r22
    135c:	97 f9       	bld	r25, 7
    135e:	08 95       	ret

00001360 <__gesf2>:
    1360:	08 d1       	rcall	.+528    	; 0x1572 <__fp_cmp>
    1362:	08 f4       	brcc	.+2      	; 0x1366 <__gesf2+0x6>
    1364:	8f ef       	ldi	r24, 0xFF	; 255
    1366:	08 95       	ret

00001368 <lrint>:
    1368:	da df       	rcall	.-76     	; 0x131e <__fp_splitA>
    136a:	a8 f1       	brcs	.+106    	; 0x13d6 <lrint+0x6e>
    136c:	9e 57       	subi	r25, 0x7E	; 126
    136e:	a8 f1       	brcs	.+106    	; 0x13da <lrint+0x72>
    1370:	98 51       	subi	r25, 0x18	; 24
    1372:	60 f0       	brcs	.+24     	; 0x138c <lrint+0x24>
    1374:	39 f1       	breq	.+78     	; 0x13c4 <lrint+0x5c>
    1376:	98 30       	cpi	r25, 0x08	; 8
    1378:	70 f5       	brcc	.+92     	; 0x13d6 <lrint+0x6e>
    137a:	09 2e       	mov	r0, r25
    137c:	99 27       	eor	r25, r25
    137e:	66 0f       	add	r22, r22
    1380:	77 1f       	adc	r23, r23
    1382:	88 1f       	adc	r24, r24
    1384:	99 1f       	adc	r25, r25
    1386:	0a 94       	dec	r0
    1388:	d1 f7       	brne	.-12     	; 0x137e <lrint+0x16>
    138a:	1c c0       	rjmp	.+56     	; 0x13c4 <lrint+0x5c>
    138c:	bb 27       	eor	r27, r27
    138e:	99 3f       	cpi	r25, 0xF9	; 249
    1390:	4c f4       	brge	.+18     	; 0x13a4 <lrint+0x3c>
    1392:	b1 11       	cpse	r27, r1
    1394:	b1 e0       	ldi	r27, 0x01	; 1
    1396:	b6 2b       	or	r27, r22
    1398:	67 2f       	mov	r22, r23
    139a:	78 2f       	mov	r23, r24
    139c:	88 27       	eor	r24, r24
    139e:	98 5f       	subi	r25, 0xF8	; 248
    13a0:	b1 f7       	brne	.-20     	; 0x138e <lrint+0x26>
    13a2:	08 c0       	rjmp	.+16     	; 0x13b4 <lrint+0x4c>
    13a4:	86 95       	lsr	r24
    13a6:	77 95       	ror	r23
    13a8:	67 95       	ror	r22
    13aa:	b7 95       	ror	r27
    13ac:	08 f4       	brcc	.+2      	; 0x13b0 <lrint+0x48>
    13ae:	b1 60       	ori	r27, 0x01	; 1
    13b0:	93 95       	inc	r25
    13b2:	c1 f7       	brne	.-16     	; 0x13a4 <lrint+0x3c>
    13b4:	bb 0f       	add	r27, r27
    13b6:	30 f4       	brcc	.+12     	; 0x13c4 <lrint+0x5c>
    13b8:	11 f4       	brne	.+4      	; 0x13be <lrint+0x56>
    13ba:	60 ff       	sbrs	r22, 0
    13bc:	03 c0       	rjmp	.+6      	; 0x13c4 <lrint+0x5c>
    13be:	6f 5f       	subi	r22, 0xFF	; 255
    13c0:	7f 4f       	sbci	r23, 0xFF	; 255
    13c2:	8f 4f       	sbci	r24, 0xFF	; 255
    13c4:	3e f4       	brtc	.+14     	; 0x13d4 <lrint+0x6c>
    13c6:	90 95       	com	r25
    13c8:	80 95       	com	r24
    13ca:	70 95       	com	r23
    13cc:	61 95       	neg	r22
    13ce:	7f 4f       	sbci	r23, 0xFF	; 255
    13d0:	8f 4f       	sbci	r24, 0xFF	; 255
    13d2:	9f 4f       	sbci	r25, 0xFF	; 255
    13d4:	08 95       	ret
    13d6:	68 94       	set
    13d8:	bd cf       	rjmp	.-134    	; 0x1354 <__fp_szero>
    13da:	bb cf       	rjmp	.-138    	; 0x1352 <__fp_zero>

000013dc <__mulsf3>:
    13dc:	0b d0       	rcall	.+22     	; 0x13f4 <__mulsf3x>
    13de:	75 cf       	rjmp	.-278    	; 0x12ca <__fp_round>
    13e0:	3e df       	rcall	.-388    	; 0x125e <__fp_pscA>
    13e2:	28 f0       	brcs	.+10     	; 0x13ee <__mulsf3+0x12>
    13e4:	43 df       	rcall	.-378    	; 0x126c <__fp_pscB>
    13e6:	18 f0       	brcs	.+6      	; 0x13ee <__mulsf3+0x12>
    13e8:	95 23       	and	r25, r21
    13ea:	09 f0       	breq	.+2      	; 0x13ee <__mulsf3+0x12>
    13ec:	0a cf       	rjmp	.-492    	; 0x1202 <__fp_inf>
    13ee:	0f cf       	rjmp	.-482    	; 0x120e <__fp_nan>
    13f0:	11 24       	eor	r1, r1
    13f2:	b0 cf       	rjmp	.-160    	; 0x1354 <__fp_szero>

000013f4 <__mulsf3x>:
    13f4:	8c df       	rcall	.-232    	; 0x130e <__fp_split3>
    13f6:	a0 f3       	brcs	.-24     	; 0x13e0 <__mulsf3+0x4>

000013f8 <__mulsf3_pse>:
    13f8:	95 9f       	mul	r25, r21
    13fa:	d1 f3       	breq	.-12     	; 0x13f0 <__mulsf3+0x14>
    13fc:	95 0f       	add	r25, r21
    13fe:	50 e0       	ldi	r21, 0x00	; 0
    1400:	55 1f       	adc	r21, r21
    1402:	62 9f       	mul	r22, r18
    1404:	f0 01       	movw	r30, r0
    1406:	72 9f       	mul	r23, r18
    1408:	bb 27       	eor	r27, r27
    140a:	f0 0d       	add	r31, r0
    140c:	b1 1d       	adc	r27, r1
    140e:	63 9f       	mul	r22, r19
    1410:	aa 27       	eor	r26, r26
    1412:	f0 0d       	add	r31, r0
    1414:	b1 1d       	adc	r27, r1
    1416:	aa 1f       	adc	r26, r26
    1418:	64 9f       	mul	r22, r20
    141a:	66 27       	eor	r22, r22
    141c:	b0 0d       	add	r27, r0
    141e:	a1 1d       	adc	r26, r1
    1420:	66 1f       	adc	r22, r22
    1422:	82 9f       	mul	r24, r18
    1424:	22 27       	eor	r18, r18
    1426:	b0 0d       	add	r27, r0
    1428:	a1 1d       	adc	r26, r1
    142a:	62 1f       	adc	r22, r18
    142c:	73 9f       	mul	r23, r19
    142e:	b0 0d       	add	r27, r0
    1430:	a1 1d       	adc	r26, r1
    1432:	62 1f       	adc	r22, r18
    1434:	83 9f       	mul	r24, r19
    1436:	a0 0d       	add	r26, r0
    1438:	61 1d       	adc	r22, r1
    143a:	22 1f       	adc	r18, r18
    143c:	74 9f       	mul	r23, r20
    143e:	33 27       	eor	r19, r19
    1440:	a0 0d       	add	r26, r0
    1442:	61 1d       	adc	r22, r1
    1444:	23 1f       	adc	r18, r19
    1446:	84 9f       	mul	r24, r20
    1448:	60 0d       	add	r22, r0
    144a:	21 1d       	adc	r18, r1
    144c:	82 2f       	mov	r24, r18
    144e:	76 2f       	mov	r23, r22
    1450:	6a 2f       	mov	r22, r26
    1452:	11 24       	eor	r1, r1
    1454:	9f 57       	subi	r25, 0x7F	; 127
    1456:	50 40       	sbci	r21, 0x00	; 0
    1458:	8a f0       	brmi	.+34     	; 0x147c <__mulsf3_pse+0x84>
    145a:	e1 f0       	breq	.+56     	; 0x1494 <__mulsf3_pse+0x9c>
    145c:	88 23       	and	r24, r24
    145e:	4a f0       	brmi	.+18     	; 0x1472 <__mulsf3_pse+0x7a>
    1460:	ee 0f       	add	r30, r30
    1462:	ff 1f       	adc	r31, r31
    1464:	bb 1f       	adc	r27, r27
    1466:	66 1f       	adc	r22, r22
    1468:	77 1f       	adc	r23, r23
    146a:	88 1f       	adc	r24, r24
    146c:	91 50       	subi	r25, 0x01	; 1
    146e:	50 40       	sbci	r21, 0x00	; 0
    1470:	a9 f7       	brne	.-22     	; 0x145c <__mulsf3_pse+0x64>
    1472:	9e 3f       	cpi	r25, 0xFE	; 254
    1474:	51 05       	cpc	r21, r1
    1476:	70 f0       	brcs	.+28     	; 0x1494 <__mulsf3_pse+0x9c>
    1478:	c4 ce       	rjmp	.-632    	; 0x1202 <__fp_inf>
    147a:	6c cf       	rjmp	.-296    	; 0x1354 <__fp_szero>
    147c:	5f 3f       	cpi	r21, 0xFF	; 255
    147e:	ec f3       	brlt	.-6      	; 0x147a <__mulsf3_pse+0x82>
    1480:	98 3e       	cpi	r25, 0xE8	; 232
    1482:	dc f3       	brlt	.-10     	; 0x147a <__mulsf3_pse+0x82>
    1484:	86 95       	lsr	r24
    1486:	77 95       	ror	r23
    1488:	67 95       	ror	r22
    148a:	b7 95       	ror	r27
    148c:	f7 95       	ror	r31
    148e:	e7 95       	ror	r30
    1490:	9f 5f       	subi	r25, 0xFF	; 255
    1492:	c1 f7       	brne	.-16     	; 0x1484 <__mulsf3_pse+0x8c>
    1494:	fe 2b       	or	r31, r30
    1496:	88 0f       	add	r24, r24
    1498:	91 1d       	adc	r25, r1
    149a:	96 95       	lsr	r25
    149c:	87 95       	ror	r24
    149e:	97 f9       	bld	r25, 7
    14a0:	08 95       	ret

000014a2 <round>:
    14a2:	3d df       	rcall	.-390    	; 0x131e <__fp_splitA>
    14a4:	e0 f0       	brcs	.+56     	; 0x14de <round+0x3c>
    14a6:	9e 37       	cpi	r25, 0x7E	; 126
    14a8:	d8 f0       	brcs	.+54     	; 0x14e0 <round+0x3e>
    14aa:	96 39       	cpi	r25, 0x96	; 150
    14ac:	b8 f4       	brcc	.+46     	; 0x14dc <round+0x3a>
    14ae:	9e 38       	cpi	r25, 0x8E	; 142
    14b0:	48 f4       	brcc	.+18     	; 0x14c4 <round+0x22>
    14b2:	67 2f       	mov	r22, r23
    14b4:	78 2f       	mov	r23, r24
    14b6:	88 27       	eor	r24, r24
    14b8:	98 5f       	subi	r25, 0xF8	; 248
    14ba:	f9 cf       	rjmp	.-14     	; 0x14ae <round+0xc>
    14bc:	86 95       	lsr	r24
    14be:	77 95       	ror	r23
    14c0:	67 95       	ror	r22
    14c2:	93 95       	inc	r25
    14c4:	95 39       	cpi	r25, 0x95	; 149
    14c6:	d0 f3       	brcs	.-12     	; 0x14bc <round+0x1a>
    14c8:	b6 2f       	mov	r27, r22
    14ca:	b1 70       	andi	r27, 0x01	; 1
    14cc:	6b 0f       	add	r22, r27
    14ce:	71 1d       	adc	r23, r1
    14d0:	81 1d       	adc	r24, r1
    14d2:	20 f4       	brcc	.+8      	; 0x14dc <round+0x3a>
    14d4:	87 95       	ror	r24
    14d6:	77 95       	ror	r23
    14d8:	67 95       	ror	r22
    14da:	93 95       	inc	r25
    14dc:	6e c0       	rjmp	.+220    	; 0x15ba <__fp_mintl>
    14de:	88 c0       	rjmp	.+272    	; 0x15f0 <__fp_mpack>
    14e0:	39 cf       	rjmp	.-398    	; 0x1354 <__fp_szero>

000014e2 <sin>:
    14e2:	9f 93       	push	r25
    14e4:	cb de       	rcall	.-618    	; 0x127c <__fp_rempio2>
    14e6:	0f 90       	pop	r0
    14e8:	07 fc       	sbrc	r0, 7
    14ea:	ee 5f       	subi	r30, 0xFE	; 254
    14ec:	ff ce       	rjmp	.-514    	; 0x12ec <__fp_sinus>
    14ee:	11 f4       	brne	.+4      	; 0x14f4 <sin+0x12>
    14f0:	0e f4       	brtc	.+2      	; 0x14f4 <sin+0x12>
    14f2:	8d ce       	rjmp	.-742    	; 0x120e <__fp_nan>
    14f4:	7d c0       	rjmp	.+250    	; 0x15f0 <__fp_mpack>

000014f6 <sqrt>:
    14f6:	13 df       	rcall	.-474    	; 0x131e <__fp_splitA>
    14f8:	d0 f3       	brcs	.-12     	; 0x14ee <sin+0xc>
    14fa:	99 23       	and	r25, r25
    14fc:	d9 f3       	breq	.-10     	; 0x14f4 <sin+0x12>
    14fe:	ce f3       	brts	.-14     	; 0x14f2 <sin+0x10>
    1500:	9f 57       	subi	r25, 0x7F	; 127
    1502:	55 0b       	sbc	r21, r21
    1504:	87 ff       	sbrs	r24, 7
    1506:	82 d0       	rcall	.+260    	; 0x160c <__fp_norm2>
    1508:	00 24       	eor	r0, r0
    150a:	a0 e6       	ldi	r26, 0x60	; 96
    150c:	40 ea       	ldi	r20, 0xA0	; 160
    150e:	90 01       	movw	r18, r0
    1510:	80 58       	subi	r24, 0x80	; 128
    1512:	56 95       	lsr	r21
    1514:	97 95       	ror	r25
    1516:	28 f4       	brcc	.+10     	; 0x1522 <sqrt+0x2c>
    1518:	80 5c       	subi	r24, 0xC0	; 192
    151a:	66 0f       	add	r22, r22
    151c:	77 1f       	adc	r23, r23
    151e:	88 1f       	adc	r24, r24
    1520:	20 f0       	brcs	.+8      	; 0x152a <sqrt+0x34>
    1522:	26 17       	cp	r18, r22
    1524:	37 07       	cpc	r19, r23
    1526:	48 07       	cpc	r20, r24
    1528:	30 f4       	brcc	.+12     	; 0x1536 <sqrt+0x40>
    152a:	62 1b       	sub	r22, r18
    152c:	73 0b       	sbc	r23, r19
    152e:	84 0b       	sbc	r24, r20
    1530:	20 29       	or	r18, r0
    1532:	31 29       	or	r19, r1
    1534:	4a 2b       	or	r20, r26
    1536:	a6 95       	lsr	r26
    1538:	17 94       	ror	r1
    153a:	07 94       	ror	r0
    153c:	20 25       	eor	r18, r0
    153e:	31 25       	eor	r19, r1
    1540:	4a 27       	eor	r20, r26
    1542:	58 f7       	brcc	.-42     	; 0x151a <sqrt+0x24>
    1544:	66 0f       	add	r22, r22
    1546:	77 1f       	adc	r23, r23
    1548:	88 1f       	adc	r24, r24
    154a:	20 f0       	brcs	.+8      	; 0x1554 <sqrt+0x5e>
    154c:	26 17       	cp	r18, r22
    154e:	37 07       	cpc	r19, r23
    1550:	48 07       	cpc	r20, r24
    1552:	30 f4       	brcc	.+12     	; 0x1560 <sqrt+0x6a>
    1554:	62 0b       	sbc	r22, r18
    1556:	73 0b       	sbc	r23, r19
    1558:	84 0b       	sbc	r24, r20
    155a:	20 0d       	add	r18, r0
    155c:	31 1d       	adc	r19, r1
    155e:	41 1d       	adc	r20, r1
    1560:	a0 95       	com	r26
    1562:	81 f7       	brne	.-32     	; 0x1544 <sqrt+0x4e>
    1564:	b9 01       	movw	r22, r18
    1566:	84 2f       	mov	r24, r20
    1568:	91 58       	subi	r25, 0x81	; 129
    156a:	88 0f       	add	r24, r24
    156c:	96 95       	lsr	r25
    156e:	87 95       	ror	r24
    1570:	08 95       	ret

00001572 <__fp_cmp>:
    1572:	99 0f       	add	r25, r25
    1574:	00 08       	sbc	r0, r0
    1576:	55 0f       	add	r21, r21
    1578:	aa 0b       	sbc	r26, r26
    157a:	e0 e8       	ldi	r30, 0x80	; 128
    157c:	fe ef       	ldi	r31, 0xFE	; 254
    157e:	16 16       	cp	r1, r22
    1580:	17 06       	cpc	r1, r23
    1582:	e8 07       	cpc	r30, r24
    1584:	f9 07       	cpc	r31, r25
    1586:	c0 f0       	brcs	.+48     	; 0x15b8 <__fp_cmp+0x46>
    1588:	12 16       	cp	r1, r18
    158a:	13 06       	cpc	r1, r19
    158c:	e4 07       	cpc	r30, r20
    158e:	f5 07       	cpc	r31, r21
    1590:	98 f0       	brcs	.+38     	; 0x15b8 <__fp_cmp+0x46>
    1592:	62 1b       	sub	r22, r18
    1594:	73 0b       	sbc	r23, r19
    1596:	84 0b       	sbc	r24, r20
    1598:	95 0b       	sbc	r25, r21
    159a:	39 f4       	brne	.+14     	; 0x15aa <__fp_cmp+0x38>
    159c:	0a 26       	eor	r0, r26
    159e:	61 f0       	breq	.+24     	; 0x15b8 <__fp_cmp+0x46>
    15a0:	23 2b       	or	r18, r19
    15a2:	24 2b       	or	r18, r20
    15a4:	25 2b       	or	r18, r21
    15a6:	21 f4       	brne	.+8      	; 0x15b0 <__fp_cmp+0x3e>
    15a8:	08 95       	ret
    15aa:	0a 26       	eor	r0, r26
    15ac:	09 f4       	brne	.+2      	; 0x15b0 <__fp_cmp+0x3e>
    15ae:	a1 40       	sbci	r26, 0x01	; 1
    15b0:	a6 95       	lsr	r26
    15b2:	8f ef       	ldi	r24, 0xFF	; 255
    15b4:	81 1d       	adc	r24, r1
    15b6:	81 1d       	adc	r24, r1
    15b8:	08 95       	ret

000015ba <__fp_mintl>:
    15ba:	88 23       	and	r24, r24
    15bc:	71 f4       	brne	.+28     	; 0x15da <__fp_mintl+0x20>
    15be:	77 23       	and	r23, r23
    15c0:	21 f0       	breq	.+8      	; 0x15ca <__fp_mintl+0x10>
    15c2:	98 50       	subi	r25, 0x08	; 8
    15c4:	87 2b       	or	r24, r23
    15c6:	76 2f       	mov	r23, r22
    15c8:	07 c0       	rjmp	.+14     	; 0x15d8 <__fp_mintl+0x1e>
    15ca:	66 23       	and	r22, r22
    15cc:	11 f4       	brne	.+4      	; 0x15d2 <__fp_mintl+0x18>
    15ce:	99 27       	eor	r25, r25
    15d0:	0d c0       	rjmp	.+26     	; 0x15ec <__fp_mintl+0x32>
    15d2:	90 51       	subi	r25, 0x10	; 16
    15d4:	86 2b       	or	r24, r22
    15d6:	70 e0       	ldi	r23, 0x00	; 0
    15d8:	60 e0       	ldi	r22, 0x00	; 0
    15da:	2a f0       	brmi	.+10     	; 0x15e6 <__fp_mintl+0x2c>
    15dc:	9a 95       	dec	r25
    15de:	66 0f       	add	r22, r22
    15e0:	77 1f       	adc	r23, r23
    15e2:	88 1f       	adc	r24, r24
    15e4:	da f7       	brpl	.-10     	; 0x15dc <__fp_mintl+0x22>
    15e6:	88 0f       	add	r24, r24
    15e8:	96 95       	lsr	r25
    15ea:	87 95       	ror	r24
    15ec:	97 f9       	bld	r25, 7
    15ee:	08 95       	ret

000015f0 <__fp_mpack>:
    15f0:	9f 3f       	cpi	r25, 0xFF	; 255
    15f2:	31 f0       	breq	.+12     	; 0x1600 <__fp_mpack_finite+0xc>

000015f4 <__fp_mpack_finite>:
    15f4:	91 50       	subi	r25, 0x01	; 1
    15f6:	20 f4       	brcc	.+8      	; 0x1600 <__fp_mpack_finite+0xc>
    15f8:	87 95       	ror	r24
    15fa:	77 95       	ror	r23
    15fc:	67 95       	ror	r22
    15fe:	b7 95       	ror	r27
    1600:	88 0f       	add	r24, r24
    1602:	91 1d       	adc	r25, r1
    1604:	96 95       	lsr	r25
    1606:	87 95       	ror	r24
    1608:	97 f9       	bld	r25, 7
    160a:	08 95       	ret

0000160c <__fp_norm2>:
    160c:	91 50       	subi	r25, 0x01	; 1
    160e:	50 40       	sbci	r21, 0x00	; 0
    1610:	66 0f       	add	r22, r22
    1612:	77 1f       	adc	r23, r23
    1614:	88 1f       	adc	r24, r24
    1616:	d2 f7       	brpl	.-12     	; 0x160c <__fp_norm2>
    1618:	08 95       	ret

0000161a <__fp_powsodd>:
    161a:	9f 93       	push	r25
    161c:	8f 93       	push	r24
    161e:	7f 93       	push	r23
    1620:	6f 93       	push	r22
    1622:	ff 93       	push	r31
    1624:	ef 93       	push	r30
    1626:	9b 01       	movw	r18, r22
    1628:	ac 01       	movw	r20, r24
    162a:	d8 de       	rcall	.-592    	; 0x13dc <__mulsf3>
    162c:	ef 91       	pop	r30
    162e:	ff 91       	pop	r31
    1630:	f1 dd       	rcall	.-1054   	; 0x1214 <__fp_powser>
    1632:	2f 91       	pop	r18
    1634:	3f 91       	pop	r19
    1636:	4f 91       	pop	r20
    1638:	5f 91       	pop	r21
    163a:	d0 ce       	rjmp	.-608    	; 0x13dc <__mulsf3>

0000163c <_exit>:
    163c:	f8 94       	cli

0000163e <__stop_program>:
    163e:	ff cf       	rjmp	.-2      	; 0x163e <__stop_program>
